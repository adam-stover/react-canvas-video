!function(e){var t={};function n(r){if(t[r])return t[r].exports;var i=t[r]={i:r,l:!1,exports:{}};return e[r].call(i.exports,i,i.exports,n),i.l=!0,i.exports}n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var i in e)n.d(r,i,function(t){return e[t]}.bind(null,i));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=23)}([function(e,t,n){"use strict";e.exports=n(10)},function(e,t,n){"use strict";!function e(){if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE){0;try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)}catch(e){console.error(e)}}}(),e.exports=n(11)},function(e,t,n){"use strict";e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n=function(e,t){var n=e[1]||"",r=e[3];if(!r)return n;if(t&&"function"==typeof btoa){var i=(a=r,l=btoa(unescape(encodeURIComponent(JSON.stringify(a)))),u="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(l),"/*# ".concat(u," */")),o=r.sources.map((function(e){return"/*# sourceURL=".concat(r.sourceRoot||"").concat(e," */")}));return[n].concat(o).concat([i]).join("\n")}var a,l,u;return[n].join("\n")}(t,e);return t[2]?"@media ".concat(t[2]," {").concat(n,"}"):n})).join("")},t.i=function(e,n,r){"string"==typeof e&&(e=[[null,e,""]]);var i={};if(r)for(var o=0;o<this.length;o++){var a=this[o][0];null!=a&&(i[a]=!0)}for(var l=0;l<e.length;l++){var u=[].concat(e[l]);r&&i[u[0]]||(n&&(u[2]?u[2]="".concat(n," and ").concat(u[2]):u[2]=n),t.push(u))}},t}},function(e,t,n){"use strict";e.exports=n(17)},function(e,t,n){"use strict";var r=n(3),i={childContextTypes:!0,contextType:!0,contextTypes:!0,defaultProps:!0,displayName:!0,getDefaultProps:!0,getDerivedStateFromError:!0,getDerivedStateFromProps:!0,mixins:!0,propTypes:!0,type:!0},o={name:!0,length:!0,prototype:!0,caller:!0,callee:!0,arguments:!0,arity:!0},a={$$typeof:!0,compare:!0,defaultProps:!0,displayName:!0,propTypes:!0,type:!0},l={};function u(e){return r.isMemo(e)?a:l[e.$$typeof]||i}l[r.ForwardRef]={$$typeof:!0,render:!0,defaultProps:!0,displayName:!0,propTypes:!0},l[r.Memo]=a;var c=Object.defineProperty,f=Object.getOwnPropertyNames,s=Object.getOwnPropertySymbols,d=Object.getOwnPropertyDescriptor,p=Object.getPrototypeOf,m=Object.prototype;e.exports=function e(t,n,r){if("string"!=typeof n){if(m){var i=p(n);i&&i!==m&&e(t,i,r)}var a=f(n);s&&(a=a.concat(s(n)));for(var l=u(t),h=u(n),v=0;v<a.length;++v){var y=a[v];if(!(o[y]||r&&r[y]||h&&h[y]||l&&l[y])){var g=d(n,y);try{c(t,y,g)}catch(e){}}}}return t}},function(e,t,n){"use strict";(function(e,r){var i,o=n(9);i="undefined"!=typeof self?self:"undefined"!=typeof window?window:void 0!==e?e:r;var a=Object(o.a)(i);t.a=a}).call(this,n(18),n(19)(e))},function(e,t,n){"use strict";
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/var r=Object.getOwnPropertySymbols,i=Object.prototype.hasOwnProperty,o=Object.prototype.propertyIsEnumerable;function a(e){if(null==e)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(e)}e.exports=function(){try{if(!Object.assign)return!1;var e=new String("abc");if(e[5]="de","5"===Object.getOwnPropertyNames(e)[0])return!1;for(var t={},n=0;n<10;n++)t["_"+String.fromCharCode(n)]=n;if("0123456789"!==Object.getOwnPropertyNames(t).map((function(e){return t[e]})).join(""))return!1;var r={};return"abcdefghijklmnopqrst".split("").forEach((function(e){r[e]=e})),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},r)).join("")}catch(e){return!1}}()?Object.assign:function(e,t){for(var n,l,u=a(e),c=1;c<arguments.length;c++){for(var f in n=Object(arguments[c]))i.call(n,f)&&(u[f]=n[f]);if(r){l=r(n);for(var s=0;s<l.length;s++)o.call(n,l[s])&&(u[l[s]]=n[l[s]])}}return u}},function(e,t,n){var r=n(8),i=n(20);"string"==typeof(i=i.__esModule?i.default:i)&&(i=[[e.i,i,""]]);var o={insert:"head",singleton:!1};r(i,o);e.exports=i.locals||{}},function(e,t,n){"use strict";var r,i=function(){return void 0===r&&(r=Boolean(window&&document&&document.all&&!window.atob)),r},o=function(){var e={};return function(t){if(void 0===e[t]){var n=document.querySelector(t);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}e[t]=n}return e[t]}}(),a=[];function l(e){for(var t=-1,n=0;n<a.length;n++)if(a[n].identifier===e){t=n;break}return t}function u(e,t){for(var n={},r=[],i=0;i<e.length;i++){var o=e[i],u=t.base?o[0]+t.base:o[0],c=n[u]||0,f="".concat(u," ").concat(c);n[u]=c+1;var s=l(f),d={css:o[1],media:o[2],sourceMap:o[3]};-1!==s?(a[s].references++,a[s].updater(d)):a.push({identifier:f,updater:v(d,t),references:1}),r.push(f)}return r}function c(e){var t=document.createElement("style"),r=e.attributes||{};if(void 0===r.nonce){var i=n.nc;i&&(r.nonce=i)}if(Object.keys(r).forEach((function(e){t.setAttribute(e,r[e])})),"function"==typeof e.insert)e.insert(t);else{var a=o(e.insert||"head");if(!a)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");a.appendChild(t)}return t}var f,s=(f=[],function(e,t){return f[e]=t,f.filter(Boolean).join("\n")});function d(e,t,n,r){var i=n?"":r.media?"@media ".concat(r.media," {").concat(r.css,"}"):r.css;if(e.styleSheet)e.styleSheet.cssText=s(t,i);else{var o=document.createTextNode(i),a=e.childNodes;a[t]&&e.removeChild(a[t]),a.length?e.insertBefore(o,a[t]):e.appendChild(o)}}function p(e,t,n){var r=n.css,i=n.media,o=n.sourceMap;if(i?e.setAttribute("media",i):e.removeAttribute("media"),o&&btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),e.styleSheet)e.styleSheet.cssText=r;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(r))}}var m=null,h=0;function v(e,t){var n,r,i;if(t.singleton){var o=h++;n=m||(m=c(t)),r=d.bind(null,n,o,!1),i=d.bind(null,n,o,!0)}else n=c(t),r=p.bind(null,n,t),i=function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)};return r(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap)return;r(e=t)}else i()}}e.exports=function(e,t){(t=t||{}).singleton||"boolean"==typeof t.singleton||(t.singleton=i());var n=u(e=e||[],t);return function(e){if(e=e||[],"[object Array]"===Object.prototype.toString.call(e)){for(var r=0;r<n.length;r++){var i=l(n[r]);a[i].references--}for(var o=u(e,t),c=0;c<n.length;c++){var f=l(n[c]);0===a[f].references&&(a[f].updater(),a.splice(f,1))}n=o}}}},function(e,t,n){"use strict";function r(e){var t,n=e.Symbol;return"function"==typeof n?n.observable?t=n.observable:(t=n("observable"),n.observable=t):t="@@observable",t}n.d(t,"a",(function(){return r}))},function(e,t,n){"use strict";
/** @license React v16.13.1
 * react.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var r=n(6),i="function"==typeof Symbol&&Symbol.for,o=i?Symbol.for("react.element"):60103,a=i?Symbol.for("react.portal"):60106,l=i?Symbol.for("react.fragment"):60107,u=i?Symbol.for("react.strict_mode"):60108,c=i?Symbol.for("react.profiler"):60114,f=i?Symbol.for("react.provider"):60109,s=i?Symbol.for("react.context"):60110,d=i?Symbol.for("react.forward_ref"):60112,p=i?Symbol.for("react.suspense"):60113,m=i?Symbol.for("react.memo"):60115,h=i?Symbol.for("react.lazy"):60116,v="function"==typeof Symbol&&Symbol.iterator;function y(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var g={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},b={};function w(e,t,n){this.props=e,this.context=t,this.refs=b,this.updater=n||g}function x(){}function E(e,t,n){this.props=e,this.context=t,this.refs=b,this.updater=n||g}w.prototype.isReactComponent={},w.prototype.setState=function(e,t){if("object"!=typeof e&&"function"!=typeof e&&null!=e)throw Error(y(85));this.updater.enqueueSetState(this,e,t,"setState")},w.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},x.prototype=w.prototype;var k=E.prototype=new x;k.constructor=E,r(k,w.prototype),k.isPureReactComponent=!0;var T={current:null},S=Object.prototype.hasOwnProperty,O={key:!0,ref:!0,__self:!0,__source:!0};function C(e,t,n){var r,i={},a=null,l=null;if(null!=t)for(r in void 0!==t.ref&&(l=t.ref),void 0!==t.key&&(a=""+t.key),t)S.call(t,r)&&!O.hasOwnProperty(r)&&(i[r]=t[r]);var u=arguments.length-2;if(1===u)i.children=n;else if(1<u){for(var c=Array(u),f=0;f<u;f++)c[f]=arguments[f+2];i.children=c}if(e&&e.defaultProps)for(r in u=e.defaultProps)void 0===i[r]&&(i[r]=u[r]);return{$$typeof:o,type:e,key:a,ref:l,props:i,_owner:T.current}}function P(e){return"object"==typeof e&&null!==e&&e.$$typeof===o}var _=/\/+/g,I=[];function A(e,t,n,r){if(I.length){var i=I.pop();return i.result=e,i.keyPrefix=t,i.func=n,i.context=r,i.count=0,i}return{result:e,keyPrefix:t,func:n,context:r,count:0}}function N(e){e.result=null,e.keyPrefix=null,e.func=null,e.context=null,e.count=0,10>I.length&&I.push(e)}function j(e,t,n){return null==e?0:function e(t,n,r,i){var l=typeof t;"undefined"!==l&&"boolean"!==l||(t=null);var u=!1;if(null===t)u=!0;else switch(l){case"string":case"number":u=!0;break;case"object":switch(t.$$typeof){case o:case a:u=!0}}if(u)return r(i,t,""===n?"."+R(t,0):n),1;if(u=0,n=""===n?".":n+":",Array.isArray(t))for(var c=0;c<t.length;c++){var f=n+R(l=t[c],c);u+=e(l,f,r,i)}else if(null===t||"object"!=typeof t?f=null:f="function"==typeof(f=v&&t[v]||t["@@iterator"])?f:null,"function"==typeof f)for(t=f.call(t),c=0;!(l=t.next()).done;)u+=e(l=l.value,f=n+R(l,c++),r,i);else if("object"===l)throw r=""+t,Error(y(31,"[object Object]"===r?"object with keys {"+Object.keys(t).join(", ")+"}":r,""));return u}(e,"",t,n)}function R(e,t){return"object"==typeof e&&null!==e&&null!=e.key?function(e){var t={"=":"=0",":":"=2"};return"$"+(""+e).replace(/[=:]/g,(function(e){return t[e]}))}(e.key):t.toString(36)}function z(e,t){e.func.call(e.context,t,e.count++)}function M(e,t,n){var r=e.result,i=e.keyPrefix;e=e.func.call(e.context,t,e.count++),Array.isArray(e)?D(e,r,n,(function(e){return e})):null!=e&&(P(e)&&(e=function(e,t){return{$$typeof:o,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}}(e,i+(!e.key||t&&t.key===e.key?"":(""+e.key).replace(_,"$&/")+"/")+n)),r.push(e))}function D(e,t,n,r,i){var o="";null!=n&&(o=(""+n).replace(_,"$&/")+"/"),j(e,M,t=A(t,o,r,i)),N(t)}var F={current:null};function L(){var e=F.current;if(null===e)throw Error(y(321));return e}var U={ReactCurrentDispatcher:F,ReactCurrentBatchConfig:{suspense:null},ReactCurrentOwner:T,IsSomeRendererActing:{current:!1},assign:r};t.Children={map:function(e,t,n){if(null==e)return e;var r=[];return D(e,r,null,t,n),r},forEach:function(e,t,n){if(null==e)return e;j(e,z,t=A(null,null,t,n)),N(t)},count:function(e){return j(e,(function(){return null}),null)},toArray:function(e){var t=[];return D(e,t,null,(function(e){return e})),t},only:function(e){if(!P(e))throw Error(y(143));return e}},t.Component=w,t.Fragment=l,t.Profiler=c,t.PureComponent=E,t.StrictMode=u,t.Suspense=p,t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=U,t.cloneElement=function(e,t,n){if(null==e)throw Error(y(267,e));var i=r({},e.props),a=e.key,l=e.ref,u=e._owner;if(null!=t){if(void 0!==t.ref&&(l=t.ref,u=T.current),void 0!==t.key&&(a=""+t.key),e.type&&e.type.defaultProps)var c=e.type.defaultProps;for(f in t)S.call(t,f)&&!O.hasOwnProperty(f)&&(i[f]=void 0===t[f]&&void 0!==c?c[f]:t[f])}var f=arguments.length-2;if(1===f)i.children=n;else if(1<f){c=Array(f);for(var s=0;s<f;s++)c[s]=arguments[s+2];i.children=c}return{$$typeof:o,type:e.type,key:a,ref:l,props:i,_owner:u}},t.createContext=function(e,t){return void 0===t&&(t=null),(e={$$typeof:s,_calculateChangedBits:t,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null}).Provider={$$typeof:f,_context:e},e.Consumer=e},t.createElement=C,t.createFactory=function(e){var t=C.bind(null,e);return t.type=e,t},t.createRef=function(){return{current:null}},t.forwardRef=function(e){return{$$typeof:d,render:e}},t.isValidElement=P,t.lazy=function(e){return{$$typeof:h,_ctor:e,_status:-1,_result:null}},t.memo=function(e,t){return{$$typeof:m,type:e,compare:void 0===t?null:t}},t.useCallback=function(e,t){return L().useCallback(e,t)},t.useContext=function(e,t){return L().useContext(e,t)},t.useDebugValue=function(){},t.useEffect=function(e,t){return L().useEffect(e,t)},t.useImperativeHandle=function(e,t,n){return L().useImperativeHandle(e,t,n)},t.useLayoutEffect=function(e,t){return L().useLayoutEffect(e,t)},t.useMemo=function(e,t){return L().useMemo(e,t)},t.useReducer=function(e,t,n){return L().useReducer(e,t,n)},t.useRef=function(e){return L().useRef(e)},t.useState=function(e){return L().useState(e)},t.version="16.13.1"},function(e,t,n){"use strict";
/** @license React v16.13.1
 * react-dom.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var r=n(0),i=n(6),o=n(12);function a(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}if(!r)throw Error(a(227));function l(e,t,n,r,i,o,a,l,u){var c=Array.prototype.slice.call(arguments,3);try{t.apply(n,c)}catch(e){this.onError(e)}}var u=!1,c=null,f=!1,s=null,d={onError:function(e){u=!0,c=e}};function p(e,t,n,r,i,o,a,f,s){u=!1,c=null,l.apply(d,arguments)}var m=null,h=null,v=null;function y(e,t,n){var r=e.type||"unknown-event";e.currentTarget=v(n),function(e,t,n,r,i,o,l,d,m){if(p.apply(this,arguments),u){if(!u)throw Error(a(198));var h=c;u=!1,c=null,f||(f=!0,s=h)}}(r,t,void 0,e),e.currentTarget=null}var g=null,b={};function w(){if(g)for(var e in b){var t=b[e],n=g.indexOf(e);if(!(-1<n))throw Error(a(96,e));if(!E[n]){if(!t.extractEvents)throw Error(a(97,e));for(var r in E[n]=t,n=t.eventTypes){var i=void 0,o=n[r],l=t,u=r;if(k.hasOwnProperty(u))throw Error(a(99,u));k[u]=o;var c=o.phasedRegistrationNames;if(c){for(i in c)c.hasOwnProperty(i)&&x(c[i],l,u);i=!0}else o.registrationName?(x(o.registrationName,l,u),i=!0):i=!1;if(!i)throw Error(a(98,r,e))}}}}function x(e,t,n){if(T[e])throw Error(a(100,e));T[e]=t,S[e]=t.eventTypes[n].dependencies}var E=[],k={},T={},S={};function O(e){var t,n=!1;for(t in e)if(e.hasOwnProperty(t)){var r=e[t];if(!b.hasOwnProperty(t)||b[t]!==r){if(b[t])throw Error(a(102,t));b[t]=r,n=!0}}n&&w()}var C=!("undefined"==typeof window||void 0===window.document||void 0===window.document.createElement),P=null,_=null,I=null;function A(e){if(e=h(e)){if("function"!=typeof P)throw Error(a(280));var t=e.stateNode;t&&(t=m(t),P(e.stateNode,e.type,t))}}function N(e){_?I?I.push(e):I=[e]:_=e}function j(){if(_){var e=_,t=I;if(I=_=null,A(e),t)for(e=0;e<t.length;e++)A(t[e])}}function R(e,t){return e(t)}function z(e,t,n,r,i){return e(t,n,r,i)}function M(){}var D=R,F=!1,L=!1;function U(){null===_&&null===I||(M(),j())}function B(e,t,n){if(L)return e(t,n);L=!0;try{return D(e,t,n)}finally{L=!1,U()}}var V=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,$=Object.prototype.hasOwnProperty,W={},Q={};function H(e,t,n,r,i,o){this.acceptsBooleans=2===t||3===t||4===t,this.attributeName=r,this.attributeNamespace=i,this.mustUseProperty=n,this.propertyName=e,this.type=t,this.sanitizeURL=o}var K={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach((function(e){K[e]=new H(e,0,!1,e,null,!1)})),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach((function(e){var t=e[0];K[t]=new H(t,1,!1,e[1],null,!1)})),["contentEditable","draggable","spellCheck","value"].forEach((function(e){K[e]=new H(e,2,!1,e.toLowerCase(),null,!1)})),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach((function(e){K[e]=new H(e,2,!1,e,null,!1)})),"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach((function(e){K[e]=new H(e,3,!1,e.toLowerCase(),null,!1)})),["checked","multiple","muted","selected"].forEach((function(e){K[e]=new H(e,3,!0,e,null,!1)})),["capture","download"].forEach((function(e){K[e]=new H(e,4,!1,e,null,!1)})),["cols","rows","size","span"].forEach((function(e){K[e]=new H(e,6,!1,e,null,!1)})),["rowSpan","start"].forEach((function(e){K[e]=new H(e,5,!1,e.toLowerCase(),null,!1)}));var q=/[\-:]([a-z])/g;function Y(e){return e[1].toUpperCase()}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach((function(e){var t=e.replace(q,Y);K[t]=new H(t,1,!1,e,null,!1)})),"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach((function(e){var t=e.replace(q,Y);K[t]=new H(t,1,!1,e,"http://www.w3.org/1999/xlink",!1)})),["xml:base","xml:lang","xml:space"].forEach((function(e){var t=e.replace(q,Y);K[t]=new H(t,1,!1,e,"http://www.w3.org/XML/1998/namespace",!1)})),["tabIndex","crossOrigin"].forEach((function(e){K[e]=new H(e,1,!1,e.toLowerCase(),null,!1)})),K.xlinkHref=new H("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0),["src","href","action","formAction"].forEach((function(e){K[e]=new H(e,1,!1,e.toLowerCase(),null,!0)}));var X=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;function G(e,t,n,r){var i=K.hasOwnProperty(t)?K[t]:null;(null!==i?0===i.type:!r&&(2<t.length&&("o"===t[0]||"O"===t[0])&&("n"===t[1]||"N"===t[1])))||(function(e,t,n,r){if(null==t||function(e,t,n,r){if(null!==n&&0===n.type)return!1;switch(typeof t){case"function":case"symbol":return!0;case"boolean":return!r&&(null!==n?!n.acceptsBooleans:"data-"!==(e=e.toLowerCase().slice(0,5))&&"aria-"!==e);default:return!1}}(e,t,n,r))return!0;if(r)return!1;if(null!==n)switch(n.type){case 3:return!t;case 4:return!1===t;case 5:return isNaN(t);case 6:return isNaN(t)||1>t}return!1}(t,n,i,r)&&(n=null),r||null===i?function(e){return!!$.call(Q,e)||!$.call(W,e)&&(V.test(e)?Q[e]=!0:(W[e]=!0,!1))}(t)&&(null===n?e.removeAttribute(t):e.setAttribute(t,""+n)):i.mustUseProperty?e[i.propertyName]=null===n?3!==i.type&&"":n:(t=i.attributeName,r=i.attributeNamespace,null===n?e.removeAttribute(t):(n=3===(i=i.type)||4===i&&!0===n?"":""+n,r?e.setAttributeNS(r,t,n):e.setAttribute(t,n))))}X.hasOwnProperty("ReactCurrentDispatcher")||(X.ReactCurrentDispatcher={current:null}),X.hasOwnProperty("ReactCurrentBatchConfig")||(X.ReactCurrentBatchConfig={suspense:null});var J=/^(.*)[\\\/]/,Z="function"==typeof Symbol&&Symbol.for,ee=Z?Symbol.for("react.element"):60103,te=Z?Symbol.for("react.portal"):60106,ne=Z?Symbol.for("react.fragment"):60107,re=Z?Symbol.for("react.strict_mode"):60108,ie=Z?Symbol.for("react.profiler"):60114,oe=Z?Symbol.for("react.provider"):60109,ae=Z?Symbol.for("react.context"):60110,le=Z?Symbol.for("react.concurrent_mode"):60111,ue=Z?Symbol.for("react.forward_ref"):60112,ce=Z?Symbol.for("react.suspense"):60113,fe=Z?Symbol.for("react.suspense_list"):60120,se=Z?Symbol.for("react.memo"):60115,de=Z?Symbol.for("react.lazy"):60116,pe=Z?Symbol.for("react.block"):60121,me="function"==typeof Symbol&&Symbol.iterator;function he(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=me&&e[me]||e["@@iterator"])?e:null}function ve(e){if(null==e)return null;if("function"==typeof e)return e.displayName||e.name||null;if("string"==typeof e)return e;switch(e){case ne:return"Fragment";case te:return"Portal";case ie:return"Profiler";case re:return"StrictMode";case ce:return"Suspense";case fe:return"SuspenseList"}if("object"==typeof e)switch(e.$$typeof){case ae:return"Context.Consumer";case oe:return"Context.Provider";case ue:var t=e.render;return t=t.displayName||t.name||"",e.displayName||(""!==t?"ForwardRef("+t+")":"ForwardRef");case se:return ve(e.type);case pe:return ve(e.render);case de:if(e=1===e._status?e._result:null)return ve(e)}return null}function ye(e){var t="";do{e:switch(e.tag){case 3:case 4:case 6:case 7:case 10:case 9:var n="";break e;default:var r=e._debugOwner,i=e._debugSource,o=ve(e.type);n=null,r&&(n=ve(r.type)),r=o,o="",i?o=" (at "+i.fileName.replace(J,"")+":"+i.lineNumber+")":n&&(o=" (created by "+n+")"),n="\n    in "+(r||"Unknown")+o}t+=n,e=e.return}while(e);return t}function ge(e){switch(typeof e){case"boolean":case"number":case"object":case"string":case"undefined":return e;default:return""}}function be(e){var t=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===t||"radio"===t)}function we(e){e._valueTracker||(e._valueTracker=function(e){var t=be(e)?"checked":"value",n=Object.getOwnPropertyDescriptor(e.constructor.prototype,t),r=""+e[t];if(!e.hasOwnProperty(t)&&void 0!==n&&"function"==typeof n.get&&"function"==typeof n.set){var i=n.get,o=n.set;return Object.defineProperty(e,t,{configurable:!0,get:function(){return i.call(this)},set:function(e){r=""+e,o.call(this,e)}}),Object.defineProperty(e,t,{enumerable:n.enumerable}),{getValue:function(){return r},setValue:function(e){r=""+e},stopTracking:function(){e._valueTracker=null,delete e[t]}}}}(e))}function xe(e){if(!e)return!1;var t=e._valueTracker;if(!t)return!0;var n=t.getValue(),r="";return e&&(r=be(e)?e.checked?"true":"false":e.value),(e=r)!==n&&(t.setValue(e),!0)}function Ee(e,t){var n=t.checked;return i({},t,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=n?n:e._wrapperState.initialChecked})}function ke(e,t){var n=null==t.defaultValue?"":t.defaultValue,r=null!=t.checked?t.checked:t.defaultChecked;n=ge(null!=t.value?t.value:n),e._wrapperState={initialChecked:r,initialValue:n,controlled:"checkbox"===t.type||"radio"===t.type?null!=t.checked:null!=t.value}}function Te(e,t){null!=(t=t.checked)&&G(e,"checked",t,!1)}function Se(e,t){Te(e,t);var n=ge(t.value),r=t.type;if(null!=n)"number"===r?(0===n&&""===e.value||e.value!=n)&&(e.value=""+n):e.value!==""+n&&(e.value=""+n);else if("submit"===r||"reset"===r)return void e.removeAttribute("value");t.hasOwnProperty("value")?Ce(e,t.type,n):t.hasOwnProperty("defaultValue")&&Ce(e,t.type,ge(t.defaultValue)),null==t.checked&&null!=t.defaultChecked&&(e.defaultChecked=!!t.defaultChecked)}function Oe(e,t,n){if(t.hasOwnProperty("value")||t.hasOwnProperty("defaultValue")){var r=t.type;if(!("submit"!==r&&"reset"!==r||void 0!==t.value&&null!==t.value))return;t=""+e._wrapperState.initialValue,n||t===e.value||(e.value=t),e.defaultValue=t}""!==(n=e.name)&&(e.name=""),e.defaultChecked=!!e._wrapperState.initialChecked,""!==n&&(e.name=n)}function Ce(e,t,n){"number"===t&&e.ownerDocument.activeElement===e||(null==n?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+n&&(e.defaultValue=""+n))}function Pe(e,t){return e=i({children:void 0},t),(t=function(e){var t="";return r.Children.forEach(e,(function(e){null!=e&&(t+=e)})),t}(t.children))&&(e.children=t),e}function _e(e,t,n,r){if(e=e.options,t){t={};for(var i=0;i<n.length;i++)t["$"+n[i]]=!0;for(n=0;n<e.length;n++)i=t.hasOwnProperty("$"+e[n].value),e[n].selected!==i&&(e[n].selected=i),i&&r&&(e[n].defaultSelected=!0)}else{for(n=""+ge(n),t=null,i=0;i<e.length;i++){if(e[i].value===n)return e[i].selected=!0,void(r&&(e[i].defaultSelected=!0));null!==t||e[i].disabled||(t=e[i])}null!==t&&(t.selected=!0)}}function Ie(e,t){if(null!=t.dangerouslySetInnerHTML)throw Error(a(91));return i({},t,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function Ae(e,t){var n=t.value;if(null==n){if(n=t.children,t=t.defaultValue,null!=n){if(null!=t)throw Error(a(92));if(Array.isArray(n)){if(!(1>=n.length))throw Error(a(93));n=n[0]}t=n}null==t&&(t=""),n=t}e._wrapperState={initialValue:ge(n)}}function Ne(e,t){var n=ge(t.value),r=ge(t.defaultValue);null!=n&&((n=""+n)!==e.value&&(e.value=n),null==t.defaultValue&&e.defaultValue!==n&&(e.defaultValue=n)),null!=r&&(e.defaultValue=""+r)}function je(e){var t=e.textContent;t===e._wrapperState.initialValue&&""!==t&&null!==t&&(e.value=t)}var Re="http://www.w3.org/1999/xhtml",ze="http://www.w3.org/2000/svg";function Me(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function De(e,t){return null==e||"http://www.w3.org/1999/xhtml"===e?Me(t):"http://www.w3.org/2000/svg"===e&&"foreignObject"===t?"http://www.w3.org/1999/xhtml":e}var Fe,Le=function(e){return"undefined"!=typeof MSApp&&MSApp.execUnsafeLocalFunction?function(t,n,r,i){MSApp.execUnsafeLocalFunction((function(){return e(t,n)}))}:e}((function(e,t){if(e.namespaceURI!==ze||"innerHTML"in e)e.innerHTML=t;else{for((Fe=Fe||document.createElement("div")).innerHTML="<svg>"+t.valueOf().toString()+"</svg>",t=Fe.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;t.firstChild;)e.appendChild(t.firstChild)}}));function Ue(e,t){if(t){var n=e.firstChild;if(n&&n===e.lastChild&&3===n.nodeType)return void(n.nodeValue=t)}e.textContent=t}function Be(e,t){var n={};return n[e.toLowerCase()]=t.toLowerCase(),n["Webkit"+e]="webkit"+t,n["Moz"+e]="moz"+t,n}var Ve={animationend:Be("Animation","AnimationEnd"),animationiteration:Be("Animation","AnimationIteration"),animationstart:Be("Animation","AnimationStart"),transitionend:Be("Transition","TransitionEnd")},$e={},We={};function Qe(e){if($e[e])return $e[e];if(!Ve[e])return e;var t,n=Ve[e];for(t in n)if(n.hasOwnProperty(t)&&t in We)return $e[e]=n[t];return e}C&&(We=document.createElement("div").style,"AnimationEvent"in window||(delete Ve.animationend.animation,delete Ve.animationiteration.animation,delete Ve.animationstart.animation),"TransitionEvent"in window||delete Ve.transitionend.transition);var He=Qe("animationend"),Ke=Qe("animationiteration"),qe=Qe("animationstart"),Ye=Qe("transitionend"),Xe="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),Ge=new("function"==typeof WeakMap?WeakMap:Map);function Je(e){var t=Ge.get(e);return void 0===t&&(t=new Map,Ge.set(e,t)),t}function Ze(e){var t=e,n=e;if(e.alternate)for(;t.return;)t=t.return;else{e=t;do{0!=(1026&(t=e).effectTag)&&(n=t.return),e=t.return}while(e)}return 3===t.tag?n:null}function et(e){if(13===e.tag){var t=e.memoizedState;if(null===t&&(null!==(e=e.alternate)&&(t=e.memoizedState)),null!==t)return t.dehydrated}return null}function tt(e){if(Ze(e)!==e)throw Error(a(188))}function nt(e){if(!(e=function(e){var t=e.alternate;if(!t){if(null===(t=Ze(e)))throw Error(a(188));return t!==e?null:e}for(var n=e,r=t;;){var i=n.return;if(null===i)break;var o=i.alternate;if(null===o){if(null!==(r=i.return)){n=r;continue}break}if(i.child===o.child){for(o=i.child;o;){if(o===n)return tt(i),e;if(o===r)return tt(i),t;o=o.sibling}throw Error(a(188))}if(n.return!==r.return)n=i,r=o;else{for(var l=!1,u=i.child;u;){if(u===n){l=!0,n=i,r=o;break}if(u===r){l=!0,r=i,n=o;break}u=u.sibling}if(!l){for(u=o.child;u;){if(u===n){l=!0,n=o,r=i;break}if(u===r){l=!0,r=o,n=i;break}u=u.sibling}if(!l)throw Error(a(189))}}if(n.alternate!==r)throw Error(a(190))}if(3!==n.tag)throw Error(a(188));return n.stateNode.current===n?e:t}(e)))return null;for(var t=e;;){if(5===t.tag||6===t.tag)return t;if(t.child)t.child.return=t,t=t.child;else{if(t===e)break;for(;!t.sibling;){if(!t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}}return null}function rt(e,t){if(null==t)throw Error(a(30));return null==e?t:Array.isArray(e)?Array.isArray(t)?(e.push.apply(e,t),e):(e.push(t),e):Array.isArray(t)?[e].concat(t):[e,t]}function it(e,t,n){Array.isArray(e)?e.forEach(t,n):e&&t.call(n,e)}var ot=null;function at(e){if(e){var t=e._dispatchListeners,n=e._dispatchInstances;if(Array.isArray(t))for(var r=0;r<t.length&&!e.isPropagationStopped();r++)y(e,t[r],n[r]);else t&&y(e,t,n);e._dispatchListeners=null,e._dispatchInstances=null,e.isPersistent()||e.constructor.release(e)}}function lt(e){if(null!==e&&(ot=rt(ot,e)),e=ot,ot=null,e){if(it(e,at),ot)throw Error(a(95));if(f)throw e=s,f=!1,s=null,e}}function ut(e){return(e=e.target||e.srcElement||window).correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}function ct(e){if(!C)return!1;var t=(e="on"+e)in document;return t||((t=document.createElement("div")).setAttribute(e,"return;"),t="function"==typeof t[e]),t}var ft=[];function st(e){e.topLevelType=null,e.nativeEvent=null,e.targetInst=null,e.ancestors.length=0,10>ft.length&&ft.push(e)}function dt(e,t,n,r){if(ft.length){var i=ft.pop();return i.topLevelType=e,i.eventSystemFlags=r,i.nativeEvent=t,i.targetInst=n,i}return{topLevelType:e,eventSystemFlags:r,nativeEvent:t,targetInst:n,ancestors:[]}}function pt(e){var t=e.targetInst,n=t;do{if(!n){e.ancestors.push(n);break}var r=n;if(3===r.tag)r=r.stateNode.containerInfo;else{for(;r.return;)r=r.return;r=3!==r.tag?null:r.stateNode.containerInfo}if(!r)break;5!==(t=n.tag)&&6!==t||e.ancestors.push(n),n=Cn(r)}while(n);for(n=0;n<e.ancestors.length;n++){t=e.ancestors[n];var i=ut(e.nativeEvent);r=e.topLevelType;var o=e.nativeEvent,a=e.eventSystemFlags;0===n&&(a|=64);for(var l=null,u=0;u<E.length;u++){var c=E[u];c&&(c=c.extractEvents(r,t,o,i,a))&&(l=rt(l,c))}lt(l)}}function mt(e,t,n){if(!n.has(e)){switch(e){case"scroll":qt(t,"scroll",!0);break;case"focus":case"blur":qt(t,"focus",!0),qt(t,"blur",!0),n.set("blur",null),n.set("focus",null);break;case"cancel":case"close":ct(e)&&qt(t,e,!0);break;case"invalid":case"submit":case"reset":break;default:-1===Xe.indexOf(e)&&Kt(e,t)}n.set(e,null)}}var ht,vt,yt,gt=!1,bt=[],wt=null,xt=null,Et=null,kt=new Map,Tt=new Map,St=[],Ot="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput close cancel copy cut paste click change contextmenu reset submit".split(" "),Ct="focus blur dragenter dragleave mouseover mouseout pointerover pointerout gotpointercapture lostpointercapture".split(" ");function Pt(e,t,n,r,i){return{blockedOn:e,topLevelType:t,eventSystemFlags:32|n,nativeEvent:i,container:r}}function _t(e,t){switch(e){case"focus":case"blur":wt=null;break;case"dragenter":case"dragleave":xt=null;break;case"mouseover":case"mouseout":Et=null;break;case"pointerover":case"pointerout":kt.delete(t.pointerId);break;case"gotpointercapture":case"lostpointercapture":Tt.delete(t.pointerId)}}function It(e,t,n,r,i,o){return null===e||e.nativeEvent!==o?(e=Pt(t,n,r,i,o),null!==t&&(null!==(t=Pn(t))&&vt(t)),e):(e.eventSystemFlags|=r,e)}function At(e){var t=Cn(e.target);if(null!==t){var n=Ze(t);if(null!==n)if(13===(t=n.tag)){if(null!==(t=et(n)))return e.blockedOn=t,void o.unstable_runWithPriority(e.priority,(function(){yt(n)}))}else if(3===t&&n.stateNode.hydrate)return void(e.blockedOn=3===n.tag?n.stateNode.containerInfo:null)}e.blockedOn=null}function Nt(e){if(null!==e.blockedOn)return!1;var t=Jt(e.topLevelType,e.eventSystemFlags,e.container,e.nativeEvent);if(null!==t){var n=Pn(t);return null!==n&&vt(n),e.blockedOn=t,!1}return!0}function jt(e,t,n){Nt(e)&&n.delete(t)}function Rt(){for(gt=!1;0<bt.length;){var e=bt[0];if(null!==e.blockedOn){null!==(e=Pn(e.blockedOn))&&ht(e);break}var t=Jt(e.topLevelType,e.eventSystemFlags,e.container,e.nativeEvent);null!==t?e.blockedOn=t:bt.shift()}null!==wt&&Nt(wt)&&(wt=null),null!==xt&&Nt(xt)&&(xt=null),null!==Et&&Nt(Et)&&(Et=null),kt.forEach(jt),Tt.forEach(jt)}function zt(e,t){e.blockedOn===t&&(e.blockedOn=null,gt||(gt=!0,o.unstable_scheduleCallback(o.unstable_NormalPriority,Rt)))}function Mt(e){function t(t){return zt(t,e)}if(0<bt.length){zt(bt[0],e);for(var n=1;n<bt.length;n++){var r=bt[n];r.blockedOn===e&&(r.blockedOn=null)}}for(null!==wt&&zt(wt,e),null!==xt&&zt(xt,e),null!==Et&&zt(Et,e),kt.forEach(t),Tt.forEach(t),n=0;n<St.length;n++)(r=St[n]).blockedOn===e&&(r.blockedOn=null);for(;0<St.length&&null===(n=St[0]).blockedOn;)At(n),null===n.blockedOn&&St.shift()}var Dt={},Ft=new Map,Lt=new Map,Ut=["abort","abort",He,"animationEnd",Ke,"animationIteration",qe,"animationStart","canplay","canPlay","canplaythrough","canPlayThrough","durationchange","durationChange","emptied","emptied","encrypted","encrypted","ended","ended","error","error","gotpointercapture","gotPointerCapture","load","load","loadeddata","loadedData","loadedmetadata","loadedMetadata","loadstart","loadStart","lostpointercapture","lostPointerCapture","playing","playing","progress","progress","seeking","seeking","stalled","stalled","suspend","suspend","timeupdate","timeUpdate",Ye,"transitionEnd","waiting","waiting"];function Bt(e,t){for(var n=0;n<e.length;n+=2){var r=e[n],i=e[n+1],o="on"+(i[0].toUpperCase()+i.slice(1));o={phasedRegistrationNames:{bubbled:o,captured:o+"Capture"},dependencies:[r],eventPriority:t},Lt.set(r,t),Ft.set(r,o),Dt[i]=o}}Bt("blur blur cancel cancel click click close close contextmenu contextMenu copy copy cut cut auxclick auxClick dblclick doubleClick dragend dragEnd dragstart dragStart drop drop focus focus input input invalid invalid keydown keyDown keypress keyPress keyup keyUp mousedown mouseDown mouseup mouseUp paste paste pause pause play play pointercancel pointerCancel pointerdown pointerDown pointerup pointerUp ratechange rateChange reset reset seeked seeked submit submit touchcancel touchCancel touchend touchEnd touchstart touchStart volumechange volumeChange".split(" "),0),Bt("drag drag dragenter dragEnter dragexit dragExit dragleave dragLeave dragover dragOver mousemove mouseMove mouseout mouseOut mouseover mouseOver pointermove pointerMove pointerout pointerOut pointerover pointerOver scroll scroll toggle toggle touchmove touchMove wheel wheel".split(" "),1),Bt(Ut,2);for(var Vt="change selectionchange textInput compositionstart compositionend compositionupdate".split(" "),$t=0;$t<Vt.length;$t++)Lt.set(Vt[$t],0);var Wt=o.unstable_UserBlockingPriority,Qt=o.unstable_runWithPriority,Ht=!0;function Kt(e,t){qt(t,e,!1)}function qt(e,t,n){var r=Lt.get(t);switch(void 0===r?2:r){case 0:r=Yt.bind(null,t,1,e);break;case 1:r=Xt.bind(null,t,1,e);break;default:r=Gt.bind(null,t,1,e)}n?e.addEventListener(t,r,!0):e.addEventListener(t,r,!1)}function Yt(e,t,n,r){F||M();var i=Gt,o=F;F=!0;try{z(i,e,t,n,r)}finally{(F=o)||U()}}function Xt(e,t,n,r){Qt(Wt,Gt.bind(null,e,t,n,r))}function Gt(e,t,n,r){if(Ht)if(0<bt.length&&-1<Ot.indexOf(e))e=Pt(null,e,t,n,r),bt.push(e);else{var i=Jt(e,t,n,r);if(null===i)_t(e,r);else if(-1<Ot.indexOf(e))e=Pt(i,e,t,n,r),bt.push(e);else if(!function(e,t,n,r,i){switch(t){case"focus":return wt=It(wt,e,t,n,r,i),!0;case"dragenter":return xt=It(xt,e,t,n,r,i),!0;case"mouseover":return Et=It(Et,e,t,n,r,i),!0;case"pointerover":var o=i.pointerId;return kt.set(o,It(kt.get(o)||null,e,t,n,r,i)),!0;case"gotpointercapture":return o=i.pointerId,Tt.set(o,It(Tt.get(o)||null,e,t,n,r,i)),!0}return!1}(i,e,t,n,r)){_t(e,r),e=dt(e,r,null,t);try{B(pt,e)}finally{st(e)}}}}function Jt(e,t,n,r){if(null!==(n=Cn(n=ut(r)))){var i=Ze(n);if(null===i)n=null;else{var o=i.tag;if(13===o){if(null!==(n=et(i)))return n;n=null}else if(3===o){if(i.stateNode.hydrate)return 3===i.tag?i.stateNode.containerInfo:null;n=null}else i!==n&&(n=null)}}e=dt(e,r,n,t);try{B(pt,e)}finally{st(e)}return null}var Zt={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},en=["Webkit","ms","Moz","O"];function tn(e,t,n){return null==t||"boolean"==typeof t||""===t?"":n||"number"!=typeof t||0===t||Zt.hasOwnProperty(e)&&Zt[e]?(""+t).trim():t+"px"}function nn(e,t){for(var n in e=e.style,t)if(t.hasOwnProperty(n)){var r=0===n.indexOf("--"),i=tn(n,t[n],r);"float"===n&&(n="cssFloat"),r?e.setProperty(n,i):e[n]=i}}Object.keys(Zt).forEach((function(e){en.forEach((function(t){t=t+e.charAt(0).toUpperCase()+e.substring(1),Zt[t]=Zt[e]}))}));var rn=i({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function on(e,t){if(t){if(rn[e]&&(null!=t.children||null!=t.dangerouslySetInnerHTML))throw Error(a(137,e,""));if(null!=t.dangerouslySetInnerHTML){if(null!=t.children)throw Error(a(60));if("object"!=typeof t.dangerouslySetInnerHTML||!("__html"in t.dangerouslySetInnerHTML))throw Error(a(61))}if(null!=t.style&&"object"!=typeof t.style)throw Error(a(62,""))}}function an(e,t){if(-1===e.indexOf("-"))return"string"==typeof t.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}var ln=Re;function un(e,t){var n=Je(e=9===e.nodeType||11===e.nodeType?e:e.ownerDocument);t=S[t];for(var r=0;r<t.length;r++)mt(t[r],e,n)}function cn(){}function fn(e){if(void 0===(e=e||("undefined"!=typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(t){return e.body}}function sn(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function dn(e,t){var n,r=sn(e);for(e=0;r;){if(3===r.nodeType){if(n=e+r.textContent.length,e<=t&&n>=t)return{node:r,offset:t-e};e=n}e:{for(;r;){if(r.nextSibling){r=r.nextSibling;break e}r=r.parentNode}r=void 0}r=sn(r)}}function pn(){for(var e=window,t=fn();t instanceof e.HTMLIFrameElement;){try{var n="string"==typeof t.contentWindow.location.href}catch(e){n=!1}if(!n)break;t=fn((e=t.contentWindow).document)}return t}function mn(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&("input"===t&&("text"===e.type||"search"===e.type||"tel"===e.type||"url"===e.type||"password"===e.type)||"textarea"===t||"true"===e.contentEditable)}var hn=null,vn=null;function yn(e,t){switch(e){case"button":case"input":case"select":case"textarea":return!!t.autoFocus}return!1}function gn(e,t){return"textarea"===e||"option"===e||"noscript"===e||"string"==typeof t.children||"number"==typeof t.children||"object"==typeof t.dangerouslySetInnerHTML&&null!==t.dangerouslySetInnerHTML&&null!=t.dangerouslySetInnerHTML.__html}var bn="function"==typeof setTimeout?setTimeout:void 0,wn="function"==typeof clearTimeout?clearTimeout:void 0;function xn(e){for(;null!=e;e=e.nextSibling){var t=e.nodeType;if(1===t||3===t)break}return e}function En(e){e=e.previousSibling;for(var t=0;e;){if(8===e.nodeType){var n=e.data;if("$"===n||"$!"===n||"$?"===n){if(0===t)return e;t--}else"/$"===n&&t++}e=e.previousSibling}return null}var kn=Math.random().toString(36).slice(2),Tn="__reactInternalInstance$"+kn,Sn="__reactEventHandlers$"+kn,On="__reactContainere$"+kn;function Cn(e){var t=e[Tn];if(t)return t;for(var n=e.parentNode;n;){if(t=n[On]||n[Tn]){if(n=t.alternate,null!==t.child||null!==n&&null!==n.child)for(e=En(e);null!==e;){if(n=e[Tn])return n;e=En(e)}return t}n=(e=n).parentNode}return null}function Pn(e){return!(e=e[Tn]||e[On])||5!==e.tag&&6!==e.tag&&13!==e.tag&&3!==e.tag?null:e}function _n(e){if(5===e.tag||6===e.tag)return e.stateNode;throw Error(a(33))}function In(e){return e[Sn]||null}function An(e){do{e=e.return}while(e&&5!==e.tag);return e||null}function Nn(e,t){var n=e.stateNode;if(!n)return null;var r=m(n);if(!r)return null;n=r[t];e:switch(t){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(r=!r.disabled)||(r=!("button"===(e=e.type)||"input"===e||"select"===e||"textarea"===e)),e=!r;break e;default:e=!1}if(e)return null;if(n&&"function"!=typeof n)throw Error(a(231,t,typeof n));return n}function jn(e,t,n){(t=Nn(e,n.dispatchConfig.phasedRegistrationNames[t]))&&(n._dispatchListeners=rt(n._dispatchListeners,t),n._dispatchInstances=rt(n._dispatchInstances,e))}function Rn(e){if(e&&e.dispatchConfig.phasedRegistrationNames){for(var t=e._targetInst,n=[];t;)n.push(t),t=An(t);for(t=n.length;0<t--;)jn(n[t],"captured",e);for(t=0;t<n.length;t++)jn(n[t],"bubbled",e)}}function zn(e,t,n){e&&n&&n.dispatchConfig.registrationName&&(t=Nn(e,n.dispatchConfig.registrationName))&&(n._dispatchListeners=rt(n._dispatchListeners,t),n._dispatchInstances=rt(n._dispatchInstances,e))}function Mn(e){e&&e.dispatchConfig.registrationName&&zn(e._targetInst,null,e)}function Dn(e){it(e,Rn)}var Fn=null,Ln=null,Un=null;function Bn(){if(Un)return Un;var e,t,n=Ln,r=n.length,i="value"in Fn?Fn.value:Fn.textContent,o=i.length;for(e=0;e<r&&n[e]===i[e];e++);var a=r-e;for(t=1;t<=a&&n[r-t]===i[o-t];t++);return Un=i.slice(e,1<t?1-t:void 0)}function Vn(){return!0}function $n(){return!1}function Wn(e,t,n,r){for(var i in this.dispatchConfig=e,this._targetInst=t,this.nativeEvent=n,e=this.constructor.Interface)e.hasOwnProperty(i)&&((t=e[i])?this[i]=t(n):"target"===i?this.target=r:this[i]=n[i]);return this.isDefaultPrevented=(null!=n.defaultPrevented?n.defaultPrevented:!1===n.returnValue)?Vn:$n,this.isPropagationStopped=$n,this}function Qn(e,t,n,r){if(this.eventPool.length){var i=this.eventPool.pop();return this.call(i,e,t,n,r),i}return new this(e,t,n,r)}function Hn(e){if(!(e instanceof this))throw Error(a(279));e.destructor(),10>this.eventPool.length&&this.eventPool.push(e)}function Kn(e){e.eventPool=[],e.getPooled=Qn,e.release=Hn}i(Wn.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!=typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=Vn)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!=typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=Vn)},persist:function(){this.isPersistent=Vn},isPersistent:$n,destructor:function(){var e,t=this.constructor.Interface;for(e in t)this[e]=null;this.nativeEvent=this._targetInst=this.dispatchConfig=null,this.isPropagationStopped=this.isDefaultPrevented=$n,this._dispatchInstances=this._dispatchListeners=null}}),Wn.Interface={type:null,target:null,currentTarget:function(){return null},eventPhase:null,bubbles:null,cancelable:null,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:null,isTrusted:null},Wn.extend=function(e){function t(){}function n(){return r.apply(this,arguments)}var r=this;t.prototype=r.prototype;var o=new t;return i(o,n.prototype),n.prototype=o,n.prototype.constructor=n,n.Interface=i({},r.Interface,e),n.extend=r.extend,Kn(n),n},Kn(Wn);var qn=Wn.extend({data:null}),Yn=Wn.extend({data:null}),Xn=[9,13,27,32],Gn=C&&"CompositionEvent"in window,Jn=null;C&&"documentMode"in document&&(Jn=document.documentMode);var Zn=C&&"TextEvent"in window&&!Jn,er=C&&(!Gn||Jn&&8<Jn&&11>=Jn),tr=String.fromCharCode(32),nr={beforeInput:{phasedRegistrationNames:{bubbled:"onBeforeInput",captured:"onBeforeInputCapture"},dependencies:["compositionend","keypress","textInput","paste"]},compositionEnd:{phasedRegistrationNames:{bubbled:"onCompositionEnd",captured:"onCompositionEndCapture"},dependencies:"blur compositionend keydown keypress keyup mousedown".split(" ")},compositionStart:{phasedRegistrationNames:{bubbled:"onCompositionStart",captured:"onCompositionStartCapture"},dependencies:"blur compositionstart keydown keypress keyup mousedown".split(" ")},compositionUpdate:{phasedRegistrationNames:{bubbled:"onCompositionUpdate",captured:"onCompositionUpdateCapture"},dependencies:"blur compositionupdate keydown keypress keyup mousedown".split(" ")}},rr=!1;function ir(e,t){switch(e){case"keyup":return-1!==Xn.indexOf(t.keyCode);case"keydown":return 229!==t.keyCode;case"keypress":case"mousedown":case"blur":return!0;default:return!1}}function or(e){return"object"==typeof(e=e.detail)&&"data"in e?e.data:null}var ar=!1;var lr={eventTypes:nr,extractEvents:function(e,t,n,r){var i;if(Gn)e:{switch(e){case"compositionstart":var o=nr.compositionStart;break e;case"compositionend":o=nr.compositionEnd;break e;case"compositionupdate":o=nr.compositionUpdate;break e}o=void 0}else ar?ir(e,n)&&(o=nr.compositionEnd):"keydown"===e&&229===n.keyCode&&(o=nr.compositionStart);return o?(er&&"ko"!==n.locale&&(ar||o!==nr.compositionStart?o===nr.compositionEnd&&ar&&(i=Bn()):(Ln="value"in(Fn=r)?Fn.value:Fn.textContent,ar=!0)),o=qn.getPooled(o,t,n,r),i?o.data=i:null!==(i=or(n))&&(o.data=i),Dn(o),i=o):i=null,(e=Zn?function(e,t){switch(e){case"compositionend":return or(t);case"keypress":return 32!==t.which?null:(rr=!0,tr);case"textInput":return(e=t.data)===tr&&rr?null:e;default:return null}}(e,n):function(e,t){if(ar)return"compositionend"===e||!Gn&&ir(e,t)?(e=Bn(),Un=Ln=Fn=null,ar=!1,e):null;switch(e){case"paste":return null;case"keypress":if(!(t.ctrlKey||t.altKey||t.metaKey)||t.ctrlKey&&t.altKey){if(t.char&&1<t.char.length)return t.char;if(t.which)return String.fromCharCode(t.which)}return null;case"compositionend":return er&&"ko"!==t.locale?null:t.data;default:return null}}(e,n))?((t=Yn.getPooled(nr.beforeInput,t,n,r)).data=e,Dn(t)):t=null,null===i?t:null===t?i:[i,t]}},ur={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function cr(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===t?!!ur[e.type]:"textarea"===t}var fr={change:{phasedRegistrationNames:{bubbled:"onChange",captured:"onChangeCapture"},dependencies:"blur change click focus input keydown keyup selectionchange".split(" ")}};function sr(e,t,n){return(e=Wn.getPooled(fr.change,e,t,n)).type="change",N(n),Dn(e),e}var dr=null,pr=null;function mr(e){lt(e)}function hr(e){if(xe(_n(e)))return e}function vr(e,t){if("change"===e)return t}var yr=!1;function gr(){dr&&(dr.detachEvent("onpropertychange",br),pr=dr=null)}function br(e){if("value"===e.propertyName&&hr(pr))if(e=sr(pr,e,ut(e)),F)lt(e);else{F=!0;try{R(mr,e)}finally{F=!1,U()}}}function wr(e,t,n){"focus"===e?(gr(),pr=n,(dr=t).attachEvent("onpropertychange",br)):"blur"===e&&gr()}function xr(e){if("selectionchange"===e||"keyup"===e||"keydown"===e)return hr(pr)}function Er(e,t){if("click"===e)return hr(t)}function kr(e,t){if("input"===e||"change"===e)return hr(t)}C&&(yr=ct("input")&&(!document.documentMode||9<document.documentMode));var Tr={eventTypes:fr,_isInputEventSupported:yr,extractEvents:function(e,t,n,r){var i=t?_n(t):window,o=i.nodeName&&i.nodeName.toLowerCase();if("select"===o||"input"===o&&"file"===i.type)var a=vr;else if(cr(i))if(yr)a=kr;else{a=xr;var l=wr}else(o=i.nodeName)&&"input"===o.toLowerCase()&&("checkbox"===i.type||"radio"===i.type)&&(a=Er);if(a&&(a=a(e,t)))return sr(a,n,r);l&&l(e,i,t),"blur"===e&&(e=i._wrapperState)&&e.controlled&&"number"===i.type&&Ce(i,"number",i.value)}},Sr=Wn.extend({view:null,detail:null}),Or={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function Cr(e){var t=this.nativeEvent;return t.getModifierState?t.getModifierState(e):!!(e=Or[e])&&!!t[e]}function Pr(){return Cr}var _r=0,Ir=0,Ar=!1,Nr=!1,jr=Sr.extend({screenX:null,screenY:null,clientX:null,clientY:null,pageX:null,pageY:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,getModifierState:Pr,button:null,buttons:null,relatedTarget:function(e){return e.relatedTarget||(e.fromElement===e.srcElement?e.toElement:e.fromElement)},movementX:function(e){if("movementX"in e)return e.movementX;var t=_r;return _r=e.screenX,Ar?"mousemove"===e.type?e.screenX-t:0:(Ar=!0,0)},movementY:function(e){if("movementY"in e)return e.movementY;var t=Ir;return Ir=e.screenY,Nr?"mousemove"===e.type?e.screenY-t:0:(Nr=!0,0)}}),Rr=jr.extend({pointerId:null,width:null,height:null,pressure:null,tangentialPressure:null,tiltX:null,tiltY:null,twist:null,pointerType:null,isPrimary:null}),zr={mouseEnter:{registrationName:"onMouseEnter",dependencies:["mouseout","mouseover"]},mouseLeave:{registrationName:"onMouseLeave",dependencies:["mouseout","mouseover"]},pointerEnter:{registrationName:"onPointerEnter",dependencies:["pointerout","pointerover"]},pointerLeave:{registrationName:"onPointerLeave",dependencies:["pointerout","pointerover"]}},Mr={eventTypes:zr,extractEvents:function(e,t,n,r,i){var o="mouseover"===e||"pointerover"===e,a="mouseout"===e||"pointerout"===e;if(o&&0==(32&i)&&(n.relatedTarget||n.fromElement)||!a&&!o)return null;(o=r.window===r?r:(o=r.ownerDocument)?o.defaultView||o.parentWindow:window,a)?(a=t,null!==(t=(t=n.relatedTarget||n.toElement)?Cn(t):null)&&(t!==Ze(t)||5!==t.tag&&6!==t.tag)&&(t=null)):a=null;if(a===t)return null;if("mouseout"===e||"mouseover"===e)var l=jr,u=zr.mouseLeave,c=zr.mouseEnter,f="mouse";else"pointerout"!==e&&"pointerover"!==e||(l=Rr,u=zr.pointerLeave,c=zr.pointerEnter,f="pointer");if(e=null==a?o:_n(a),o=null==t?o:_n(t),(u=l.getPooled(u,a,n,r)).type=f+"leave",u.target=e,u.relatedTarget=o,(n=l.getPooled(c,t,n,r)).type=f+"enter",n.target=o,n.relatedTarget=e,f=t,(r=a)&&f)e:{for(c=f,a=0,e=l=r;e;e=An(e))a++;for(e=0,t=c;t;t=An(t))e++;for(;0<a-e;)l=An(l),a--;for(;0<e-a;)c=An(c),e--;for(;a--;){if(l===c||l===c.alternate)break e;l=An(l),c=An(c)}l=null}else l=null;for(c=l,l=[];r&&r!==c&&(null===(a=r.alternate)||a!==c);)l.push(r),r=An(r);for(r=[];f&&f!==c&&(null===(a=f.alternate)||a!==c);)r.push(f),f=An(f);for(f=0;f<l.length;f++)zn(l[f],"bubbled",u);for(f=r.length;0<f--;)zn(r[f],"captured",n);return 0==(64&i)?[u]:[u,n]}};var Dr="function"==typeof Object.is?Object.is:function(e,t){return e===t&&(0!==e||1/e==1/t)||e!=e&&t!=t},Fr=Object.prototype.hasOwnProperty;function Lr(e,t){if(Dr(e,t))return!0;if("object"!=typeof e||null===e||"object"!=typeof t||null===t)return!1;var n=Object.keys(e),r=Object.keys(t);if(n.length!==r.length)return!1;for(r=0;r<n.length;r++)if(!Fr.call(t,n[r])||!Dr(e[n[r]],t[n[r]]))return!1;return!0}var Ur=C&&"documentMode"in document&&11>=document.documentMode,Br={select:{phasedRegistrationNames:{bubbled:"onSelect",captured:"onSelectCapture"},dependencies:"blur contextmenu dragend focus keydown keyup mousedown mouseup selectionchange".split(" ")}},Vr=null,$r=null,Wr=null,Qr=!1;function Hr(e,t){var n=t.window===t?t.document:9===t.nodeType?t:t.ownerDocument;return Qr||null==Vr||Vr!==fn(n)?null:("selectionStart"in(n=Vr)&&mn(n)?n={start:n.selectionStart,end:n.selectionEnd}:n={anchorNode:(n=(n.ownerDocument&&n.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:n.anchorOffset,focusNode:n.focusNode,focusOffset:n.focusOffset},Wr&&Lr(Wr,n)?null:(Wr=n,(e=Wn.getPooled(Br.select,$r,e,t)).type="select",e.target=Vr,Dn(e),e))}var Kr={eventTypes:Br,extractEvents:function(e,t,n,r,i,o){if(!(o=!(i=o||(r.window===r?r.document:9===r.nodeType?r:r.ownerDocument)))){e:{i=Je(i),o=S.onSelect;for(var a=0;a<o.length;a++)if(!i.has(o[a])){i=!1;break e}i=!0}o=!i}if(o)return null;switch(i=t?_n(t):window,e){case"focus":(cr(i)||"true"===i.contentEditable)&&(Vr=i,$r=t,Wr=null);break;case"blur":Wr=$r=Vr=null;break;case"mousedown":Qr=!0;break;case"contextmenu":case"mouseup":case"dragend":return Qr=!1,Hr(n,r);case"selectionchange":if(Ur)break;case"keydown":case"keyup":return Hr(n,r)}return null}},qr=Wn.extend({animationName:null,elapsedTime:null,pseudoElement:null}),Yr=Wn.extend({clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}}),Xr=Sr.extend({relatedTarget:null});function Gr(e){var t=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===t&&(e=13):e=t,10===e&&(e=13),32<=e||13===e?e:0}var Jr={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},Zr={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},ei=Sr.extend({key:function(e){if(e.key){var t=Jr[e.key]||e.key;if("Unidentified"!==t)return t}return"keypress"===e.type?13===(e=Gr(e))?"Enter":String.fromCharCode(e):"keydown"===e.type||"keyup"===e.type?Zr[e.keyCode]||"Unidentified":""},location:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,repeat:null,locale:null,getModifierState:Pr,charCode:function(e){return"keypress"===e.type?Gr(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?Gr(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}}),ti=jr.extend({dataTransfer:null}),ni=Sr.extend({touches:null,targetTouches:null,changedTouches:null,altKey:null,metaKey:null,ctrlKey:null,shiftKey:null,getModifierState:Pr}),ri=Wn.extend({propertyName:null,elapsedTime:null,pseudoElement:null}),ii=jr.extend({deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:null,deltaMode:null}),oi={eventTypes:Dt,extractEvents:function(e,t,n,r){var i=Ft.get(e);if(!i)return null;switch(e){case"keypress":if(0===Gr(n))return null;case"keydown":case"keyup":e=ei;break;case"blur":case"focus":e=Xr;break;case"click":if(2===n.button)return null;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":e=jr;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":e=ti;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":e=ni;break;case He:case Ke:case qe:e=qr;break;case Ye:e=ri;break;case"scroll":e=Sr;break;case"wheel":e=ii;break;case"copy":case"cut":case"paste":e=Yr;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":e=Rr;break;default:e=Wn}return Dn(t=e.getPooled(i,t,n,r)),t}};if(g)throw Error(a(101));g=Array.prototype.slice.call("ResponderEventPlugin SimpleEventPlugin EnterLeaveEventPlugin ChangeEventPlugin SelectEventPlugin BeforeInputEventPlugin".split(" ")),w(),m=In,h=Pn,v=_n,O({SimpleEventPlugin:oi,EnterLeaveEventPlugin:Mr,ChangeEventPlugin:Tr,SelectEventPlugin:Kr,BeforeInputEventPlugin:lr});var ai=[],li=-1;function ui(e){0>li||(e.current=ai[li],ai[li]=null,li--)}function ci(e,t){li++,ai[li]=e.current,e.current=t}var fi={},si={current:fi},di={current:!1},pi=fi;function mi(e,t){var n=e.type.contextTypes;if(!n)return fi;var r=e.stateNode;if(r&&r.__reactInternalMemoizedUnmaskedChildContext===t)return r.__reactInternalMemoizedMaskedChildContext;var i,o={};for(i in n)o[i]=t[i];return r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=t,e.__reactInternalMemoizedMaskedChildContext=o),o}function hi(e){return null!=(e=e.childContextTypes)}function vi(){ui(di),ui(si)}function yi(e,t,n){if(si.current!==fi)throw Error(a(168));ci(si,t),ci(di,n)}function gi(e,t,n){var r=e.stateNode;if(e=t.childContextTypes,"function"!=typeof r.getChildContext)return n;for(var o in r=r.getChildContext())if(!(o in e))throw Error(a(108,ve(t)||"Unknown",o));return i({},n,{},r)}function bi(e){return e=(e=e.stateNode)&&e.__reactInternalMemoizedMergedChildContext||fi,pi=si.current,ci(si,e),ci(di,di.current),!0}function wi(e,t,n){var r=e.stateNode;if(!r)throw Error(a(169));n?(e=gi(e,t,pi),r.__reactInternalMemoizedMergedChildContext=e,ui(di),ui(si),ci(si,e)):ui(di),ci(di,n)}var xi=o.unstable_runWithPriority,Ei=o.unstable_scheduleCallback,ki=o.unstable_cancelCallback,Ti=o.unstable_requestPaint,Si=o.unstable_now,Oi=o.unstable_getCurrentPriorityLevel,Ci=o.unstable_ImmediatePriority,Pi=o.unstable_UserBlockingPriority,_i=o.unstable_NormalPriority,Ii=o.unstable_LowPriority,Ai=o.unstable_IdlePriority,Ni={},ji=o.unstable_shouldYield,Ri=void 0!==Ti?Ti:function(){},zi=null,Mi=null,Di=!1,Fi=Si(),Li=1e4>Fi?Si:function(){return Si()-Fi};function Ui(){switch(Oi()){case Ci:return 99;case Pi:return 98;case _i:return 97;case Ii:return 96;case Ai:return 95;default:throw Error(a(332))}}function Bi(e){switch(e){case 99:return Ci;case 98:return Pi;case 97:return _i;case 96:return Ii;case 95:return Ai;default:throw Error(a(332))}}function Vi(e,t){return e=Bi(e),xi(e,t)}function $i(e,t,n){return e=Bi(e),Ei(e,t,n)}function Wi(e){return null===zi?(zi=[e],Mi=Ei(Ci,Hi)):zi.push(e),Ni}function Qi(){if(null!==Mi){var e=Mi;Mi=null,ki(e)}Hi()}function Hi(){if(!Di&&null!==zi){Di=!0;var e=0;try{var t=zi;Vi(99,(function(){for(;e<t.length;e++){var n=t[e];do{n=n(!0)}while(null!==n)}})),zi=null}catch(t){throw null!==zi&&(zi=zi.slice(e+1)),Ei(Ci,Qi),t}finally{Di=!1}}}function Ki(e,t,n){return 1073741821-(1+((1073741821-e+t/10)/(n/=10)|0))*n}function qi(e,t){if(e&&e.defaultProps)for(var n in t=i({},t),e=e.defaultProps)void 0===t[n]&&(t[n]=e[n]);return t}var Yi={current:null},Xi=null,Gi=null,Ji=null;function Zi(){Ji=Gi=Xi=null}function eo(e){var t=Yi.current;ui(Yi),e.type._context._currentValue=t}function to(e,t){for(;null!==e;){var n=e.alternate;if(e.childExpirationTime<t)e.childExpirationTime=t,null!==n&&n.childExpirationTime<t&&(n.childExpirationTime=t);else{if(!(null!==n&&n.childExpirationTime<t))break;n.childExpirationTime=t}e=e.return}}function no(e,t){Xi=e,Ji=Gi=null,null!==(e=e.dependencies)&&null!==e.firstContext&&(e.expirationTime>=t&&(Ia=!0),e.firstContext=null)}function ro(e,t){if(Ji!==e&&!1!==t&&0!==t)if("number"==typeof t&&1073741823!==t||(Ji=e,t=1073741823),t={context:e,observedBits:t,next:null},null===Gi){if(null===Xi)throw Error(a(308));Gi=t,Xi.dependencies={expirationTime:0,firstContext:t,responders:null}}else Gi=Gi.next=t;return e._currentValue}var io=!1;function oo(e){e.updateQueue={baseState:e.memoizedState,baseQueue:null,shared:{pending:null},effects:null}}function ao(e,t){e=e.updateQueue,t.updateQueue===e&&(t.updateQueue={baseState:e.baseState,baseQueue:e.baseQueue,shared:e.shared,effects:e.effects})}function lo(e,t){return(e={expirationTime:e,suspenseConfig:t,tag:0,payload:null,callback:null,next:null}).next=e}function uo(e,t){if(null!==(e=e.updateQueue)){var n=(e=e.shared).pending;null===n?t.next=t:(t.next=n.next,n.next=t),e.pending=t}}function co(e,t){var n=e.alternate;null!==n&&ao(n,e),null===(n=(e=e.updateQueue).baseQueue)?(e.baseQueue=t.next=t,t.next=t):(t.next=n.next,n.next=t)}function fo(e,t,n,r){var o=e.updateQueue;io=!1;var a=o.baseQueue,l=o.shared.pending;if(null!==l){if(null!==a){var u=a.next;a.next=l.next,l.next=u}a=l,o.shared.pending=null,null!==(u=e.alternate)&&(null!==(u=u.updateQueue)&&(u.baseQueue=l))}if(null!==a){u=a.next;var c=o.baseState,f=0,s=null,d=null,p=null;if(null!==u)for(var m=u;;){if((l=m.expirationTime)<r){var h={expirationTime:m.expirationTime,suspenseConfig:m.suspenseConfig,tag:m.tag,payload:m.payload,callback:m.callback,next:null};null===p?(d=p=h,s=c):p=p.next=h,l>f&&(f=l)}else{null!==p&&(p=p.next={expirationTime:1073741823,suspenseConfig:m.suspenseConfig,tag:m.tag,payload:m.payload,callback:m.callback,next:null}),ou(l,m.suspenseConfig);e:{var v=e,y=m;switch(l=t,h=n,y.tag){case 1:if("function"==typeof(v=y.payload)){c=v.call(h,c,l);break e}c=v;break e;case 3:v.effectTag=-4097&v.effectTag|64;case 0:if(null==(l="function"==typeof(v=y.payload)?v.call(h,c,l):v))break e;c=i({},c,l);break e;case 2:io=!0}}null!==m.callback&&(e.effectTag|=32,null===(l=o.effects)?o.effects=[m]:l.push(m))}if(null===(m=m.next)||m===u){if(null===(l=o.shared.pending))break;m=a.next=l.next,l.next=u,o.baseQueue=a=l,o.shared.pending=null}}null===p?s=c:p.next=d,o.baseState=s,o.baseQueue=p,au(f),e.expirationTime=f,e.memoizedState=c}}function so(e,t,n){if(e=t.effects,t.effects=null,null!==e)for(t=0;t<e.length;t++){var r=e[t],i=r.callback;if(null!==i){if(r.callback=null,r=i,i=n,"function"!=typeof r)throw Error(a(191,r));r.call(i)}}}var po=X.ReactCurrentBatchConfig,mo=(new r.Component).refs;function ho(e,t,n,r){n=null==(n=n(r,t=e.memoizedState))?t:i({},t,n),e.memoizedState=n,0===e.expirationTime&&(e.updateQueue.baseState=n)}var vo={isMounted:function(e){return!!(e=e._reactInternalFiber)&&Ze(e)===e},enqueueSetState:function(e,t,n){e=e._reactInternalFiber;var r=Hl(),i=po.suspense;(i=lo(r=Kl(r,e,i),i)).payload=t,null!=n&&(i.callback=n),uo(e,i),ql(e,r)},enqueueReplaceState:function(e,t,n){e=e._reactInternalFiber;var r=Hl(),i=po.suspense;(i=lo(r=Kl(r,e,i),i)).tag=1,i.payload=t,null!=n&&(i.callback=n),uo(e,i),ql(e,r)},enqueueForceUpdate:function(e,t){e=e._reactInternalFiber;var n=Hl(),r=po.suspense;(r=lo(n=Kl(n,e,r),r)).tag=2,null!=t&&(r.callback=t),uo(e,r),ql(e,n)}};function yo(e,t,n,r,i,o,a){return"function"==typeof(e=e.stateNode).shouldComponentUpdate?e.shouldComponentUpdate(r,o,a):!t.prototype||!t.prototype.isPureReactComponent||(!Lr(n,r)||!Lr(i,o))}function go(e,t,n){var r=!1,i=fi,o=t.contextType;return"object"==typeof o&&null!==o?o=ro(o):(i=hi(t)?pi:si.current,o=(r=null!=(r=t.contextTypes))?mi(e,i):fi),t=new t(n,o),e.memoizedState=null!==t.state&&void 0!==t.state?t.state:null,t.updater=vo,e.stateNode=t,t._reactInternalFiber=e,r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=i,e.__reactInternalMemoizedMaskedChildContext=o),t}function bo(e,t,n,r){e=t.state,"function"==typeof t.componentWillReceiveProps&&t.componentWillReceiveProps(n,r),"function"==typeof t.UNSAFE_componentWillReceiveProps&&t.UNSAFE_componentWillReceiveProps(n,r),t.state!==e&&vo.enqueueReplaceState(t,t.state,null)}function wo(e,t,n,r){var i=e.stateNode;i.props=n,i.state=e.memoizedState,i.refs=mo,oo(e);var o=t.contextType;"object"==typeof o&&null!==o?i.context=ro(o):(o=hi(t)?pi:si.current,i.context=mi(e,o)),fo(e,n,i,r),i.state=e.memoizedState,"function"==typeof(o=t.getDerivedStateFromProps)&&(ho(e,t,o,n),i.state=e.memoizedState),"function"==typeof t.getDerivedStateFromProps||"function"==typeof i.getSnapshotBeforeUpdate||"function"!=typeof i.UNSAFE_componentWillMount&&"function"!=typeof i.componentWillMount||(t=i.state,"function"==typeof i.componentWillMount&&i.componentWillMount(),"function"==typeof i.UNSAFE_componentWillMount&&i.UNSAFE_componentWillMount(),t!==i.state&&vo.enqueueReplaceState(i,i.state,null),fo(e,n,i,r),i.state=e.memoizedState),"function"==typeof i.componentDidMount&&(e.effectTag|=4)}var xo=Array.isArray;function Eo(e,t,n){if(null!==(e=n.ref)&&"function"!=typeof e&&"object"!=typeof e){if(n._owner){if(n=n._owner){if(1!==n.tag)throw Error(a(309));var r=n.stateNode}if(!r)throw Error(a(147,e));var i=""+e;return null!==t&&null!==t.ref&&"function"==typeof t.ref&&t.ref._stringRef===i?t.ref:((t=function(e){var t=r.refs;t===mo&&(t=r.refs={}),null===e?delete t[i]:t[i]=e})._stringRef=i,t)}if("string"!=typeof e)throw Error(a(284));if(!n._owner)throw Error(a(290,e))}return e}function ko(e,t){if("textarea"!==e.type)throw Error(a(31,"[object Object]"===Object.prototype.toString.call(t)?"object with keys {"+Object.keys(t).join(", ")+"}":t,""))}function To(e){function t(t,n){if(e){var r=t.lastEffect;null!==r?(r.nextEffect=n,t.lastEffect=n):t.firstEffect=t.lastEffect=n,n.nextEffect=null,n.effectTag=8}}function n(n,r){if(!e)return null;for(;null!==r;)t(n,r),r=r.sibling;return null}function r(e,t){for(e=new Map;null!==t;)null!==t.key?e.set(t.key,t):e.set(t.index,t),t=t.sibling;return e}function i(e,t){return(e=Ou(e,t)).index=0,e.sibling=null,e}function o(t,n,r){return t.index=r,e?null!==(r=t.alternate)?(r=r.index)<n?(t.effectTag=2,n):r:(t.effectTag=2,n):n}function l(t){return e&&null===t.alternate&&(t.effectTag=2),t}function u(e,t,n,r){return null===t||6!==t.tag?((t=_u(n,e.mode,r)).return=e,t):((t=i(t,n)).return=e,t)}function c(e,t,n,r){return null!==t&&t.elementType===n.type?((r=i(t,n.props)).ref=Eo(e,t,n),r.return=e,r):((r=Cu(n.type,n.key,n.props,null,e.mode,r)).ref=Eo(e,t,n),r.return=e,r)}function f(e,t,n,r){return null===t||4!==t.tag||t.stateNode.containerInfo!==n.containerInfo||t.stateNode.implementation!==n.implementation?((t=Iu(n,e.mode,r)).return=e,t):((t=i(t,n.children||[])).return=e,t)}function s(e,t,n,r,o){return null===t||7!==t.tag?((t=Pu(n,e.mode,r,o)).return=e,t):((t=i(t,n)).return=e,t)}function d(e,t,n){if("string"==typeof t||"number"==typeof t)return(t=_u(""+t,e.mode,n)).return=e,t;if("object"==typeof t&&null!==t){switch(t.$$typeof){case ee:return(n=Cu(t.type,t.key,t.props,null,e.mode,n)).ref=Eo(e,null,t),n.return=e,n;case te:return(t=Iu(t,e.mode,n)).return=e,t}if(xo(t)||he(t))return(t=Pu(t,e.mode,n,null)).return=e,t;ko(e,t)}return null}function p(e,t,n,r){var i=null!==t?t.key:null;if("string"==typeof n||"number"==typeof n)return null!==i?null:u(e,t,""+n,r);if("object"==typeof n&&null!==n){switch(n.$$typeof){case ee:return n.key===i?n.type===ne?s(e,t,n.props.children,r,i):c(e,t,n,r):null;case te:return n.key===i?f(e,t,n,r):null}if(xo(n)||he(n))return null!==i?null:s(e,t,n,r,null);ko(e,n)}return null}function m(e,t,n,r,i){if("string"==typeof r||"number"==typeof r)return u(t,e=e.get(n)||null,""+r,i);if("object"==typeof r&&null!==r){switch(r.$$typeof){case ee:return e=e.get(null===r.key?n:r.key)||null,r.type===ne?s(t,e,r.props.children,i,r.key):c(t,e,r,i);case te:return f(t,e=e.get(null===r.key?n:r.key)||null,r,i)}if(xo(r)||he(r))return s(t,e=e.get(n)||null,r,i,null);ko(t,r)}return null}function h(i,a,l,u){for(var c=null,f=null,s=a,h=a=0,v=null;null!==s&&h<l.length;h++){s.index>h?(v=s,s=null):v=s.sibling;var y=p(i,s,l[h],u);if(null===y){null===s&&(s=v);break}e&&s&&null===y.alternate&&t(i,s),a=o(y,a,h),null===f?c=y:f.sibling=y,f=y,s=v}if(h===l.length)return n(i,s),c;if(null===s){for(;h<l.length;h++)null!==(s=d(i,l[h],u))&&(a=o(s,a,h),null===f?c=s:f.sibling=s,f=s);return c}for(s=r(i,s);h<l.length;h++)null!==(v=m(s,i,h,l[h],u))&&(e&&null!==v.alternate&&s.delete(null===v.key?h:v.key),a=o(v,a,h),null===f?c=v:f.sibling=v,f=v);return e&&s.forEach((function(e){return t(i,e)})),c}function v(i,l,u,c){var f=he(u);if("function"!=typeof f)throw Error(a(150));if(null==(u=f.call(u)))throw Error(a(151));for(var s=f=null,h=l,v=l=0,y=null,g=u.next();null!==h&&!g.done;v++,g=u.next()){h.index>v?(y=h,h=null):y=h.sibling;var b=p(i,h,g.value,c);if(null===b){null===h&&(h=y);break}e&&h&&null===b.alternate&&t(i,h),l=o(b,l,v),null===s?f=b:s.sibling=b,s=b,h=y}if(g.done)return n(i,h),f;if(null===h){for(;!g.done;v++,g=u.next())null!==(g=d(i,g.value,c))&&(l=o(g,l,v),null===s?f=g:s.sibling=g,s=g);return f}for(h=r(i,h);!g.done;v++,g=u.next())null!==(g=m(h,i,v,g.value,c))&&(e&&null!==g.alternate&&h.delete(null===g.key?v:g.key),l=o(g,l,v),null===s?f=g:s.sibling=g,s=g);return e&&h.forEach((function(e){return t(i,e)})),f}return function(e,r,o,u){var c="object"==typeof o&&null!==o&&o.type===ne&&null===o.key;c&&(o=o.props.children);var f="object"==typeof o&&null!==o;if(f)switch(o.$$typeof){case ee:e:{for(f=o.key,c=r;null!==c;){if(c.key===f){switch(c.tag){case 7:if(o.type===ne){n(e,c.sibling),(r=i(c,o.props.children)).return=e,e=r;break e}break;default:if(c.elementType===o.type){n(e,c.sibling),(r=i(c,o.props)).ref=Eo(e,c,o),r.return=e,e=r;break e}}n(e,c);break}t(e,c),c=c.sibling}o.type===ne?((r=Pu(o.props.children,e.mode,u,o.key)).return=e,e=r):((u=Cu(o.type,o.key,o.props,null,e.mode,u)).ref=Eo(e,r,o),u.return=e,e=u)}return l(e);case te:e:{for(c=o.key;null!==r;){if(r.key===c){if(4===r.tag&&r.stateNode.containerInfo===o.containerInfo&&r.stateNode.implementation===o.implementation){n(e,r.sibling),(r=i(r,o.children||[])).return=e,e=r;break e}n(e,r);break}t(e,r),r=r.sibling}(r=Iu(o,e.mode,u)).return=e,e=r}return l(e)}if("string"==typeof o||"number"==typeof o)return o=""+o,null!==r&&6===r.tag?(n(e,r.sibling),(r=i(r,o)).return=e,e=r):(n(e,r),(r=_u(o,e.mode,u)).return=e,e=r),l(e);if(xo(o))return h(e,r,o,u);if(he(o))return v(e,r,o,u);if(f&&ko(e,o),void 0===o&&!c)switch(e.tag){case 1:case 0:throw e=e.type,Error(a(152,e.displayName||e.name||"Component"))}return n(e,r)}}var So=To(!0),Oo=To(!1),Co={},Po={current:Co},_o={current:Co},Io={current:Co};function Ao(e){if(e===Co)throw Error(a(174));return e}function No(e,t){switch(ci(Io,t),ci(_o,e),ci(Po,Co),e=t.nodeType){case 9:case 11:t=(t=t.documentElement)?t.namespaceURI:De(null,"");break;default:t=De(t=(e=8===e?t.parentNode:t).namespaceURI||null,e=e.tagName)}ui(Po),ci(Po,t)}function jo(){ui(Po),ui(_o),ui(Io)}function Ro(e){Ao(Io.current);var t=Ao(Po.current),n=De(t,e.type);t!==n&&(ci(_o,e),ci(Po,n))}function zo(e){_o.current===e&&(ui(Po),ui(_o))}var Mo={current:0};function Do(e){for(var t=e;null!==t;){if(13===t.tag){var n=t.memoizedState;if(null!==n&&(null===(n=n.dehydrated)||"$?"===n.data||"$!"===n.data))return t}else if(19===t.tag&&void 0!==t.memoizedProps.revealOrder){if(0!=(64&t.effectTag))return t}else if(null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}return null}function Fo(e,t){return{responder:e,props:t}}var Lo=X.ReactCurrentDispatcher,Uo=X.ReactCurrentBatchConfig,Bo=0,Vo=null,$o=null,Wo=null,Qo=!1;function Ho(){throw Error(a(321))}function Ko(e,t){if(null===t)return!1;for(var n=0;n<t.length&&n<e.length;n++)if(!Dr(e[n],t[n]))return!1;return!0}function qo(e,t,n,r,i,o){if(Bo=o,Vo=t,t.memoizedState=null,t.updateQueue=null,t.expirationTime=0,Lo.current=null===e||null===e.memoizedState?ya:ga,e=n(r,i),t.expirationTime===Bo){o=0;do{if(t.expirationTime=0,!(25>o))throw Error(a(301));o+=1,Wo=$o=null,t.updateQueue=null,Lo.current=ba,e=n(r,i)}while(t.expirationTime===Bo)}if(Lo.current=va,t=null!==$o&&null!==$o.next,Bo=0,Wo=$o=Vo=null,Qo=!1,t)throw Error(a(300));return e}function Yo(){var e={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return null===Wo?Vo.memoizedState=Wo=e:Wo=Wo.next=e,Wo}function Xo(){if(null===$o){var e=Vo.alternate;e=null!==e?e.memoizedState:null}else e=$o.next;var t=null===Wo?Vo.memoizedState:Wo.next;if(null!==t)Wo=t,$o=e;else{if(null===e)throw Error(a(310));e={memoizedState:($o=e).memoizedState,baseState:$o.baseState,baseQueue:$o.baseQueue,queue:$o.queue,next:null},null===Wo?Vo.memoizedState=Wo=e:Wo=Wo.next=e}return Wo}function Go(e,t){return"function"==typeof t?t(e):t}function Jo(e){var t=Xo(),n=t.queue;if(null===n)throw Error(a(311));n.lastRenderedReducer=e;var r=$o,i=r.baseQueue,o=n.pending;if(null!==o){if(null!==i){var l=i.next;i.next=o.next,o.next=l}r.baseQueue=i=o,n.pending=null}if(null!==i){i=i.next,r=r.baseState;var u=l=o=null,c=i;do{var f=c.expirationTime;if(f<Bo){var s={expirationTime:c.expirationTime,suspenseConfig:c.suspenseConfig,action:c.action,eagerReducer:c.eagerReducer,eagerState:c.eagerState,next:null};null===u?(l=u=s,o=r):u=u.next=s,f>Vo.expirationTime&&(Vo.expirationTime=f,au(f))}else null!==u&&(u=u.next={expirationTime:1073741823,suspenseConfig:c.suspenseConfig,action:c.action,eagerReducer:c.eagerReducer,eagerState:c.eagerState,next:null}),ou(f,c.suspenseConfig),r=c.eagerReducer===e?c.eagerState:e(r,c.action);c=c.next}while(null!==c&&c!==i);null===u?o=r:u.next=l,Dr(r,t.memoizedState)||(Ia=!0),t.memoizedState=r,t.baseState=o,t.baseQueue=u,n.lastRenderedState=r}return[t.memoizedState,n.dispatch]}function Zo(e){var t=Xo(),n=t.queue;if(null===n)throw Error(a(311));n.lastRenderedReducer=e;var r=n.dispatch,i=n.pending,o=t.memoizedState;if(null!==i){n.pending=null;var l=i=i.next;do{o=e(o,l.action),l=l.next}while(l!==i);Dr(o,t.memoizedState)||(Ia=!0),t.memoizedState=o,null===t.baseQueue&&(t.baseState=o),n.lastRenderedState=o}return[o,r]}function ea(e){var t=Yo();return"function"==typeof e&&(e=e()),t.memoizedState=t.baseState=e,e=(e=t.queue={pending:null,dispatch:null,lastRenderedReducer:Go,lastRenderedState:e}).dispatch=ha.bind(null,Vo,e),[t.memoizedState,e]}function ta(e,t,n,r){return e={tag:e,create:t,destroy:n,deps:r,next:null},null===(t=Vo.updateQueue)?(t={lastEffect:null},Vo.updateQueue=t,t.lastEffect=e.next=e):null===(n=t.lastEffect)?t.lastEffect=e.next=e:(r=n.next,n.next=e,e.next=r,t.lastEffect=e),e}function na(){return Xo().memoizedState}function ra(e,t,n,r){var i=Yo();Vo.effectTag|=e,i.memoizedState=ta(1|t,n,void 0,void 0===r?null:r)}function ia(e,t,n,r){var i=Xo();r=void 0===r?null:r;var o=void 0;if(null!==$o){var a=$o.memoizedState;if(o=a.destroy,null!==r&&Ko(r,a.deps))return void ta(t,n,o,r)}Vo.effectTag|=e,i.memoizedState=ta(1|t,n,o,r)}function oa(e,t){return ra(516,4,e,t)}function aa(e,t){return ia(516,4,e,t)}function la(e,t){return ia(4,2,e,t)}function ua(e,t){return"function"==typeof t?(e=e(),t(e),function(){t(null)}):null!=t?(e=e(),t.current=e,function(){t.current=null}):void 0}function ca(e,t,n){return n=null!=n?n.concat([e]):null,ia(4,2,ua.bind(null,t,e),n)}function fa(){}function sa(e,t){return Yo().memoizedState=[e,void 0===t?null:t],e}function da(e,t){var n=Xo();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&Ko(t,r[1])?r[0]:(n.memoizedState=[e,t],e)}function pa(e,t){var n=Xo();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&Ko(t,r[1])?r[0]:(e=e(),n.memoizedState=[e,t],e)}function ma(e,t,n){var r=Ui();Vi(98>r?98:r,(function(){e(!0)})),Vi(97<r?97:r,(function(){var r=Uo.suspense;Uo.suspense=void 0===t?null:t;try{e(!1),n()}finally{Uo.suspense=r}}))}function ha(e,t,n){var r=Hl(),i=po.suspense;i={expirationTime:r=Kl(r,e,i),suspenseConfig:i,action:n,eagerReducer:null,eagerState:null,next:null};var o=t.pending;if(null===o?i.next=i:(i.next=o.next,o.next=i),t.pending=i,o=e.alternate,e===Vo||null!==o&&o===Vo)Qo=!0,i.expirationTime=Bo,Vo.expirationTime=Bo;else{if(0===e.expirationTime&&(null===o||0===o.expirationTime)&&null!==(o=t.lastRenderedReducer))try{var a=t.lastRenderedState,l=o(a,n);if(i.eagerReducer=o,i.eagerState=l,Dr(l,a))return}catch(e){}ql(e,r)}}var va={readContext:ro,useCallback:Ho,useContext:Ho,useEffect:Ho,useImperativeHandle:Ho,useLayoutEffect:Ho,useMemo:Ho,useReducer:Ho,useRef:Ho,useState:Ho,useDebugValue:Ho,useResponder:Ho,useDeferredValue:Ho,useTransition:Ho},ya={readContext:ro,useCallback:sa,useContext:ro,useEffect:oa,useImperativeHandle:function(e,t,n){return n=null!=n?n.concat([e]):null,ra(4,2,ua.bind(null,t,e),n)},useLayoutEffect:function(e,t){return ra(4,2,e,t)},useMemo:function(e,t){var n=Yo();return t=void 0===t?null:t,e=e(),n.memoizedState=[e,t],e},useReducer:function(e,t,n){var r=Yo();return t=void 0!==n?n(t):t,r.memoizedState=r.baseState=t,e=(e=r.queue={pending:null,dispatch:null,lastRenderedReducer:e,lastRenderedState:t}).dispatch=ha.bind(null,Vo,e),[r.memoizedState,e]},useRef:function(e){return e={current:e},Yo().memoizedState=e},useState:ea,useDebugValue:fa,useResponder:Fo,useDeferredValue:function(e,t){var n=ea(e),r=n[0],i=n[1];return oa((function(){var n=Uo.suspense;Uo.suspense=void 0===t?null:t;try{i(e)}finally{Uo.suspense=n}}),[e,t]),r},useTransition:function(e){var t=ea(!1),n=t[0];return t=t[1],[sa(ma.bind(null,t,e),[t,e]),n]}},ga={readContext:ro,useCallback:da,useContext:ro,useEffect:aa,useImperativeHandle:ca,useLayoutEffect:la,useMemo:pa,useReducer:Jo,useRef:na,useState:function(){return Jo(Go)},useDebugValue:fa,useResponder:Fo,useDeferredValue:function(e,t){var n=Jo(Go),r=n[0],i=n[1];return aa((function(){var n=Uo.suspense;Uo.suspense=void 0===t?null:t;try{i(e)}finally{Uo.suspense=n}}),[e,t]),r},useTransition:function(e){var t=Jo(Go),n=t[0];return t=t[1],[da(ma.bind(null,t,e),[t,e]),n]}},ba={readContext:ro,useCallback:da,useContext:ro,useEffect:aa,useImperativeHandle:ca,useLayoutEffect:la,useMemo:pa,useReducer:Zo,useRef:na,useState:function(){return Zo(Go)},useDebugValue:fa,useResponder:Fo,useDeferredValue:function(e,t){var n=Zo(Go),r=n[0],i=n[1];return aa((function(){var n=Uo.suspense;Uo.suspense=void 0===t?null:t;try{i(e)}finally{Uo.suspense=n}}),[e,t]),r},useTransition:function(e){var t=Zo(Go),n=t[0];return t=t[1],[da(ma.bind(null,t,e),[t,e]),n]}},wa=null,xa=null,Ea=!1;function ka(e,t){var n=Tu(5,null,null,0);n.elementType="DELETED",n.type="DELETED",n.stateNode=t,n.return=e,n.effectTag=8,null!==e.lastEffect?(e.lastEffect.nextEffect=n,e.lastEffect=n):e.firstEffect=e.lastEffect=n}function Ta(e,t){switch(e.tag){case 5:var n=e.type;return null!==(t=1!==t.nodeType||n.toLowerCase()!==t.nodeName.toLowerCase()?null:t)&&(e.stateNode=t,!0);case 6:return null!==(t=""===e.pendingProps||3!==t.nodeType?null:t)&&(e.stateNode=t,!0);case 13:default:return!1}}function Sa(e){if(Ea){var t=xa;if(t){var n=t;if(!Ta(e,t)){if(!(t=xn(n.nextSibling))||!Ta(e,t))return e.effectTag=-1025&e.effectTag|2,Ea=!1,void(wa=e);ka(wa,n)}wa=e,xa=xn(t.firstChild)}else e.effectTag=-1025&e.effectTag|2,Ea=!1,wa=e}}function Oa(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag&&13!==e.tag;)e=e.return;wa=e}function Ca(e){if(e!==wa)return!1;if(!Ea)return Oa(e),Ea=!0,!1;var t=e.type;if(5!==e.tag||"head"!==t&&"body"!==t&&!gn(t,e.memoizedProps))for(t=xa;t;)ka(e,t),t=xn(t.nextSibling);if(Oa(e),13===e.tag){if(!(e=null!==(e=e.memoizedState)?e.dehydrated:null))throw Error(a(317));e:{for(e=e.nextSibling,t=0;e;){if(8===e.nodeType){var n=e.data;if("/$"===n){if(0===t){xa=xn(e.nextSibling);break e}t--}else"$"!==n&&"$!"!==n&&"$?"!==n||t++}e=e.nextSibling}xa=null}}else xa=wa?xn(e.stateNode.nextSibling):null;return!0}function Pa(){xa=wa=null,Ea=!1}var _a=X.ReactCurrentOwner,Ia=!1;function Aa(e,t,n,r){t.child=null===e?Oo(t,null,n,r):So(t,e.child,n,r)}function Na(e,t,n,r,i){n=n.render;var o=t.ref;return no(t,i),r=qo(e,t,n,r,o,i),null===e||Ia?(t.effectTag|=1,Aa(e,t,r,i),t.child):(t.updateQueue=e.updateQueue,t.effectTag&=-517,e.expirationTime<=i&&(e.expirationTime=0),qa(e,t,i))}function ja(e,t,n,r,i,o){if(null===e){var a=n.type;return"function"!=typeof a||Su(a)||void 0!==a.defaultProps||null!==n.compare||void 0!==n.defaultProps?((e=Cu(n.type,null,r,null,t.mode,o)).ref=t.ref,e.return=t,t.child=e):(t.tag=15,t.type=a,Ra(e,t,a,r,i,o))}return a=e.child,i<o&&(i=a.memoizedProps,(n=null!==(n=n.compare)?n:Lr)(i,r)&&e.ref===t.ref)?qa(e,t,o):(t.effectTag|=1,(e=Ou(a,r)).ref=t.ref,e.return=t,t.child=e)}function Ra(e,t,n,r,i,o){return null!==e&&Lr(e.memoizedProps,r)&&e.ref===t.ref&&(Ia=!1,i<o)?(t.expirationTime=e.expirationTime,qa(e,t,o)):Ma(e,t,n,r,o)}function za(e,t){var n=t.ref;(null===e&&null!==n||null!==e&&e.ref!==n)&&(t.effectTag|=128)}function Ma(e,t,n,r,i){var o=hi(n)?pi:si.current;return o=mi(t,o),no(t,i),n=qo(e,t,n,r,o,i),null===e||Ia?(t.effectTag|=1,Aa(e,t,n,i),t.child):(t.updateQueue=e.updateQueue,t.effectTag&=-517,e.expirationTime<=i&&(e.expirationTime=0),qa(e,t,i))}function Da(e,t,n,r,i){if(hi(n)){var o=!0;bi(t)}else o=!1;if(no(t,i),null===t.stateNode)null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),go(t,n,r),wo(t,n,r,i),r=!0;else if(null===e){var a=t.stateNode,l=t.memoizedProps;a.props=l;var u=a.context,c=n.contextType;"object"==typeof c&&null!==c?c=ro(c):c=mi(t,c=hi(n)?pi:si.current);var f=n.getDerivedStateFromProps,s="function"==typeof f||"function"==typeof a.getSnapshotBeforeUpdate;s||"function"!=typeof a.UNSAFE_componentWillReceiveProps&&"function"!=typeof a.componentWillReceiveProps||(l!==r||u!==c)&&bo(t,a,r,c),io=!1;var d=t.memoizedState;a.state=d,fo(t,r,a,i),u=t.memoizedState,l!==r||d!==u||di.current||io?("function"==typeof f&&(ho(t,n,f,r),u=t.memoizedState),(l=io||yo(t,n,l,r,d,u,c))?(s||"function"!=typeof a.UNSAFE_componentWillMount&&"function"!=typeof a.componentWillMount||("function"==typeof a.componentWillMount&&a.componentWillMount(),"function"==typeof a.UNSAFE_componentWillMount&&a.UNSAFE_componentWillMount()),"function"==typeof a.componentDidMount&&(t.effectTag|=4)):("function"==typeof a.componentDidMount&&(t.effectTag|=4),t.memoizedProps=r,t.memoizedState=u),a.props=r,a.state=u,a.context=c,r=l):("function"==typeof a.componentDidMount&&(t.effectTag|=4),r=!1)}else a=t.stateNode,ao(e,t),l=t.memoizedProps,a.props=t.type===t.elementType?l:qi(t.type,l),u=a.context,"object"==typeof(c=n.contextType)&&null!==c?c=ro(c):c=mi(t,c=hi(n)?pi:si.current),(s="function"==typeof(f=n.getDerivedStateFromProps)||"function"==typeof a.getSnapshotBeforeUpdate)||"function"!=typeof a.UNSAFE_componentWillReceiveProps&&"function"!=typeof a.componentWillReceiveProps||(l!==r||u!==c)&&bo(t,a,r,c),io=!1,u=t.memoizedState,a.state=u,fo(t,r,a,i),d=t.memoizedState,l!==r||u!==d||di.current||io?("function"==typeof f&&(ho(t,n,f,r),d=t.memoizedState),(f=io||yo(t,n,l,r,u,d,c))?(s||"function"!=typeof a.UNSAFE_componentWillUpdate&&"function"!=typeof a.componentWillUpdate||("function"==typeof a.componentWillUpdate&&a.componentWillUpdate(r,d,c),"function"==typeof a.UNSAFE_componentWillUpdate&&a.UNSAFE_componentWillUpdate(r,d,c)),"function"==typeof a.componentDidUpdate&&(t.effectTag|=4),"function"==typeof a.getSnapshotBeforeUpdate&&(t.effectTag|=256)):("function"!=typeof a.componentDidUpdate||l===e.memoizedProps&&u===e.memoizedState||(t.effectTag|=4),"function"!=typeof a.getSnapshotBeforeUpdate||l===e.memoizedProps&&u===e.memoizedState||(t.effectTag|=256),t.memoizedProps=r,t.memoizedState=d),a.props=r,a.state=d,a.context=c,r=f):("function"!=typeof a.componentDidUpdate||l===e.memoizedProps&&u===e.memoizedState||(t.effectTag|=4),"function"!=typeof a.getSnapshotBeforeUpdate||l===e.memoizedProps&&u===e.memoizedState||(t.effectTag|=256),r=!1);return Fa(e,t,n,r,o,i)}function Fa(e,t,n,r,i,o){za(e,t);var a=0!=(64&t.effectTag);if(!r&&!a)return i&&wi(t,n,!1),qa(e,t,o);r=t.stateNode,_a.current=t;var l=a&&"function"!=typeof n.getDerivedStateFromError?null:r.render();return t.effectTag|=1,null!==e&&a?(t.child=So(t,e.child,null,o),t.child=So(t,null,l,o)):Aa(e,t,l,o),t.memoizedState=r.state,i&&wi(t,n,!0),t.child}function La(e){var t=e.stateNode;t.pendingContext?yi(0,t.pendingContext,t.pendingContext!==t.context):t.context&&yi(0,t.context,!1),No(e,t.containerInfo)}var Ua,Ba,Va,$a={dehydrated:null,retryTime:0};function Wa(e,t,n){var r,i=t.mode,o=t.pendingProps,a=Mo.current,l=!1;if((r=0!=(64&t.effectTag))||(r=0!=(2&a)&&(null===e||null!==e.memoizedState)),r?(l=!0,t.effectTag&=-65):null!==e&&null===e.memoizedState||void 0===o.fallback||!0===o.unstable_avoidThisFallback||(a|=1),ci(Mo,1&a),null===e){if(void 0!==o.fallback&&Sa(t),l){if(l=o.fallback,(o=Pu(null,i,0,null)).return=t,0==(2&t.mode))for(e=null!==t.memoizedState?t.child.child:t.child,o.child=e;null!==e;)e.return=o,e=e.sibling;return(n=Pu(l,i,n,null)).return=t,o.sibling=n,t.memoizedState=$a,t.child=o,n}return i=o.children,t.memoizedState=null,t.child=Oo(t,null,i,n)}if(null!==e.memoizedState){if(i=(e=e.child).sibling,l){if(o=o.fallback,(n=Ou(e,e.pendingProps)).return=t,0==(2&t.mode)&&(l=null!==t.memoizedState?t.child.child:t.child)!==e.child)for(n.child=l;null!==l;)l.return=n,l=l.sibling;return(i=Ou(i,o)).return=t,n.sibling=i,n.childExpirationTime=0,t.memoizedState=$a,t.child=n,i}return n=So(t,e.child,o.children,n),t.memoizedState=null,t.child=n}if(e=e.child,l){if(l=o.fallback,(o=Pu(null,i,0,null)).return=t,o.child=e,null!==e&&(e.return=o),0==(2&t.mode))for(e=null!==t.memoizedState?t.child.child:t.child,o.child=e;null!==e;)e.return=o,e=e.sibling;return(n=Pu(l,i,n,null)).return=t,o.sibling=n,n.effectTag|=2,o.childExpirationTime=0,t.memoizedState=$a,t.child=o,n}return t.memoizedState=null,t.child=So(t,e,o.children,n)}function Qa(e,t){e.expirationTime<t&&(e.expirationTime=t);var n=e.alternate;null!==n&&n.expirationTime<t&&(n.expirationTime=t),to(e.return,t)}function Ha(e,t,n,r,i,o){var a=e.memoizedState;null===a?e.memoizedState={isBackwards:t,rendering:null,renderingStartTime:0,last:r,tail:n,tailExpiration:0,tailMode:i,lastEffect:o}:(a.isBackwards=t,a.rendering=null,a.renderingStartTime=0,a.last=r,a.tail=n,a.tailExpiration=0,a.tailMode=i,a.lastEffect=o)}function Ka(e,t,n){var r=t.pendingProps,i=r.revealOrder,o=r.tail;if(Aa(e,t,r.children,n),0!=(2&(r=Mo.current)))r=1&r|2,t.effectTag|=64;else{if(null!==e&&0!=(64&e.effectTag))e:for(e=t.child;null!==e;){if(13===e.tag)null!==e.memoizedState&&Qa(e,n);else if(19===e.tag)Qa(e,n);else if(null!==e.child){e.child.return=e,e=e.child;continue}if(e===t)break e;for(;null===e.sibling;){if(null===e.return||e.return===t)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}r&=1}if(ci(Mo,r),0==(2&t.mode))t.memoizedState=null;else switch(i){case"forwards":for(n=t.child,i=null;null!==n;)null!==(e=n.alternate)&&null===Do(e)&&(i=n),n=n.sibling;null===(n=i)?(i=t.child,t.child=null):(i=n.sibling,n.sibling=null),Ha(t,!1,i,n,o,t.lastEffect);break;case"backwards":for(n=null,i=t.child,t.child=null;null!==i;){if(null!==(e=i.alternate)&&null===Do(e)){t.child=i;break}e=i.sibling,i.sibling=n,n=i,i=e}Ha(t,!0,n,null,o,t.lastEffect);break;case"together":Ha(t,!1,null,null,void 0,t.lastEffect);break;default:t.memoizedState=null}return t.child}function qa(e,t,n){null!==e&&(t.dependencies=e.dependencies);var r=t.expirationTime;if(0!==r&&au(r),t.childExpirationTime<n)return null;if(null!==e&&t.child!==e.child)throw Error(a(153));if(null!==t.child){for(n=Ou(e=t.child,e.pendingProps),t.child=n,n.return=t;null!==e.sibling;)e=e.sibling,(n=n.sibling=Ou(e,e.pendingProps)).return=t;n.sibling=null}return t.child}function Ya(e,t){switch(e.tailMode){case"hidden":t=e.tail;for(var n=null;null!==t;)null!==t.alternate&&(n=t),t=t.sibling;null===n?e.tail=null:n.sibling=null;break;case"collapsed":n=e.tail;for(var r=null;null!==n;)null!==n.alternate&&(r=n),n=n.sibling;null===r?t||null===e.tail?e.tail=null:e.tail.sibling=null:r.sibling=null}}function Xa(e,t,n){var r=t.pendingProps;switch(t.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return null;case 1:return hi(t.type)&&vi(),null;case 3:return jo(),ui(di),ui(si),(n=t.stateNode).pendingContext&&(n.context=n.pendingContext,n.pendingContext=null),null!==e&&null!==e.child||!Ca(t)||(t.effectTag|=4),null;case 5:zo(t),n=Ao(Io.current);var o=t.type;if(null!==e&&null!=t.stateNode)Ba(e,t,o,r,n),e.ref!==t.ref&&(t.effectTag|=128);else{if(!r){if(null===t.stateNode)throw Error(a(166));return null}if(e=Ao(Po.current),Ca(t)){r=t.stateNode,o=t.type;var l=t.memoizedProps;switch(r[Tn]=t,r[Sn]=l,o){case"iframe":case"object":case"embed":Kt("load",r);break;case"video":case"audio":for(e=0;e<Xe.length;e++)Kt(Xe[e],r);break;case"source":Kt("error",r);break;case"img":case"image":case"link":Kt("error",r),Kt("load",r);break;case"form":Kt("reset",r),Kt("submit",r);break;case"details":Kt("toggle",r);break;case"input":ke(r,l),Kt("invalid",r),un(n,"onChange");break;case"select":r._wrapperState={wasMultiple:!!l.multiple},Kt("invalid",r),un(n,"onChange");break;case"textarea":Ae(r,l),Kt("invalid",r),un(n,"onChange")}for(var u in on(o,l),e=null,l)if(l.hasOwnProperty(u)){var c=l[u];"children"===u?"string"==typeof c?r.textContent!==c&&(e=["children",c]):"number"==typeof c&&r.textContent!==""+c&&(e=["children",""+c]):T.hasOwnProperty(u)&&null!=c&&un(n,u)}switch(o){case"input":we(r),Oe(r,l,!0);break;case"textarea":we(r),je(r);break;case"select":case"option":break;default:"function"==typeof l.onClick&&(r.onclick=cn)}n=e,t.updateQueue=n,null!==n&&(t.effectTag|=4)}else{switch(u=9===n.nodeType?n:n.ownerDocument,e===ln&&(e=Me(o)),e===ln?"script"===o?((e=u.createElement("div")).innerHTML="<script><\/script>",e=e.removeChild(e.firstChild)):"string"==typeof r.is?e=u.createElement(o,{is:r.is}):(e=u.createElement(o),"select"===o&&(u=e,r.multiple?u.multiple=!0:r.size&&(u.size=r.size))):e=u.createElementNS(e,o),e[Tn]=t,e[Sn]=r,Ua(e,t),t.stateNode=e,u=an(o,r),o){case"iframe":case"object":case"embed":Kt("load",e),c=r;break;case"video":case"audio":for(c=0;c<Xe.length;c++)Kt(Xe[c],e);c=r;break;case"source":Kt("error",e),c=r;break;case"img":case"image":case"link":Kt("error",e),Kt("load",e),c=r;break;case"form":Kt("reset",e),Kt("submit",e),c=r;break;case"details":Kt("toggle",e),c=r;break;case"input":ke(e,r),c=Ee(e,r),Kt("invalid",e),un(n,"onChange");break;case"option":c=Pe(e,r);break;case"select":e._wrapperState={wasMultiple:!!r.multiple},c=i({},r,{value:void 0}),Kt("invalid",e),un(n,"onChange");break;case"textarea":Ae(e,r),c=Ie(e,r),Kt("invalid",e),un(n,"onChange");break;default:c=r}on(o,c);var f=c;for(l in f)if(f.hasOwnProperty(l)){var s=f[l];"style"===l?nn(e,s):"dangerouslySetInnerHTML"===l?null!=(s=s?s.__html:void 0)&&Le(e,s):"children"===l?"string"==typeof s?("textarea"!==o||""!==s)&&Ue(e,s):"number"==typeof s&&Ue(e,""+s):"suppressContentEditableWarning"!==l&&"suppressHydrationWarning"!==l&&"autoFocus"!==l&&(T.hasOwnProperty(l)?null!=s&&un(n,l):null!=s&&G(e,l,s,u))}switch(o){case"input":we(e),Oe(e,r,!1);break;case"textarea":we(e),je(e);break;case"option":null!=r.value&&e.setAttribute("value",""+ge(r.value));break;case"select":e.multiple=!!r.multiple,null!=(n=r.value)?_e(e,!!r.multiple,n,!1):null!=r.defaultValue&&_e(e,!!r.multiple,r.defaultValue,!0);break;default:"function"==typeof c.onClick&&(e.onclick=cn)}yn(o,r)&&(t.effectTag|=4)}null!==t.ref&&(t.effectTag|=128)}return null;case 6:if(e&&null!=t.stateNode)Va(0,t,e.memoizedProps,r);else{if("string"!=typeof r&&null===t.stateNode)throw Error(a(166));n=Ao(Io.current),Ao(Po.current),Ca(t)?(n=t.stateNode,r=t.memoizedProps,n[Tn]=t,n.nodeValue!==r&&(t.effectTag|=4)):((n=(9===n.nodeType?n:n.ownerDocument).createTextNode(r))[Tn]=t,t.stateNode=n)}return null;case 13:return ui(Mo),r=t.memoizedState,0!=(64&t.effectTag)?(t.expirationTime=n,t):(n=null!==r,r=!1,null===e?void 0!==t.memoizedProps.fallback&&Ca(t):(r=null!==(o=e.memoizedState),n||null===o||null!==(o=e.child.sibling)&&(null!==(l=t.firstEffect)?(t.firstEffect=o,o.nextEffect=l):(t.firstEffect=t.lastEffect=o,o.nextEffect=null),o.effectTag=8)),n&&!r&&0!=(2&t.mode)&&(null===e&&!0!==t.memoizedProps.unstable_avoidThisFallback||0!=(1&Mo.current)?Cl===wl&&(Cl=xl):(Cl!==wl&&Cl!==xl||(Cl=El),0!==Nl&&null!==Tl&&(ju(Tl,Ol),Ru(Tl,Nl)))),(n||r)&&(t.effectTag|=4),null);case 4:return jo(),null;case 10:return eo(t),null;case 17:return hi(t.type)&&vi(),null;case 19:if(ui(Mo),null===(r=t.memoizedState))return null;if(o=0!=(64&t.effectTag),null===(l=r.rendering)){if(o)Ya(r,!1);else if(Cl!==wl||null!==e&&0!=(64&e.effectTag))for(l=t.child;null!==l;){if(null!==(e=Do(l))){for(t.effectTag|=64,Ya(r,!1),null!==(o=e.updateQueue)&&(t.updateQueue=o,t.effectTag|=4),null===r.lastEffect&&(t.firstEffect=null),t.lastEffect=r.lastEffect,r=t.child;null!==r;)l=n,(o=r).effectTag&=2,o.nextEffect=null,o.firstEffect=null,o.lastEffect=null,null===(e=o.alternate)?(o.childExpirationTime=0,o.expirationTime=l,o.child=null,o.memoizedProps=null,o.memoizedState=null,o.updateQueue=null,o.dependencies=null):(o.childExpirationTime=e.childExpirationTime,o.expirationTime=e.expirationTime,o.child=e.child,o.memoizedProps=e.memoizedProps,o.memoizedState=e.memoizedState,o.updateQueue=e.updateQueue,l=e.dependencies,o.dependencies=null===l?null:{expirationTime:l.expirationTime,firstContext:l.firstContext,responders:l.responders}),r=r.sibling;return ci(Mo,1&Mo.current|2),t.child}l=l.sibling}}else{if(!o)if(null!==(e=Do(l))){if(t.effectTag|=64,o=!0,null!==(n=e.updateQueue)&&(t.updateQueue=n,t.effectTag|=4),Ya(r,!0),null===r.tail&&"hidden"===r.tailMode&&!l.alternate)return null!==(t=t.lastEffect=r.lastEffect)&&(t.nextEffect=null),null}else 2*Li()-r.renderingStartTime>r.tailExpiration&&1<n&&(t.effectTag|=64,o=!0,Ya(r,!1),t.expirationTime=t.childExpirationTime=n-1);r.isBackwards?(l.sibling=t.child,t.child=l):(null!==(n=r.last)?n.sibling=l:t.child=l,r.last=l)}return null!==r.tail?(0===r.tailExpiration&&(r.tailExpiration=Li()+500),n=r.tail,r.rendering=n,r.tail=n.sibling,r.lastEffect=t.lastEffect,r.renderingStartTime=Li(),n.sibling=null,t=Mo.current,ci(Mo,o?1&t|2:1&t),n):null}throw Error(a(156,t.tag))}function Ga(e){switch(e.tag){case 1:hi(e.type)&&vi();var t=e.effectTag;return 4096&t?(e.effectTag=-4097&t|64,e):null;case 3:if(jo(),ui(di),ui(si),0!=(64&(t=e.effectTag)))throw Error(a(285));return e.effectTag=-4097&t|64,e;case 5:return zo(e),null;case 13:return ui(Mo),4096&(t=e.effectTag)?(e.effectTag=-4097&t|64,e):null;case 19:return ui(Mo),null;case 4:return jo(),null;case 10:return eo(e),null;default:return null}}function Ja(e,t){return{value:e,source:t,stack:ye(t)}}Ua=function(e,t){for(var n=t.child;null!==n;){if(5===n.tag||6===n.tag)e.appendChild(n.stateNode);else if(4!==n.tag&&null!==n.child){n.child.return=n,n=n.child;continue}if(n===t)break;for(;null===n.sibling;){if(null===n.return||n.return===t)return;n=n.return}n.sibling.return=n.return,n=n.sibling}},Ba=function(e,t,n,r,o){var a=e.memoizedProps;if(a!==r){var l,u,c=t.stateNode;switch(Ao(Po.current),e=null,n){case"input":a=Ee(c,a),r=Ee(c,r),e=[];break;case"option":a=Pe(c,a),r=Pe(c,r),e=[];break;case"select":a=i({},a,{value:void 0}),r=i({},r,{value:void 0}),e=[];break;case"textarea":a=Ie(c,a),r=Ie(c,r),e=[];break;default:"function"!=typeof a.onClick&&"function"==typeof r.onClick&&(c.onclick=cn)}for(l in on(n,r),n=null,a)if(!r.hasOwnProperty(l)&&a.hasOwnProperty(l)&&null!=a[l])if("style"===l)for(u in c=a[l])c.hasOwnProperty(u)&&(n||(n={}),n[u]="");else"dangerouslySetInnerHTML"!==l&&"children"!==l&&"suppressContentEditableWarning"!==l&&"suppressHydrationWarning"!==l&&"autoFocus"!==l&&(T.hasOwnProperty(l)?e||(e=[]):(e=e||[]).push(l,null));for(l in r){var f=r[l];if(c=null!=a?a[l]:void 0,r.hasOwnProperty(l)&&f!==c&&(null!=f||null!=c))if("style"===l)if(c){for(u in c)!c.hasOwnProperty(u)||f&&f.hasOwnProperty(u)||(n||(n={}),n[u]="");for(u in f)f.hasOwnProperty(u)&&c[u]!==f[u]&&(n||(n={}),n[u]=f[u])}else n||(e||(e=[]),e.push(l,n)),n=f;else"dangerouslySetInnerHTML"===l?(f=f?f.__html:void 0,c=c?c.__html:void 0,null!=f&&c!==f&&(e=e||[]).push(l,f)):"children"===l?c===f||"string"!=typeof f&&"number"!=typeof f||(e=e||[]).push(l,""+f):"suppressContentEditableWarning"!==l&&"suppressHydrationWarning"!==l&&(T.hasOwnProperty(l)?(null!=f&&un(o,l),e||c===f||(e=[])):(e=e||[]).push(l,f))}n&&(e=e||[]).push("style",n),o=e,(t.updateQueue=o)&&(t.effectTag|=4)}},Va=function(e,t,n,r){n!==r&&(t.effectTag|=4)};var Za="function"==typeof WeakSet?WeakSet:Set;function el(e,t){var n=t.source,r=t.stack;null===r&&null!==n&&(r=ye(n)),null!==n&&ve(n.type),t=t.value,null!==e&&1===e.tag&&ve(e.type);try{console.error(t)}catch(e){setTimeout((function(){throw e}))}}function tl(e){var t=e.ref;if(null!==t)if("function"==typeof t)try{t(null)}catch(t){gu(e,t)}else t.current=null}function nl(e,t){switch(t.tag){case 0:case 11:case 15:case 22:return;case 1:if(256&t.effectTag&&null!==e){var n=e.memoizedProps,r=e.memoizedState;t=(e=t.stateNode).getSnapshotBeforeUpdate(t.elementType===t.type?n:qi(t.type,n),r),e.__reactInternalSnapshotBeforeUpdate=t}return;case 3:case 5:case 6:case 4:case 17:return}throw Error(a(163))}function rl(e,t){if(null!==(t=null!==(t=t.updateQueue)?t.lastEffect:null)){var n=t=t.next;do{if((n.tag&e)===e){var r=n.destroy;n.destroy=void 0,void 0!==r&&r()}n=n.next}while(n!==t)}}function il(e,t){if(null!==(t=null!==(t=t.updateQueue)?t.lastEffect:null)){var n=t=t.next;do{if((n.tag&e)===e){var r=n.create;n.destroy=r()}n=n.next}while(n!==t)}}function ol(e,t,n){switch(n.tag){case 0:case 11:case 15:case 22:return void il(3,n);case 1:if(e=n.stateNode,4&n.effectTag)if(null===t)e.componentDidMount();else{var r=n.elementType===n.type?t.memoizedProps:qi(n.type,t.memoizedProps);e.componentDidUpdate(r,t.memoizedState,e.__reactInternalSnapshotBeforeUpdate)}return void(null!==(t=n.updateQueue)&&so(n,t,e));case 3:if(null!==(t=n.updateQueue)){if(e=null,null!==n.child)switch(n.child.tag){case 5:e=n.child.stateNode;break;case 1:e=n.child.stateNode}so(n,t,e)}return;case 5:return e=n.stateNode,void(null===t&&4&n.effectTag&&yn(n.type,n.memoizedProps)&&e.focus());case 6:case 4:case 12:return;case 13:return void(null===n.memoizedState&&(n=n.alternate,null!==n&&(n=n.memoizedState,null!==n&&(n=n.dehydrated,null!==n&&Mt(n)))));case 19:case 17:case 20:case 21:return}throw Error(a(163))}function al(e,t,n){switch("function"==typeof Eu&&Eu(t),t.tag){case 0:case 11:case 14:case 15:case 22:if(null!==(e=t.updateQueue)&&null!==(e=e.lastEffect)){var r=e.next;Vi(97<n?97:n,(function(){var e=r;do{var n=e.destroy;if(void 0!==n){var i=t;try{n()}catch(e){gu(i,e)}}e=e.next}while(e!==r)}))}break;case 1:tl(t),"function"==typeof(n=t.stateNode).componentWillUnmount&&function(e,t){try{t.props=e.memoizedProps,t.state=e.memoizedState,t.componentWillUnmount()}catch(t){gu(e,t)}}(t,n);break;case 5:tl(t);break;case 4:fl(e,t,n)}}function ll(e){var t=e.alternate;e.return=null,e.child=null,e.memoizedState=null,e.updateQueue=null,e.dependencies=null,e.alternate=null,e.firstEffect=null,e.lastEffect=null,e.pendingProps=null,e.memoizedProps=null,e.stateNode=null,null!==t&&ll(t)}function ul(e){return 5===e.tag||3===e.tag||4===e.tag}function cl(e){e:{for(var t=e.return;null!==t;){if(ul(t)){var n=t;break e}t=t.return}throw Error(a(160))}switch(t=n.stateNode,n.tag){case 5:var r=!1;break;case 3:case 4:t=t.containerInfo,r=!0;break;default:throw Error(a(161))}16&n.effectTag&&(Ue(t,""),n.effectTag&=-17);e:t:for(n=e;;){for(;null===n.sibling;){if(null===n.return||ul(n.return)){n=null;break e}n=n.return}for(n.sibling.return=n.return,n=n.sibling;5!==n.tag&&6!==n.tag&&18!==n.tag;){if(2&n.effectTag)continue t;if(null===n.child||4===n.tag)continue t;n.child.return=n,n=n.child}if(!(2&n.effectTag)){n=n.stateNode;break e}}r?function e(t,n,r){var i=t.tag,o=5===i||6===i;if(o)t=o?t.stateNode:t.stateNode.instance,n?8===r.nodeType?r.parentNode.insertBefore(t,n):r.insertBefore(t,n):(8===r.nodeType?(n=r.parentNode).insertBefore(t,r):(n=r).appendChild(t),null!==(r=r._reactRootContainer)&&void 0!==r||null!==n.onclick||(n.onclick=cn));else if(4!==i&&null!==(t=t.child))for(e(t,n,r),t=t.sibling;null!==t;)e(t,n,r),t=t.sibling}(e,n,t):function e(t,n,r){var i=t.tag,o=5===i||6===i;if(o)t=o?t.stateNode:t.stateNode.instance,n?r.insertBefore(t,n):r.appendChild(t);else if(4!==i&&null!==(t=t.child))for(e(t,n,r),t=t.sibling;null!==t;)e(t,n,r),t=t.sibling}(e,n,t)}function fl(e,t,n){for(var r,i,o=t,l=!1;;){if(!l){l=o.return;e:for(;;){if(null===l)throw Error(a(160));switch(r=l.stateNode,l.tag){case 5:i=!1;break e;case 3:case 4:r=r.containerInfo,i=!0;break e}l=l.return}l=!0}if(5===o.tag||6===o.tag){e:for(var u=e,c=o,f=n,s=c;;)if(al(u,s,f),null!==s.child&&4!==s.tag)s.child.return=s,s=s.child;else{if(s===c)break e;for(;null===s.sibling;){if(null===s.return||s.return===c)break e;s=s.return}s.sibling.return=s.return,s=s.sibling}i?(u=r,c=o.stateNode,8===u.nodeType?u.parentNode.removeChild(c):u.removeChild(c)):r.removeChild(o.stateNode)}else if(4===o.tag){if(null!==o.child){r=o.stateNode.containerInfo,i=!0,o.child.return=o,o=o.child;continue}}else if(al(e,o,n),null!==o.child){o.child.return=o,o=o.child;continue}if(o===t)break;for(;null===o.sibling;){if(null===o.return||o.return===t)return;4===(o=o.return).tag&&(l=!1)}o.sibling.return=o.return,o=o.sibling}}function sl(e,t){switch(t.tag){case 0:case 11:case 14:case 15:case 22:return void rl(3,t);case 1:return;case 5:var n=t.stateNode;if(null!=n){var r=t.memoizedProps,i=null!==e?e.memoizedProps:r;e=t.type;var o=t.updateQueue;if(t.updateQueue=null,null!==o){for(n[Sn]=r,"input"===e&&"radio"===r.type&&null!=r.name&&Te(n,r),an(e,i),t=an(e,r),i=0;i<o.length;i+=2){var l=o[i],u=o[i+1];"style"===l?nn(n,u):"dangerouslySetInnerHTML"===l?Le(n,u):"children"===l?Ue(n,u):G(n,l,u,t)}switch(e){case"input":Se(n,r);break;case"textarea":Ne(n,r);break;case"select":t=n._wrapperState.wasMultiple,n._wrapperState.wasMultiple=!!r.multiple,null!=(e=r.value)?_e(n,!!r.multiple,e,!1):t!==!!r.multiple&&(null!=r.defaultValue?_e(n,!!r.multiple,r.defaultValue,!0):_e(n,!!r.multiple,r.multiple?[]:"",!1))}}}return;case 6:if(null===t.stateNode)throw Error(a(162));return void(t.stateNode.nodeValue=t.memoizedProps);case 3:return void((t=t.stateNode).hydrate&&(t.hydrate=!1,Mt(t.containerInfo)));case 12:return;case 13:if(n=t,null===t.memoizedState?r=!1:(r=!0,n=t.child,Rl=Li()),null!==n)e:for(e=n;;){if(5===e.tag)o=e.stateNode,r?"function"==typeof(o=o.style).setProperty?o.setProperty("display","none","important"):o.display="none":(o=e.stateNode,i=null!=(i=e.memoizedProps.style)&&i.hasOwnProperty("display")?i.display:null,o.style.display=tn("display",i));else if(6===e.tag)e.stateNode.nodeValue=r?"":e.memoizedProps;else{if(13===e.tag&&null!==e.memoizedState&&null===e.memoizedState.dehydrated){(o=e.child.sibling).return=e,e=o;continue}if(null!==e.child){e.child.return=e,e=e.child;continue}}if(e===n)break;for(;null===e.sibling;){if(null===e.return||e.return===n)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}return void dl(t);case 19:return void dl(t);case 17:return}throw Error(a(163))}function dl(e){var t=e.updateQueue;if(null!==t){e.updateQueue=null;var n=e.stateNode;null===n&&(n=e.stateNode=new Za),t.forEach((function(t){var r=wu.bind(null,e,t);n.has(t)||(n.add(t),t.then(r,r))}))}}var pl="function"==typeof WeakMap?WeakMap:Map;function ml(e,t,n){(n=lo(n,null)).tag=3,n.payload={element:null};var r=t.value;return n.callback=function(){Ml||(Ml=!0,Dl=r),el(e,t)},n}function hl(e,t,n){(n=lo(n,null)).tag=3;var r=e.type.getDerivedStateFromError;if("function"==typeof r){var i=t.value;n.payload=function(){return el(e,t),r(i)}}var o=e.stateNode;return null!==o&&"function"==typeof o.componentDidCatch&&(n.callback=function(){"function"!=typeof r&&(null===Fl?Fl=new Set([this]):Fl.add(this),el(e,t));var n=t.stack;this.componentDidCatch(t.value,{componentStack:null!==n?n:""})}),n}var vl,yl=Math.ceil,gl=X.ReactCurrentDispatcher,bl=X.ReactCurrentOwner,wl=0,xl=3,El=4,kl=0,Tl=null,Sl=null,Ol=0,Cl=wl,Pl=null,_l=1073741823,Il=1073741823,Al=null,Nl=0,jl=!1,Rl=0,zl=null,Ml=!1,Dl=null,Fl=null,Ll=!1,Ul=null,Bl=90,Vl=null,$l=0,Wl=null,Ql=0;function Hl(){return 0!=(48&kl)?1073741821-(Li()/10|0):0!==Ql?Ql:Ql=1073741821-(Li()/10|0)}function Kl(e,t,n){if(0==(2&(t=t.mode)))return 1073741823;var r=Ui();if(0==(4&t))return 99===r?1073741823:1073741822;if(0!=(16&kl))return Ol;if(null!==n)e=Ki(e,0|n.timeoutMs||5e3,250);else switch(r){case 99:e=1073741823;break;case 98:e=Ki(e,150,100);break;case 97:case 96:e=Ki(e,5e3,250);break;case 95:e=2;break;default:throw Error(a(326))}return null!==Tl&&e===Ol&&--e,e}function ql(e,t){if(50<$l)throw $l=0,Wl=null,Error(a(185));if(null!==(e=Yl(e,t))){var n=Ui();1073741823===t?0!=(8&kl)&&0==(48&kl)?Zl(e):(Gl(e),0===kl&&Qi()):Gl(e),0==(4&kl)||98!==n&&99!==n||(null===Vl?Vl=new Map([[e,t]]):(void 0===(n=Vl.get(e))||n>t)&&Vl.set(e,t))}}function Yl(e,t){e.expirationTime<t&&(e.expirationTime=t);var n=e.alternate;null!==n&&n.expirationTime<t&&(n.expirationTime=t);var r=e.return,i=null;if(null===r&&3===e.tag)i=e.stateNode;else for(;null!==r;){if(n=r.alternate,r.childExpirationTime<t&&(r.childExpirationTime=t),null!==n&&n.childExpirationTime<t&&(n.childExpirationTime=t),null===r.return&&3===r.tag){i=r.stateNode;break}r=r.return}return null!==i&&(Tl===i&&(au(t),Cl===El&&ju(i,Ol)),Ru(i,t)),i}function Xl(e){var t=e.lastExpiredTime;if(0!==t)return t;if(!Nu(e,t=e.firstPendingTime))return t;var n=e.lastPingedTime;return 2>=(e=n>(e=e.nextKnownPendingLevel)?n:e)&&t!==e?0:e}function Gl(e){if(0!==e.lastExpiredTime)e.callbackExpirationTime=1073741823,e.callbackPriority=99,e.callbackNode=Wi(Zl.bind(null,e));else{var t=Xl(e),n=e.callbackNode;if(0===t)null!==n&&(e.callbackNode=null,e.callbackExpirationTime=0,e.callbackPriority=90);else{var r=Hl();if(1073741823===t?r=99:1===t||2===t?r=95:r=0>=(r=10*(1073741821-t)-10*(1073741821-r))?99:250>=r?98:5250>=r?97:95,null!==n){var i=e.callbackPriority;if(e.callbackExpirationTime===t&&i>=r)return;n!==Ni&&ki(n)}e.callbackExpirationTime=t,e.callbackPriority=r,t=1073741823===t?Wi(Zl.bind(null,e)):$i(r,Jl.bind(null,e),{timeout:10*(1073741821-t)-Li()}),e.callbackNode=t}}}function Jl(e,t){if(Ql=0,t)return zu(e,t=Hl()),Gl(e),null;var n=Xl(e);if(0!==n){if(t=e.callbackNode,0!=(48&kl))throw Error(a(327));if(hu(),e===Tl&&n===Ol||nu(e,n),null!==Sl){var r=kl;kl|=16;for(var i=iu();;)try{uu();break}catch(t){ru(e,t)}if(Zi(),kl=r,gl.current=i,1===Cl)throw t=Pl,nu(e,n),ju(e,n),Gl(e),t;if(null===Sl)switch(i=e.finishedWork=e.current.alternate,e.finishedExpirationTime=n,r=Cl,Tl=null,r){case wl:case 1:throw Error(a(345));case 2:zu(e,2<n?2:n);break;case xl:if(ju(e,n),n===(r=e.lastSuspendedTime)&&(e.nextKnownPendingLevel=su(i)),1073741823===_l&&10<(i=Rl+500-Li())){if(jl){var o=e.lastPingedTime;if(0===o||o>=n){e.lastPingedTime=n,nu(e,n);break}}if(0!==(o=Xl(e))&&o!==n)break;if(0!==r&&r!==n){e.lastPingedTime=r;break}e.timeoutHandle=bn(du.bind(null,e),i);break}du(e);break;case El:if(ju(e,n),n===(r=e.lastSuspendedTime)&&(e.nextKnownPendingLevel=su(i)),jl&&(0===(i=e.lastPingedTime)||i>=n)){e.lastPingedTime=n,nu(e,n);break}if(0!==(i=Xl(e))&&i!==n)break;if(0!==r&&r!==n){e.lastPingedTime=r;break}if(1073741823!==Il?r=10*(1073741821-Il)-Li():1073741823===_l?r=0:(r=10*(1073741821-_l)-5e3,0>(r=(i=Li())-r)&&(r=0),(n=10*(1073741821-n)-i)<(r=(120>r?120:480>r?480:1080>r?1080:1920>r?1920:3e3>r?3e3:4320>r?4320:1960*yl(r/1960))-r)&&(r=n)),10<r){e.timeoutHandle=bn(du.bind(null,e),r);break}du(e);break;case 5:if(1073741823!==_l&&null!==Al){o=_l;var l=Al;if(0>=(r=0|l.busyMinDurationMs)?r=0:(i=0|l.busyDelayMs,r=(o=Li()-(10*(1073741821-o)-(0|l.timeoutMs||5e3)))<=i?0:i+r-o),10<r){ju(e,n),e.timeoutHandle=bn(du.bind(null,e),r);break}}du(e);break;default:throw Error(a(329))}if(Gl(e),e.callbackNode===t)return Jl.bind(null,e)}}return null}function Zl(e){var t=e.lastExpiredTime;if(t=0!==t?t:1073741823,0!=(48&kl))throw Error(a(327));if(hu(),e===Tl&&t===Ol||nu(e,t),null!==Sl){var n=kl;kl|=16;for(var r=iu();;)try{lu();break}catch(t){ru(e,t)}if(Zi(),kl=n,gl.current=r,1===Cl)throw n=Pl,nu(e,t),ju(e,t),Gl(e),n;if(null!==Sl)throw Error(a(261));e.finishedWork=e.current.alternate,e.finishedExpirationTime=t,Tl=null,du(e),Gl(e)}return null}function eu(e,t){var n=kl;kl|=1;try{return e(t)}finally{0===(kl=n)&&Qi()}}function tu(e,t){var n=kl;kl&=-2,kl|=8;try{return e(t)}finally{0===(kl=n)&&Qi()}}function nu(e,t){e.finishedWork=null,e.finishedExpirationTime=0;var n=e.timeoutHandle;if(-1!==n&&(e.timeoutHandle=-1,wn(n)),null!==Sl)for(n=Sl.return;null!==n;){var r=n;switch(r.tag){case 1:null!=(r=r.type.childContextTypes)&&vi();break;case 3:jo(),ui(di),ui(si);break;case 5:zo(r);break;case 4:jo();break;case 13:case 19:ui(Mo);break;case 10:eo(r)}n=n.return}Tl=e,Sl=Ou(e.current,null),Ol=t,Cl=wl,Pl=null,Il=_l=1073741823,Al=null,Nl=0,jl=!1}function ru(e,t){for(;;){try{if(Zi(),Lo.current=va,Qo)for(var n=Vo.memoizedState;null!==n;){var r=n.queue;null!==r&&(r.pending=null),n=n.next}if(Bo=0,Wo=$o=Vo=null,Qo=!1,null===Sl||null===Sl.return)return Cl=1,Pl=t,Sl=null;e:{var i=e,o=Sl.return,a=Sl,l=t;if(t=Ol,a.effectTag|=2048,a.firstEffect=a.lastEffect=null,null!==l&&"object"==typeof l&&"function"==typeof l.then){var u=l;if(0==(2&a.mode)){var c=a.alternate;c?(a.updateQueue=c.updateQueue,a.memoizedState=c.memoizedState,a.expirationTime=c.expirationTime):(a.updateQueue=null,a.memoizedState=null)}var f=0!=(1&Mo.current),s=o;do{var d;if(d=13===s.tag){var p=s.memoizedState;if(null!==p)d=null!==p.dehydrated;else{var m=s.memoizedProps;d=void 0!==m.fallback&&(!0!==m.unstable_avoidThisFallback||!f)}}if(d){var h=s.updateQueue;if(null===h){var v=new Set;v.add(u),s.updateQueue=v}else h.add(u);if(0==(2&s.mode)){if(s.effectTag|=64,a.effectTag&=-2981,1===a.tag)if(null===a.alternate)a.tag=17;else{var y=lo(1073741823,null);y.tag=2,uo(a,y)}a.expirationTime=1073741823;break e}l=void 0,a=t;var g=i.pingCache;if(null===g?(g=i.pingCache=new pl,l=new Set,g.set(u,l)):void 0===(l=g.get(u))&&(l=new Set,g.set(u,l)),!l.has(a)){l.add(a);var b=bu.bind(null,i,u,a);u.then(b,b)}s.effectTag|=4096,s.expirationTime=t;break e}s=s.return}while(null!==s);l=Error((ve(a.type)||"A React component")+" suspended while rendering, but no fallback UI was specified.\n\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display."+ye(a))}5!==Cl&&(Cl=2),l=Ja(l,a),s=o;do{switch(s.tag){case 3:u=l,s.effectTag|=4096,s.expirationTime=t,co(s,ml(s,u,t));break e;case 1:u=l;var w=s.type,x=s.stateNode;if(0==(64&s.effectTag)&&("function"==typeof w.getDerivedStateFromError||null!==x&&"function"==typeof x.componentDidCatch&&(null===Fl||!Fl.has(x)))){s.effectTag|=4096,s.expirationTime=t,co(s,hl(s,u,t));break e}}s=s.return}while(null!==s)}Sl=fu(Sl)}catch(e){t=e;continue}break}}function iu(){var e=gl.current;return gl.current=va,null===e?va:e}function ou(e,t){e<_l&&2<e&&(_l=e),null!==t&&e<Il&&2<e&&(Il=e,Al=t)}function au(e){e>Nl&&(Nl=e)}function lu(){for(;null!==Sl;)Sl=cu(Sl)}function uu(){for(;null!==Sl&&!ji();)Sl=cu(Sl)}function cu(e){var t=vl(e.alternate,e,Ol);return e.memoizedProps=e.pendingProps,null===t&&(t=fu(e)),bl.current=null,t}function fu(e){Sl=e;do{var t=Sl.alternate;if(e=Sl.return,0==(2048&Sl.effectTag)){if(t=Xa(t,Sl,Ol),1===Ol||1!==Sl.childExpirationTime){for(var n=0,r=Sl.child;null!==r;){var i=r.expirationTime,o=r.childExpirationTime;i>n&&(n=i),o>n&&(n=o),r=r.sibling}Sl.childExpirationTime=n}if(null!==t)return t;null!==e&&0==(2048&e.effectTag)&&(null===e.firstEffect&&(e.firstEffect=Sl.firstEffect),null!==Sl.lastEffect&&(null!==e.lastEffect&&(e.lastEffect.nextEffect=Sl.firstEffect),e.lastEffect=Sl.lastEffect),1<Sl.effectTag&&(null!==e.lastEffect?e.lastEffect.nextEffect=Sl:e.firstEffect=Sl,e.lastEffect=Sl))}else{if(null!==(t=Ga(Sl)))return t.effectTag&=2047,t;null!==e&&(e.firstEffect=e.lastEffect=null,e.effectTag|=2048)}if(null!==(t=Sl.sibling))return t;Sl=e}while(null!==Sl);return Cl===wl&&(Cl=5),null}function su(e){var t=e.expirationTime;return t>(e=e.childExpirationTime)?t:e}function du(e){var t=Ui();return Vi(99,pu.bind(null,e,t)),null}function pu(e,t){do{hu()}while(null!==Ul);if(0!=(48&kl))throw Error(a(327));var n=e.finishedWork,r=e.finishedExpirationTime;if(null===n)return null;if(e.finishedWork=null,e.finishedExpirationTime=0,n===e.current)throw Error(a(177));e.callbackNode=null,e.callbackExpirationTime=0,e.callbackPriority=90,e.nextKnownPendingLevel=0;var i=su(n);if(e.firstPendingTime=i,r<=e.lastSuspendedTime?e.firstSuspendedTime=e.lastSuspendedTime=e.nextKnownPendingLevel=0:r<=e.firstSuspendedTime&&(e.firstSuspendedTime=r-1),r<=e.lastPingedTime&&(e.lastPingedTime=0),r<=e.lastExpiredTime&&(e.lastExpiredTime=0),e===Tl&&(Sl=Tl=null,Ol=0),1<n.effectTag?null!==n.lastEffect?(n.lastEffect.nextEffect=n,i=n.firstEffect):i=n:i=n.firstEffect,null!==i){var o=kl;kl|=32,bl.current=null,hn=Ht;var l=pn();if(mn(l)){if("selectionStart"in l)var u={start:l.selectionStart,end:l.selectionEnd};else e:{var c=(u=(u=l.ownerDocument)&&u.defaultView||window).getSelection&&u.getSelection();if(c&&0!==c.rangeCount){u=c.anchorNode;var f=c.anchorOffset,s=c.focusNode;c=c.focusOffset;try{u.nodeType,s.nodeType}catch(e){u=null;break e}var d=0,p=-1,m=-1,h=0,v=0,y=l,g=null;t:for(;;){for(var b;y!==u||0!==f&&3!==y.nodeType||(p=d+f),y!==s||0!==c&&3!==y.nodeType||(m=d+c),3===y.nodeType&&(d+=y.nodeValue.length),null!==(b=y.firstChild);)g=y,y=b;for(;;){if(y===l)break t;if(g===u&&++h===f&&(p=d),g===s&&++v===c&&(m=d),null!==(b=y.nextSibling))break;g=(y=g).parentNode}y=b}u=-1===p||-1===m?null:{start:p,end:m}}else u=null}u=u||{start:0,end:0}}else u=null;vn={activeElementDetached:null,focusedElem:l,selectionRange:u},Ht=!1,zl=i;do{try{mu()}catch(e){if(null===zl)throw Error(a(330));gu(zl,e),zl=zl.nextEffect}}while(null!==zl);zl=i;do{try{for(l=e,u=t;null!==zl;){var w=zl.effectTag;if(16&w&&Ue(zl.stateNode,""),128&w){var x=zl.alternate;if(null!==x){var E=x.ref;null!==E&&("function"==typeof E?E(null):E.current=null)}}switch(1038&w){case 2:cl(zl),zl.effectTag&=-3;break;case 6:cl(zl),zl.effectTag&=-3,sl(zl.alternate,zl);break;case 1024:zl.effectTag&=-1025;break;case 1028:zl.effectTag&=-1025,sl(zl.alternate,zl);break;case 4:sl(zl.alternate,zl);break;case 8:fl(l,f=zl,u),ll(f)}zl=zl.nextEffect}}catch(e){if(null===zl)throw Error(a(330));gu(zl,e),zl=zl.nextEffect}}while(null!==zl);if(E=vn,x=pn(),w=E.focusedElem,u=E.selectionRange,x!==w&&w&&w.ownerDocument&&function e(t,n){return!(!t||!n)&&(t===n||(!t||3!==t.nodeType)&&(n&&3===n.nodeType?e(t,n.parentNode):"contains"in t?t.contains(n):!!t.compareDocumentPosition&&!!(16&t.compareDocumentPosition(n))))}(w.ownerDocument.documentElement,w)){null!==u&&mn(w)&&(x=u.start,void 0===(E=u.end)&&(E=x),"selectionStart"in w?(w.selectionStart=x,w.selectionEnd=Math.min(E,w.value.length)):(E=(x=w.ownerDocument||document)&&x.defaultView||window).getSelection&&(E=E.getSelection(),f=w.textContent.length,l=Math.min(u.start,f),u=void 0===u.end?l:Math.min(u.end,f),!E.extend&&l>u&&(f=u,u=l,l=f),f=dn(w,l),s=dn(w,u),f&&s&&(1!==E.rangeCount||E.anchorNode!==f.node||E.anchorOffset!==f.offset||E.focusNode!==s.node||E.focusOffset!==s.offset)&&((x=x.createRange()).setStart(f.node,f.offset),E.removeAllRanges(),l>u?(E.addRange(x),E.extend(s.node,s.offset)):(x.setEnd(s.node,s.offset),E.addRange(x))))),x=[];for(E=w;E=E.parentNode;)1===E.nodeType&&x.push({element:E,left:E.scrollLeft,top:E.scrollTop});for("function"==typeof w.focus&&w.focus(),w=0;w<x.length;w++)(E=x[w]).element.scrollLeft=E.left,E.element.scrollTop=E.top}Ht=!!hn,vn=hn=null,e.current=n,zl=i;do{try{for(w=e;null!==zl;){var k=zl.effectTag;if(36&k&&ol(w,zl.alternate,zl),128&k){x=void 0;var T=zl.ref;if(null!==T){var S=zl.stateNode;switch(zl.tag){case 5:x=S;break;default:x=S}"function"==typeof T?T(x):T.current=x}}zl=zl.nextEffect}}catch(e){if(null===zl)throw Error(a(330));gu(zl,e),zl=zl.nextEffect}}while(null!==zl);zl=null,Ri(),kl=o}else e.current=n;if(Ll)Ll=!1,Ul=e,Bl=t;else for(zl=i;null!==zl;)t=zl.nextEffect,zl.nextEffect=null,zl=t;if(0===(t=e.firstPendingTime)&&(Fl=null),1073741823===t?e===Wl?$l++:($l=0,Wl=e):$l=0,"function"==typeof xu&&xu(n.stateNode,r),Gl(e),Ml)throw Ml=!1,e=Dl,Dl=null,e;return 0!=(8&kl)||Qi(),null}function mu(){for(;null!==zl;){var e=zl.effectTag;0!=(256&e)&&nl(zl.alternate,zl),0==(512&e)||Ll||(Ll=!0,$i(97,(function(){return hu(),null}))),zl=zl.nextEffect}}function hu(){if(90!==Bl){var e=97<Bl?97:Bl;return Bl=90,Vi(e,vu)}}function vu(){if(null===Ul)return!1;var e=Ul;if(Ul=null,0!=(48&kl))throw Error(a(331));var t=kl;for(kl|=32,e=e.current.firstEffect;null!==e;){try{var n=e;if(0!=(512&n.effectTag))switch(n.tag){case 0:case 11:case 15:case 22:rl(5,n),il(5,n)}}catch(t){if(null===e)throw Error(a(330));gu(e,t)}n=e.nextEffect,e.nextEffect=null,e=n}return kl=t,Qi(),!0}function yu(e,t,n){uo(e,t=ml(e,t=Ja(n,t),1073741823)),null!==(e=Yl(e,1073741823))&&Gl(e)}function gu(e,t){if(3===e.tag)yu(e,e,t);else for(var n=e.return;null!==n;){if(3===n.tag){yu(n,e,t);break}if(1===n.tag){var r=n.stateNode;if("function"==typeof n.type.getDerivedStateFromError||"function"==typeof r.componentDidCatch&&(null===Fl||!Fl.has(r))){uo(n,e=hl(n,e=Ja(t,e),1073741823)),null!==(n=Yl(n,1073741823))&&Gl(n);break}}n=n.return}}function bu(e,t,n){var r=e.pingCache;null!==r&&r.delete(t),Tl===e&&Ol===n?Cl===El||Cl===xl&&1073741823===_l&&Li()-Rl<500?nu(e,Ol):jl=!0:Nu(e,n)&&(0!==(t=e.lastPingedTime)&&t<n||(e.lastPingedTime=n,Gl(e)))}function wu(e,t){var n=e.stateNode;null!==n&&n.delete(t),0===(t=0)&&(t=Kl(t=Hl(),e,null)),null!==(e=Yl(e,t))&&Gl(e)}vl=function(e,t,n){var r=t.expirationTime;if(null!==e){var i=t.pendingProps;if(e.memoizedProps!==i||di.current)Ia=!0;else{if(r<n){switch(Ia=!1,t.tag){case 3:La(t),Pa();break;case 5:if(Ro(t),4&t.mode&&1!==n&&i.hidden)return t.expirationTime=t.childExpirationTime=1,null;break;case 1:hi(t.type)&&bi(t);break;case 4:No(t,t.stateNode.containerInfo);break;case 10:r=t.memoizedProps.value,i=t.type._context,ci(Yi,i._currentValue),i._currentValue=r;break;case 13:if(null!==t.memoizedState)return 0!==(r=t.child.childExpirationTime)&&r>=n?Wa(e,t,n):(ci(Mo,1&Mo.current),null!==(t=qa(e,t,n))?t.sibling:null);ci(Mo,1&Mo.current);break;case 19:if(r=t.childExpirationTime>=n,0!=(64&e.effectTag)){if(r)return Ka(e,t,n);t.effectTag|=64}if(null!==(i=t.memoizedState)&&(i.rendering=null,i.tail=null),ci(Mo,Mo.current),!r)return null}return qa(e,t,n)}Ia=!1}}else Ia=!1;switch(t.expirationTime=0,t.tag){case 2:if(r=t.type,null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),e=t.pendingProps,i=mi(t,si.current),no(t,n),i=qo(null,t,r,e,i,n),t.effectTag|=1,"object"==typeof i&&null!==i&&"function"==typeof i.render&&void 0===i.$$typeof){if(t.tag=1,t.memoizedState=null,t.updateQueue=null,hi(r)){var o=!0;bi(t)}else o=!1;t.memoizedState=null!==i.state&&void 0!==i.state?i.state:null,oo(t);var l=r.getDerivedStateFromProps;"function"==typeof l&&ho(t,r,l,e),i.updater=vo,t.stateNode=i,i._reactInternalFiber=t,wo(t,r,e,n),t=Fa(null,t,r,!0,o,n)}else t.tag=0,Aa(null,t,i,n),t=t.child;return t;case 16:e:{if(i=t.elementType,null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),e=t.pendingProps,function(e){if(-1===e._status){e._status=0;var t=e._ctor;t=t(),e._result=t,t.then((function(t){0===e._status&&(t=t.default,e._status=1,e._result=t)}),(function(t){0===e._status&&(e._status=2,e._result=t)}))}}(i),1!==i._status)throw i._result;switch(i=i._result,t.type=i,o=t.tag=function(e){if("function"==typeof e)return Su(e)?1:0;if(null!=e){if((e=e.$$typeof)===ue)return 11;if(e===se)return 14}return 2}(i),e=qi(i,e),o){case 0:t=Ma(null,t,i,e,n);break e;case 1:t=Da(null,t,i,e,n);break e;case 11:t=Na(null,t,i,e,n);break e;case 14:t=ja(null,t,i,qi(i.type,e),r,n);break e}throw Error(a(306,i,""))}return t;case 0:return r=t.type,i=t.pendingProps,Ma(e,t,r,i=t.elementType===r?i:qi(r,i),n);case 1:return r=t.type,i=t.pendingProps,Da(e,t,r,i=t.elementType===r?i:qi(r,i),n);case 3:if(La(t),r=t.updateQueue,null===e||null===r)throw Error(a(282));if(r=t.pendingProps,i=null!==(i=t.memoizedState)?i.element:null,ao(e,t),fo(t,r,null,n),(r=t.memoizedState.element)===i)Pa(),t=qa(e,t,n);else{if((i=t.stateNode.hydrate)&&(xa=xn(t.stateNode.containerInfo.firstChild),wa=t,i=Ea=!0),i)for(n=Oo(t,null,r,n),t.child=n;n;)n.effectTag=-3&n.effectTag|1024,n=n.sibling;else Aa(e,t,r,n),Pa();t=t.child}return t;case 5:return Ro(t),null===e&&Sa(t),r=t.type,i=t.pendingProps,o=null!==e?e.memoizedProps:null,l=i.children,gn(r,i)?l=null:null!==o&&gn(r,o)&&(t.effectTag|=16),za(e,t),4&t.mode&&1!==n&&i.hidden?(t.expirationTime=t.childExpirationTime=1,t=null):(Aa(e,t,l,n),t=t.child),t;case 6:return null===e&&Sa(t),null;case 13:return Wa(e,t,n);case 4:return No(t,t.stateNode.containerInfo),r=t.pendingProps,null===e?t.child=So(t,null,r,n):Aa(e,t,r,n),t.child;case 11:return r=t.type,i=t.pendingProps,Na(e,t,r,i=t.elementType===r?i:qi(r,i),n);case 7:return Aa(e,t,t.pendingProps,n),t.child;case 8:case 12:return Aa(e,t,t.pendingProps.children,n),t.child;case 10:e:{r=t.type._context,i=t.pendingProps,l=t.memoizedProps,o=i.value;var u=t.type._context;if(ci(Yi,u._currentValue),u._currentValue=o,null!==l)if(u=l.value,0===(o=Dr(u,o)?0:0|("function"==typeof r._calculateChangedBits?r._calculateChangedBits(u,o):1073741823))){if(l.children===i.children&&!di.current){t=qa(e,t,n);break e}}else for(null!==(u=t.child)&&(u.return=t);null!==u;){var c=u.dependencies;if(null!==c){l=u.child;for(var f=c.firstContext;null!==f;){if(f.context===r&&0!=(f.observedBits&o)){1===u.tag&&((f=lo(n,null)).tag=2,uo(u,f)),u.expirationTime<n&&(u.expirationTime=n),null!==(f=u.alternate)&&f.expirationTime<n&&(f.expirationTime=n),to(u.return,n),c.expirationTime<n&&(c.expirationTime=n);break}f=f.next}}else l=10===u.tag&&u.type===t.type?null:u.child;if(null!==l)l.return=u;else for(l=u;null!==l;){if(l===t){l=null;break}if(null!==(u=l.sibling)){u.return=l.return,l=u;break}l=l.return}u=l}Aa(e,t,i.children,n),t=t.child}return t;case 9:return i=t.type,r=(o=t.pendingProps).children,no(t,n),r=r(i=ro(i,o.unstable_observedBits)),t.effectTag|=1,Aa(e,t,r,n),t.child;case 14:return o=qi(i=t.type,t.pendingProps),ja(e,t,i,o=qi(i.type,o),r,n);case 15:return Ra(e,t,t.type,t.pendingProps,r,n);case 17:return r=t.type,i=t.pendingProps,i=t.elementType===r?i:qi(r,i),null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),t.tag=1,hi(r)?(e=!0,bi(t)):e=!1,no(t,n),go(t,r,i),wo(t,r,i,n),Fa(null,t,r,!0,e,n);case 19:return Ka(e,t,n)}throw Error(a(156,t.tag))};var xu=null,Eu=null;function ku(e,t,n,r){this.tag=e,this.key=n,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=t,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=r,this.effectTag=0,this.lastEffect=this.firstEffect=this.nextEffect=null,this.childExpirationTime=this.expirationTime=0,this.alternate=null}function Tu(e,t,n,r){return new ku(e,t,n,r)}function Su(e){return!(!(e=e.prototype)||!e.isReactComponent)}function Ou(e,t){var n=e.alternate;return null===n?((n=Tu(e.tag,t,e.key,e.mode)).elementType=e.elementType,n.type=e.type,n.stateNode=e.stateNode,n.alternate=e,e.alternate=n):(n.pendingProps=t,n.effectTag=0,n.nextEffect=null,n.firstEffect=null,n.lastEffect=null),n.childExpirationTime=e.childExpirationTime,n.expirationTime=e.expirationTime,n.child=e.child,n.memoizedProps=e.memoizedProps,n.memoizedState=e.memoizedState,n.updateQueue=e.updateQueue,t=e.dependencies,n.dependencies=null===t?null:{expirationTime:t.expirationTime,firstContext:t.firstContext,responders:t.responders},n.sibling=e.sibling,n.index=e.index,n.ref=e.ref,n}function Cu(e,t,n,r,i,o){var l=2;if(r=e,"function"==typeof e)Su(e)&&(l=1);else if("string"==typeof e)l=5;else e:switch(e){case ne:return Pu(n.children,i,o,t);case le:l=8,i|=7;break;case re:l=8,i|=1;break;case ie:return(e=Tu(12,n,t,8|i)).elementType=ie,e.type=ie,e.expirationTime=o,e;case ce:return(e=Tu(13,n,t,i)).type=ce,e.elementType=ce,e.expirationTime=o,e;case fe:return(e=Tu(19,n,t,i)).elementType=fe,e.expirationTime=o,e;default:if("object"==typeof e&&null!==e)switch(e.$$typeof){case oe:l=10;break e;case ae:l=9;break e;case ue:l=11;break e;case se:l=14;break e;case de:l=16,r=null;break e;case pe:l=22;break e}throw Error(a(130,null==e?e:typeof e,""))}return(t=Tu(l,n,t,i)).elementType=e,t.type=r,t.expirationTime=o,t}function Pu(e,t,n,r){return(e=Tu(7,e,r,t)).expirationTime=n,e}function _u(e,t,n){return(e=Tu(6,e,null,t)).expirationTime=n,e}function Iu(e,t,n){return(t=Tu(4,null!==e.children?e.children:[],e.key,t)).expirationTime=n,t.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},t}function Au(e,t,n){this.tag=t,this.current=null,this.containerInfo=e,this.pingCache=this.pendingChildren=null,this.finishedExpirationTime=0,this.finishedWork=null,this.timeoutHandle=-1,this.pendingContext=this.context=null,this.hydrate=n,this.callbackNode=null,this.callbackPriority=90,this.lastExpiredTime=this.lastPingedTime=this.nextKnownPendingLevel=this.lastSuspendedTime=this.firstSuspendedTime=this.firstPendingTime=0}function Nu(e,t){var n=e.firstSuspendedTime;return e=e.lastSuspendedTime,0!==n&&n>=t&&e<=t}function ju(e,t){var n=e.firstSuspendedTime,r=e.lastSuspendedTime;n<t&&(e.firstSuspendedTime=t),(r>t||0===n)&&(e.lastSuspendedTime=t),t<=e.lastPingedTime&&(e.lastPingedTime=0),t<=e.lastExpiredTime&&(e.lastExpiredTime=0)}function Ru(e,t){t>e.firstPendingTime&&(e.firstPendingTime=t);var n=e.firstSuspendedTime;0!==n&&(t>=n?e.firstSuspendedTime=e.lastSuspendedTime=e.nextKnownPendingLevel=0:t>=e.lastSuspendedTime&&(e.lastSuspendedTime=t+1),t>e.nextKnownPendingLevel&&(e.nextKnownPendingLevel=t))}function zu(e,t){var n=e.lastExpiredTime;(0===n||n>t)&&(e.lastExpiredTime=t)}function Mu(e,t,n,r){var i=t.current,o=Hl(),l=po.suspense;o=Kl(o,i,l);e:if(n){t:{if(Ze(n=n._reactInternalFiber)!==n||1!==n.tag)throw Error(a(170));var u=n;do{switch(u.tag){case 3:u=u.stateNode.context;break t;case 1:if(hi(u.type)){u=u.stateNode.__reactInternalMemoizedMergedChildContext;break t}}u=u.return}while(null!==u);throw Error(a(171))}if(1===n.tag){var c=n.type;if(hi(c)){n=gi(n,c,u);break e}}n=u}else n=fi;return null===t.context?t.context=n:t.pendingContext=n,(t=lo(o,l)).payload={element:e},null!==(r=void 0===r?null:r)&&(t.callback=r),uo(i,t),ql(i,o),o}function Du(e){if(!(e=e.current).child)return null;switch(e.child.tag){case 5:default:return e.child.stateNode}}function Fu(e,t){null!==(e=e.memoizedState)&&null!==e.dehydrated&&e.retryTime<t&&(e.retryTime=t)}function Lu(e,t){Fu(e,t),(e=e.alternate)&&Fu(e,t)}function Uu(e,t,n){var r=new Au(e,t,n=null!=n&&!0===n.hydrate),i=Tu(3,null,null,2===t?7:1===t?3:0);r.current=i,i.stateNode=r,oo(i),e[On]=r.current,n&&0!==t&&function(e,t){var n=Je(t);Ot.forEach((function(e){mt(e,t,n)})),Ct.forEach((function(e){mt(e,t,n)}))}(0,9===e.nodeType?e:e.ownerDocument),this._internalRoot=r}function Bu(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||" react-mount-point-unstable "!==e.nodeValue))}function Vu(e,t,n,r,i){var o=n._reactRootContainer;if(o){var a=o._internalRoot;if("function"==typeof i){var l=i;i=function(){var e=Du(a);l.call(e)}}Mu(t,a,e,i)}else{if(o=n._reactRootContainer=function(e,t){if(t||(t=!(!(t=e?9===e.nodeType?e.documentElement:e.firstChild:null)||1!==t.nodeType||!t.hasAttribute("data-reactroot"))),!t)for(var n;n=e.lastChild;)e.removeChild(n);return new Uu(e,0,t?{hydrate:!0}:void 0)}(n,r),a=o._internalRoot,"function"==typeof i){var u=i;i=function(){var e=Du(a);u.call(e)}}tu((function(){Mu(t,a,e,i)}))}return Du(a)}function $u(e,t,n){var r=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:te,key:null==r?null:""+r,children:e,containerInfo:t,implementation:n}}function Wu(e,t){var n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!Bu(t))throw Error(a(200));return $u(e,t,null,n)}Uu.prototype.render=function(e){Mu(e,this._internalRoot,null,null)},Uu.prototype.unmount=function(){var e=this._internalRoot,t=e.containerInfo;Mu(null,e,null,(function(){t[On]=null}))},ht=function(e){if(13===e.tag){var t=Ki(Hl(),150,100);ql(e,t),Lu(e,t)}},vt=function(e){13===e.tag&&(ql(e,3),Lu(e,3))},yt=function(e){if(13===e.tag){var t=Hl();ql(e,t=Kl(t,e,null)),Lu(e,t)}},P=function(e,t,n){switch(t){case"input":if(Se(e,n),t=n.name,"radio"===n.type&&null!=t){for(n=e;n.parentNode;)n=n.parentNode;for(n=n.querySelectorAll("input[name="+JSON.stringify(""+t)+'][type="radio"]'),t=0;t<n.length;t++){var r=n[t];if(r!==e&&r.form===e.form){var i=In(r);if(!i)throw Error(a(90));xe(r),Se(r,i)}}}break;case"textarea":Ne(e,n);break;case"select":null!=(t=n.value)&&_e(e,!!n.multiple,t,!1)}},R=eu,z=function(e,t,n,r,i){var o=kl;kl|=4;try{return Vi(98,e.bind(null,t,n,r,i))}finally{0===(kl=o)&&Qi()}},M=function(){0==(49&kl)&&(function(){if(null!==Vl){var e=Vl;Vl=null,e.forEach((function(e,t){zu(t,e),Gl(t)})),Qi()}}(),hu())},D=function(e,t){var n=kl;kl|=2;try{return e(t)}finally{0===(kl=n)&&Qi()}};var Qu,Hu,Ku={Events:[Pn,_n,In,O,k,Dn,function(e){it(e,Mn)},N,j,Gt,lt,hu,{current:!1}]};Hu=(Qu={findFiberByHostInstance:Cn,bundleType:0,version:"16.13.1",rendererPackageName:"react-dom"}).findFiberByHostInstance,function(e){if("undefined"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__)return!1;var t=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(t.isDisabled||!t.supportsFiber)return!0;try{var n=t.inject(e);xu=function(e){try{t.onCommitFiberRoot(n,e,void 0,64==(64&e.current.effectTag))}catch(e){}},Eu=function(e){try{t.onCommitFiberUnmount(n,e)}catch(e){}}}catch(e){}}(i({},Qu,{overrideHookState:null,overrideProps:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:X.ReactCurrentDispatcher,findHostInstanceByFiber:function(e){return null===(e=nt(e))?null:e.stateNode},findFiberByHostInstance:function(e){return Hu?Hu(e):null},findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null})),t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=Ku,t.createPortal=Wu,t.findDOMNode=function(e){if(null==e)return null;if(1===e.nodeType)return e;var t=e._reactInternalFiber;if(void 0===t){if("function"==typeof e.render)throw Error(a(188));throw Error(a(268,Object.keys(e)))}return e=null===(e=nt(t))?null:e.stateNode},t.flushSync=function(e,t){if(0!=(48&kl))throw Error(a(187));var n=kl;kl|=1;try{return Vi(99,e.bind(null,t))}finally{kl=n,Qi()}},t.hydrate=function(e,t,n){if(!Bu(t))throw Error(a(200));return Vu(null,e,t,!0,n)},t.render=function(e,t,n){if(!Bu(t))throw Error(a(200));return Vu(null,e,t,!1,n)},t.unmountComponentAtNode=function(e){if(!Bu(e))throw Error(a(40));return!!e._reactRootContainer&&(tu((function(){Vu(null,null,e,!1,(function(){e._reactRootContainer=null,e[On]=null}))})),!0)},t.unstable_batchedUpdates=eu,t.unstable_createPortal=function(e,t){return Wu(e,t,2<arguments.length&&void 0!==arguments[2]?arguments[2]:null)},t.unstable_renderSubtreeIntoContainer=function(e,t,n,r){if(!Bu(n))throw Error(a(200));if(null==e||void 0===e._reactInternalFiber)throw Error(a(38));return Vu(e,t,n,!1,r)},t.version="16.13.1"},function(e,t,n){"use strict";e.exports=n(13)},function(e,t,n){"use strict";
/** @license React v0.19.1
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var r,i,o,a,l;if("undefined"==typeof window||"function"!=typeof MessageChannel){var u=null,c=null,f=function(){if(null!==u)try{var e=t.unstable_now();u(!0,e),u=null}catch(e){throw setTimeout(f,0),e}},s=Date.now();t.unstable_now=function(){return Date.now()-s},r=function(e){null!==u?setTimeout(r,0,e):(u=e,setTimeout(f,0))},i=function(e,t){c=setTimeout(e,t)},o=function(){clearTimeout(c)},a=function(){return!1},l=t.unstable_forceFrameRate=function(){}}else{var d=window.performance,p=window.Date,m=window.setTimeout,h=window.clearTimeout;if("undefined"!=typeof console){var v=window.cancelAnimationFrame;"function"!=typeof window.requestAnimationFrame&&console.error("This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills"),"function"!=typeof v&&console.error("This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills")}if("object"==typeof d&&"function"==typeof d.now)t.unstable_now=function(){return d.now()};else{var y=p.now();t.unstable_now=function(){return p.now()-y}}var g=!1,b=null,w=-1,x=5,E=0;a=function(){return t.unstable_now()>=E},l=function(){},t.unstable_forceFrameRate=function(e){0>e||125<e?console.error("forceFrameRate takes a positive int between 0 and 125, forcing framerates higher than 125 fps is not unsupported"):x=0<e?Math.floor(1e3/e):5};var k=new MessageChannel,T=k.port2;k.port1.onmessage=function(){if(null!==b){var e=t.unstable_now();E=e+x;try{b(!0,e)?T.postMessage(null):(g=!1,b=null)}catch(e){throw T.postMessage(null),e}}else g=!1},r=function(e){b=e,g||(g=!0,T.postMessage(null))},i=function(e,n){w=m((function(){e(t.unstable_now())}),n)},o=function(){h(w),w=-1}}function S(e,t){var n=e.length;e.push(t);e:for(;;){var r=n-1>>>1,i=e[r];if(!(void 0!==i&&0<P(i,t)))break e;e[r]=t,e[n]=i,n=r}}function O(e){return void 0===(e=e[0])?null:e}function C(e){var t=e[0];if(void 0!==t){var n=e.pop();if(n!==t){e[0]=n;e:for(var r=0,i=e.length;r<i;){var o=2*(r+1)-1,a=e[o],l=o+1,u=e[l];if(void 0!==a&&0>P(a,n))void 0!==u&&0>P(u,a)?(e[r]=u,e[l]=n,r=l):(e[r]=a,e[o]=n,r=o);else{if(!(void 0!==u&&0>P(u,n)))break e;e[r]=u,e[l]=n,r=l}}}return t}return null}function P(e,t){var n=e.sortIndex-t.sortIndex;return 0!==n?n:e.id-t.id}var _=[],I=[],A=1,N=null,j=3,R=!1,z=!1,M=!1;function D(e){for(var t=O(I);null!==t;){if(null===t.callback)C(I);else{if(!(t.startTime<=e))break;C(I),t.sortIndex=t.expirationTime,S(_,t)}t=O(I)}}function F(e){if(M=!1,D(e),!z)if(null!==O(_))z=!0,r(L);else{var t=O(I);null!==t&&i(F,t.startTime-e)}}function L(e,n){z=!1,M&&(M=!1,o()),R=!0;var r=j;try{for(D(n),N=O(_);null!==N&&(!(N.expirationTime>n)||e&&!a());){var l=N.callback;if(null!==l){N.callback=null,j=N.priorityLevel;var u=l(N.expirationTime<=n);n=t.unstable_now(),"function"==typeof u?N.callback=u:N===O(_)&&C(_),D(n)}else C(_);N=O(_)}if(null!==N)var c=!0;else{var f=O(I);null!==f&&i(F,f.startTime-n),c=!1}return c}finally{N=null,j=r,R=!1}}function U(e){switch(e){case 1:return-1;case 2:return 250;case 5:return 1073741823;case 4:return 1e4;default:return 5e3}}var B=l;t.unstable_IdlePriority=5,t.unstable_ImmediatePriority=1,t.unstable_LowPriority=4,t.unstable_NormalPriority=3,t.unstable_Profiling=null,t.unstable_UserBlockingPriority=2,t.unstable_cancelCallback=function(e){e.callback=null},t.unstable_continueExecution=function(){z||R||(z=!0,r(L))},t.unstable_getCurrentPriorityLevel=function(){return j},t.unstable_getFirstCallbackNode=function(){return O(_)},t.unstable_next=function(e){switch(j){case 1:case 2:case 3:var t=3;break;default:t=j}var n=j;j=t;try{return e()}finally{j=n}},t.unstable_pauseExecution=function(){},t.unstable_requestPaint=B,t.unstable_runWithPriority=function(e,t){switch(e){case 1:case 2:case 3:case 4:case 5:break;default:e=3}var n=j;j=e;try{return t()}finally{j=n}},t.unstable_scheduleCallback=function(e,n,a){var l=t.unstable_now();if("object"==typeof a&&null!==a){var u=a.delay;u="number"==typeof u&&0<u?l+u:l,a="number"==typeof a.timeout?a.timeout:U(e)}else a=U(e),u=l;return e={id:A++,callback:n,priorityLevel:e,startTime:u,expirationTime:a=u+a,sortIndex:-1},u>l?(e.sortIndex=u,S(I,e),null===O(_)&&e===O(I)&&(M?o():M=!0,i(F,u-l))):(e.sortIndex=a,S(_,e),z||R||(z=!0,r(L))),e},t.unstable_shouldYield=function(){var e=t.unstable_now();D(e);var n=O(_);return n!==N&&null!==N&&null!==n&&null!==n.callback&&n.startTime<=e&&n.expirationTime<N.expirationTime||a()},t.unstable_wrapCallback=function(e){var t=j;return function(){var n=j;j=t;try{return e.apply(this,arguments)}finally{j=n}}}},function(e,t,n){e.exports=n(15)()},function(e,t,n){"use strict";var r=n(16);function i(){}function o(){}o.resetWarningCache=i,e.exports=function(){function e(e,t,n,i,o,a){if(a!==r){var l=new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");throw l.name="Invariant Violation",l}}function t(){return e}e.isRequired=e;var n={array:e,bool:e,func:e,number:e,object:e,string:e,symbol:e,any:e,arrayOf:t,element:e,elementType:e,instanceOf:t,node:e,objectOf:t,oneOf:t,oneOfType:t,shape:t,exact:t,checkPropTypes:o,resetWarningCache:i};return n.PropTypes=n,n}},function(e,t,n){"use strict";e.exports="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED"},function(e,t,n){"use strict";
/** @license React v16.13.1
 * react-is.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var r="function"==typeof Symbol&&Symbol.for,i=r?Symbol.for("react.element"):60103,o=r?Symbol.for("react.portal"):60106,a=r?Symbol.for("react.fragment"):60107,l=r?Symbol.for("react.strict_mode"):60108,u=r?Symbol.for("react.profiler"):60114,c=r?Symbol.for("react.provider"):60109,f=r?Symbol.for("react.context"):60110,s=r?Symbol.for("react.async_mode"):60111,d=r?Symbol.for("react.concurrent_mode"):60111,p=r?Symbol.for("react.forward_ref"):60112,m=r?Symbol.for("react.suspense"):60113,h=r?Symbol.for("react.suspense_list"):60120,v=r?Symbol.for("react.memo"):60115,y=r?Symbol.for("react.lazy"):60116,g=r?Symbol.for("react.block"):60121,b=r?Symbol.for("react.fundamental"):60117,w=r?Symbol.for("react.responder"):60118,x=r?Symbol.for("react.scope"):60119;function E(e){if("object"==typeof e&&null!==e){var t=e.$$typeof;switch(t){case i:switch(e=e.type){case s:case d:case a:case u:case l:case m:return e;default:switch(e=e&&e.$$typeof){case f:case p:case y:case v:case c:return e;default:return t}}case o:return t}}}function k(e){return E(e)===d}t.AsyncMode=s,t.ConcurrentMode=d,t.ContextConsumer=f,t.ContextProvider=c,t.Element=i,t.ForwardRef=p,t.Fragment=a,t.Lazy=y,t.Memo=v,t.Portal=o,t.Profiler=u,t.StrictMode=l,t.Suspense=m,t.isAsyncMode=function(e){return k(e)||E(e)===s},t.isConcurrentMode=k,t.isContextConsumer=function(e){return E(e)===f},t.isContextProvider=function(e){return E(e)===c},t.isElement=function(e){return"object"==typeof e&&null!==e&&e.$$typeof===i},t.isForwardRef=function(e){return E(e)===p},t.isFragment=function(e){return E(e)===a},t.isLazy=function(e){return E(e)===y},t.isMemo=function(e){return E(e)===v},t.isPortal=function(e){return E(e)===o},t.isProfiler=function(e){return E(e)===u},t.isStrictMode=function(e){return E(e)===l},t.isSuspense=function(e){return E(e)===m},t.isValidElementType=function(e){return"string"==typeof e||"function"==typeof e||e===a||e===d||e===u||e===l||e===m||e===h||"object"==typeof e&&null!==e&&(e.$$typeof===y||e.$$typeof===v||e.$$typeof===c||e.$$typeof===f||e.$$typeof===p||e.$$typeof===b||e.$$typeof===w||e.$$typeof===x||e.$$typeof===g)},t.typeOf=E},function(e,t){var n;n=function(){return this}();try{n=n||new Function("return this")()}catch(e){"object"==typeof window&&(n=window)}e.exports=n},function(e,t){e.exports=function(e){if(!e.webpackPolyfill){var t=Object.create(e);t.children||(t.children=[]),Object.defineProperty(t,"loaded",{enumerable:!0,get:function(){return t.l}}),Object.defineProperty(t,"id",{enumerable:!0,get:function(){return t.i}}),Object.defineProperty(t,"exports",{enumerable:!0}),t.webpackPolyfill=1}return t}},function(e,t,n){"use strict";n.r(t);var r=n(2),i=n.n(r)()(!0);i.push([e.i,".mosaic-container {\n  display: flex;\n  flex-direction: column;\n  align-items: left;\n  flex-shrink: 1;\n}\n\n.mosaicSelector-container {\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n}\n\n.mosaicSelector-button {\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n}\n\n","",{version:3,sources:["webpack://src/features/mosaicCanvasVideo/mosaicStyles.css"],names:[],mappings:"AAAA;EACE,aAAa;EACb,sBAAsB;EACtB,iBAAiB;EACjB,cAAc;AAChB;;AAEA;EACE,aAAa;EACb,mBAAmB;EACnB,mBAAmB;AACrB;;AAEA;EACE,aAAa;EACb,mBAAmB;EACnB,mBAAmB;AACrB",sourcesContent:[".mosaic-container {\n  display: flex;\n  flex-direction: column;\n  align-items: left;\n  flex-shrink: 1;\n}\n\n.mosaicSelector-container {\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n}\n\n.mosaicSelector-button {\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n}\n\n"],sourceRoot:""}]),t.default=i},function(e,t,n){var r=n(8),i=n(22);"string"==typeof(i=i.__esModule?i.default:i)&&(i=[[e.i,i,""]]);var o={insert:"head",singleton:!1};r(i,o);e.exports=i.locals||{}},function(e,t,n){"use strict";n.r(t);var r=n(2),i=n.n(r)()(!0);i.push([e.i,"h1 {\n  font-size: 6vh;\n  text-align: center;\n} \n\nlabel, input {\n  font-size: 3vh;\n}\n\nlabel {\n  padding-right: 1vh;\n}\n\n.app-container {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}","",{version:3,sources:["webpack://src/app/app.css"],names:[],mappings:"AAAA;EACE,cAAc;EACd,kBAAkB;AACpB;;AAEA;EACE,cAAc;AAChB;;AAEA;EACE,kBAAkB;AACpB;;AAEA;EACE,aAAa;EACb,sBAAsB;EACtB,mBAAmB;AACrB",sourcesContent:["h1 {\n  font-size: 6vh;\n  text-align: center;\n} \n\nlabel, input {\n  font-size: 3vh;\n}\n\nlabel {\n  padding-right: 1vh;\n}\n\n.app-container {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}"],sourceRoot:""}]),t.default=i},function(e,t,n){"use strict";n.r(t);var r=n(0),i=n.n(r),o=n(1),a=n.n(o),l=(n(14),i.a.createContext(null));var u=function(e){e()},c={notify:function(){}};function f(){var e=u,t=null,n=null;return{clear:function(){t=null,n=null},notify:function(){e((function(){for(var e=t;e;)e.callback(),e=e.next}))},get:function(){for(var e=[],n=t;n;)e.push(n),n=n.next;return e},subscribe:function(e){var r=!0,i=n={callback:e,next:null,prev:n};return i.prev?i.prev.next=i:t=i,function(){r&&null!==t&&(r=!1,i.next?i.next.prev=i.prev:n=i.prev,i.prev?i.prev.next=i.next:t=i.next)}}}}var s=function(){function e(e,t){this.store=e,this.parentSub=t,this.unsubscribe=null,this.listeners=c,this.handleChangeWrapper=this.handleChangeWrapper.bind(this)}var t=e.prototype;return t.addNestedSub=function(e){return this.trySubscribe(),this.listeners.subscribe(e)},t.notifyNestedSubs=function(){this.listeners.notify()},t.handleChangeWrapper=function(){this.onStateChange&&this.onStateChange()},t.isSubscribed=function(){return Boolean(this.unsubscribe)},t.trySubscribe=function(){this.unsubscribe||(this.unsubscribe=this.parentSub?this.parentSub.addNestedSub(this.handleChangeWrapper):this.store.subscribe(this.handleChangeWrapper),this.listeners=f())},t.tryUnsubscribe=function(){this.unsubscribe&&(this.unsubscribe(),this.unsubscribe=null,this.listeners.clear(),this.listeners=c)},e}();var d=function(e){var t=e.store,n=e.context,o=e.children,a=Object(r.useMemo)((function(){var e=new s(t);return e.onStateChange=e.notifyNestedSubs,{store:t,subscription:e}}),[t]),u=Object(r.useMemo)((function(){return t.getState()}),[t]);Object(r.useEffect)((function(){var e=a.subscription;return e.trySubscribe(),u!==t.getState()&&e.notifyNestedSubs(),function(){e.tryUnsubscribe(),e.onStateChange=null}}),[a,u]);var c=n||l;return i.a.createElement(c.Provider,{value:a},o)};n(4),n(3);var p="undefined"!=typeof window&&void 0!==window.document&&void 0!==window.document.createElement?r.useLayoutEffect:r.useEffect;var m=n(5),h=function(){return Math.random().toString(36).substring(7).split("").join(".")},v={INIT:"@@redux/INIT"+h(),REPLACE:"@@redux/REPLACE"+h(),PROBE_UNKNOWN_ACTION:function(){return"@@redux/PROBE_UNKNOWN_ACTION"+h()}};function y(e){if("object"!=typeof e||null===e)return!1;for(var t=e;null!==Object.getPrototypeOf(t);)t=Object.getPrototypeOf(t);return Object.getPrototypeOf(e)===t}function g(e,t,n){var r;if("function"==typeof t&&"function"==typeof n||"function"==typeof n&&"function"==typeof arguments[3])throw new Error("It looks like you are passing several store enhancers to createStore(). This is not supported. Instead, compose them together to a single function.");if("function"==typeof t&&void 0===n&&(n=t,t=void 0),void 0!==n){if("function"!=typeof n)throw new Error("Expected the enhancer to be a function.");return n(g)(e,t)}if("function"!=typeof e)throw new Error("Expected the reducer to be a function.");var i=e,o=t,a=[],l=a,u=!1;function c(){l===a&&(l=a.slice())}function f(){if(u)throw new Error("You may not call store.getState() while the reducer is executing. The reducer has already received the state as an argument. Pass it down from the top reducer instead of reading it from the store.");return o}function s(e){if("function"!=typeof e)throw new Error("Expected the listener to be a function.");if(u)throw new Error("You may not call store.subscribe() while the reducer is executing. If you would like to be notified after the store has been updated, subscribe from a component and invoke store.getState() in the callback to access the latest state. See https://redux.js.org/api-reference/store#subscribelistener for more details.");var t=!0;return c(),l.push(e),function(){if(t){if(u)throw new Error("You may not unsubscribe from a store listener while the reducer is executing. See https://redux.js.org/api-reference/store#subscribelistener for more details.");t=!1,c();var n=l.indexOf(e);l.splice(n,1),a=null}}}function d(e){if(!y(e))throw new Error("Actions must be plain objects. Use custom middleware for async actions.");if(void 0===e.type)throw new Error('Actions may not have an undefined "type" property. Have you misspelled a constant?');if(u)throw new Error("Reducers may not dispatch actions.");try{u=!0,o=i(o,e)}finally{u=!1}for(var t=a=l,n=0;n<t.length;n++){(0,t[n])()}return e}function p(e){if("function"!=typeof e)throw new Error("Expected the nextReducer to be a function.");i=e,d({type:v.REPLACE})}function h(){var e,t=s;return(e={subscribe:function(e){if("object"!=typeof e||null===e)throw new TypeError("Expected the observer to be an object.");function n(){e.next&&e.next(f())}return n(),{unsubscribe:t(n)}}})[m.a]=function(){return this},e}return d({type:v.INIT}),(r={dispatch:d,subscribe:s,getState:f,replaceReducer:p})[m.a]=h,r}function b(e,t){var n=t&&t.type;return"Given "+(n&&'action "'+String(n)+'"'||"an action")+', reducer "'+e+'" returned undefined. To ignore an action, you must explicitly return the previous state. If you want this reducer to hold no value, you can return null instead of undefined.'}function w(e){for(var t=Object.keys(e),n={},r=0;r<t.length;r++){var i=t[r];0,"function"==typeof e[i]&&(n[i]=e[i])}var o,a=Object.keys(n);try{!function(e){Object.keys(e).forEach((function(t){var n=e[t];if(void 0===n(void 0,{type:v.INIT}))throw new Error('Reducer "'+t+"\" returned undefined during initialization. If the state passed to the reducer is undefined, you must explicitly return the initial state. The initial state may not be undefined. If you don't want to set a value for this reducer, you can use null instead of undefined.");if(void 0===n(void 0,{type:v.PROBE_UNKNOWN_ACTION()}))throw new Error('Reducer "'+t+"\" returned undefined when probed with a random type. Don't try to handle "+v.INIT+' or other actions in "redux/*" namespace. They are considered private. Instead, you must return the current state for any unknown actions, unless it is undefined, in which case you must return the initial state, regardless of the action type. The initial state may not be undefined, but can be null.')}))}(n)}catch(e){o=e}return function(e,t){if(void 0===e&&(e={}),o)throw o;for(var r=!1,i={},l=0;l<a.length;l++){var u=a[l],c=n[u],f=e[u],s=c(f,t);if(void 0===s){var d=b(u,t);throw new Error(d)}i[u]=s,r=r||s!==f}return(r=r||a.length!==Object.keys(e).length)?i:e}}function x(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function E(e,t){var n=Object.keys(e);return Object.getOwnPropertySymbols&&n.push.apply(n,Object.getOwnPropertySymbols(e)),t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n}function k(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?E(n,!0).forEach((function(t){x(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):E(n).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function T(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return 0===t.length?function(e){return e}:1===t.length?t[0]:t.reduce((function(e,t){return function(){return e(t.apply(void 0,arguments))}}))}function S(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return function(e){return function(){var n=e.apply(void 0,arguments),r=function(){throw new Error("Dispatching while constructing your middleware is not allowed. Other middleware would not be applied to this dispatch.")},i={getState:n.getState,dispatch:function(){return r.apply(void 0,arguments)}},o=t.map((function(e){return e(i)}));return k({},n,{dispatch:r=T.apply(void 0,o)(n.dispatch)})}}}function O(){return Object(r.useContext)(l)}function C(e){void 0===e&&(e=l);var t=e===l?O:function(){return Object(r.useContext)(e)};return function(){return t().store}}var P=C();function _(e){void 0===e&&(e=l);var t=e===l?P:C(e);return function(){return t().dispatch}}var I=_(),A=function(e,t){return e===t};function N(e){void 0===e&&(e=l);var t=e===l?O:function(){return Object(r.useContext)(e)};return function(e,n){void 0===n&&(n=A);var i=t(),o=function(e,t,n,i){var o,a=Object(r.useReducer)((function(e){return e+1}),0)[1],l=Object(r.useMemo)((function(){return new s(n,i)}),[n,i]),u=Object(r.useRef)(),c=Object(r.useRef)(),f=Object(r.useRef)(),d=Object(r.useRef)(),m=n.getState();try{o=e!==c.current||m!==f.current||u.current?e(m):d.current}catch(e){throw u.current&&(e.message+="\nThe error may be correlated with this previous error:\n"+u.current.stack+"\n\n"),e}return p((function(){c.current=e,f.current=m,d.current=o,u.current=void 0})),p((function(){function e(){try{var e=c.current(n.getState());if(t(e,d.current))return;d.current=e}catch(e){u.current=e}a()}return l.onStateChange=e,l.trySubscribe(),e(),function(){return l.tryUnsubscribe()}}),[n,l]),o}(e,n,i.store,i.subscription);return Object(r.useDebugValue)(o),o}}var j,R=N();function z(e){for(var t=arguments.length,n=Array(t>1?t-1:0),r=1;r<t;r++)n[r-1]=arguments[r];throw Error("[Immer] minified error nr: "+e+(n.length?" "+n.join(","):"")+". Find the full error at: https://bit.ly/3cXEKWf")}function M(e){return!!e&&!!e[Se]}function D(e){return!!e&&(function(e){if(!e||"object"!=typeof e)return!1;var t=Object.getPrototypeOf(e);return!t||t===Object.prototype}(e)||Array.isArray(e)||!!e[Te]||!!e.constructor[Te]||W(e)||Q(e))}function F(e,t,n){void 0===n&&(n=!1),0===L(e)?(n?Object.keys:Oe)(e).forEach((function(r){n&&"symbol"==typeof r||t(r,e[r],e)})):e.forEach((function(n,r){return t(r,n,e)}))}function L(e){var t=e[Se];return t?t.i>3?t.i-4:t.i:Array.isArray(e)?1:W(e)?2:Q(e)?3:0}function U(e,t){return 2===L(e)?e.has(t):Object.prototype.hasOwnProperty.call(e,t)}function B(e,t){return 2===L(e)?e.get(t):e[t]}function V(e,t,n){var r=L(e);2===r?e.set(t,n):3===r?(e.delete(t),e.add(n)):e[t]=n}function $(e,t){return e===t?0!==e||1/e==1/t:e!=e&&t!=t}function W(e){return we&&e instanceof Map}function Q(e){return xe&&e instanceof Set}function H(e){return e.o||e.t}function K(e){if(Array.isArray(e))return Array.prototype.slice.call(e);var t=Ce(e);delete t[Se];for(var n=Oe(t),r=0;r<n.length;r++){var i=n[r],o=t[i];!1===o.writable&&(o.writable=!0,o.configurable=!0),(o.get||o.set)&&(t[i]={configurable:!0,writable:!0,enumerable:o.enumerable,value:e[i]})}return Object.create(Object.getPrototypeOf(e),t)}function q(e,t){X(e)||M(e)||!D(e)||(L(e)>1&&(e.set=e.add=e.clear=e.delete=Y),Object.freeze(e),t&&F(e,(function(e,t){return q(t,!0)}),!0))}function Y(){z(2)}function X(e){return null==e||"object"!=typeof e||Object.isFrozen(e)}function G(e){var t=Pe[e];return t||z(19,e),t}function J(e,t){Pe[e]=t}function Z(){return ge}function ee(e,t){t&&(G("Patches"),e.u=[],e.s=[],e.v=t)}function te(e){ne(e),e.p.forEach(ie),e.p=null}function ne(e){e===ge&&(ge=e.l)}function re(e){return ge={p:[],l:ge,h:e,m:!0,_:0}}function ie(e){var t=e[Se];0===t.i||1===t.i?t.j():t.g=!0}function oe(e,t){t._=t.p.length;var n=t.p[0],r=void 0!==e&&e!==n;return t.h.O||G("ES5").S(t,e,r),r?(n[Se].P&&(te(t),z(4)),D(e)&&(e=ae(t,e),t.l||ue(t,e)),t.u&&G("Patches").M(n[Se],e,t.u,t.s)):e=ae(t,n,[]),te(t),t.u&&t.v(t.u,t.s),e!==ke?e:void 0}function ae(e,t,n){if(X(t))return t;var r=t[Se];if(!r)return F(t,(function(i,o){return le(e,r,t,i,o,n)}),!0),t;if(r.A!==e)return t;if(!r.P)return ue(e,r.t,!0),r.t;if(!r.I){r.I=!0,r.A._--;var i=4===r.i||5===r.i?r.o=K(r.k):r.o;F(3===r.i?new Set(i):i,(function(t,o){return le(e,r,i,t,o,n)})),ue(e,i,!1),n&&e.u&&G("Patches").R(r,n,e.u,e.s)}return r.o}function le(e,t,n,r,i,o){if(M(i)){var a=ae(e,i,o&&t&&3!==t.i&&!U(t.D,r)?o.concat(r):void 0);if(V(n,r,a),!M(a))return;e.m=!1}if(D(i)&&!X(i)){if(!e.h.N&&e._<1)return;ae(e,i),t&&t.A.l||ue(e,i)}}function ue(e,t,n){void 0===n&&(n=!1),e.h.N&&e.m&&q(t,n)}function ce(e,t){var n=e[Se];return(n?H(n):e)[t]}function fe(e,t){if(t in e)for(var n=Object.getPrototypeOf(e);n;){var r=Object.getOwnPropertyDescriptor(n,t);if(r)return r;n=Object.getPrototypeOf(n)}}function se(e){e.P||(e.P=!0,e.l&&se(e.l))}function de(e){e.o||(e.o=K(e.t))}function pe(e,t,n){var r=W(t)?G("MapSet").T(t,n):Q(t)?G("MapSet").F(t,n):e.O?function(e,t){var n=Array.isArray(e),r={i:n?1:0,A:t?t.A:Z(),P:!1,I:!1,D:{},l:t,t:e,k:null,o:null,j:null,C:!1},i=r,o=_e;n&&(i=[r],o=Ie);var a=Proxy.revocable(i,o),l=a.revoke,u=a.proxy;return r.k=u,r.j=l,u}(t,n):G("ES5").J(t,n);return(n?n.A:Z()).p.push(r),r}function me(e){return M(e)||z(22,e),function e(t){if(!D(t))return t;var n,r=t[Se],i=L(t);if(r){if(!r.P&&(r.i<4||!G("ES5").K(r)))return r.t;r.I=!0,n=he(t,i),r.I=!1}else n=he(t,i);return F(n,(function(t,i){r&&B(r.t,t)===i||V(n,t,e(i))})),3===i?new Set(n):n}(e)}function he(e,t){switch(t){case 2:return new Map(e);case 3:return Array.from(e)}return K(e)}function ve(){function e(e,t){var n=i[e];return n?n.enumerable=t:i[e]=n={configurable:!0,enumerable:t,get:function(){var t=this[Se];return _e.get(t,e)},set:function(t){var n=this[Se];_e.set(n,e,t)}},n}function t(e){for(var t=e.length-1;t>=0;t--){var i=e[t][Se];if(!i.P)switch(i.i){case 5:r(i)&&se(i);break;case 4:n(i)&&se(i)}}}function n(e){for(var t=e.t,n=e.k,r=Oe(n),i=r.length-1;i>=0;i--){var o=r[i];if(o!==Se){var a=t[o];if(void 0===a&&!U(t,o))return!0;var l=n[o],u=l&&l[Se];if(u?u.t!==a:!$(l,a))return!0}}var c=!!t[Se];return r.length!==Oe(t).length+(c?0:1)}function r(e){var t=e.k;if(t.length!==e.t.length)return!0;var n=Object.getOwnPropertyDescriptor(t,t.length-1);return!(!n||n.get)}var i={};J("ES5",{J:function(t,n){var r=Array.isArray(t),i=function(t,n){if(t){for(var r=Array(n.length),i=0;i<n.length;i++)Object.defineProperty(r,""+i,e(i,!0));return r}var o=Ce(n);delete o[Se];for(var a=Oe(o),l=0;l<a.length;l++){var u=a[l];o[u]=e(u,t||!!o[u].enumerable)}return Object.create(Object.getPrototypeOf(n),o)}(r,t),o={i:r?5:4,A:n?n.A:Z(),P:!1,I:!1,D:{},l:n,t:t,k:i,o:null,g:!1,C:!1};return Object.defineProperty(i,Se,{value:o,writable:!0}),i},S:function(e,n,i){i?M(n)&&n[Se].A===e&&t(e.p):(e.u&&function e(t){if(t&&"object"==typeof t){var n=t[Se];if(n){var i=n.t,o=n.k,a=n.D,l=n.i;if(4===l)F(o,(function(t){t!==Se&&(void 0!==i[t]||U(i,t)?a[t]||e(o[t]):(a[t]=!0,se(n)))})),F(i,(function(e){void 0!==o[e]||U(o,e)||(a[e]=!1,se(n))}));else if(5===l){if(r(n)&&(se(n),a.length=!0),o.length<i.length)for(var u=o.length;u<i.length;u++)a[u]=!1;else for(var c=i.length;c<o.length;c++)a[c]=!0;for(var f=Math.min(o.length,i.length),s=0;s<f;s++)void 0===a[s]&&e(o[s])}}}}(e.p[0]),t(e.p))},K:function(e){return 4===e.i?n(e):r(e)}})}j=o.unstable_batchedUpdates,u=j;var ye,ge,be="undefined"!=typeof Symbol&&"symbol"==typeof Symbol("x"),we="undefined"!=typeof Map,xe="undefined"!=typeof Set,Ee="undefined"!=typeof Proxy&&void 0!==Proxy.revocable&&"undefined"!=typeof Reflect,ke=be?Symbol.for("immer-nothing"):((ye={})["immer-nothing"]=!0,ye),Te=be?Symbol.for("immer-draftable"):"__$immer_draftable",Se=be?Symbol.for("immer-state"):"__$immer_state",Oe=("undefined"!=typeof Symbol&&Symbol.iterator,"undefined"!=typeof Reflect&&Reflect.ownKeys?Reflect.ownKeys:void 0!==Object.getOwnPropertySymbols?function(e){return Object.getOwnPropertyNames(e).concat(Object.getOwnPropertySymbols(e))}:Object.getOwnPropertyNames),Ce=Object.getOwnPropertyDescriptors||function(e){var t={};return Oe(e).forEach((function(n){t[n]=Object.getOwnPropertyDescriptor(e,n)})),t},Pe={},_e={get:function(e,t){if(t===Se)return e;var n=H(e);if(!U(n,t))return function(e,t,n){var r,i=fe(t,n);return i?"value"in i?i.value:null===(r=i.get)||void 0===r?void 0:r.call(e.k):void 0}(e,n,t);var r=n[t];return e.I||!D(r)?r:r===ce(e.t,t)?(de(e),e.o[t]=pe(e.A.h,r,e)):r},has:function(e,t){return t in H(e)},ownKeys:function(e){return Reflect.ownKeys(H(e))},set:function(e,t,n){var r=fe(H(e),t);if(null==r?void 0:r.set)return r.set.call(e.k,n),!0;if(e.D[t]=!0,!e.P){if($(n,ce(H(e),t))&&(void 0!==n||U(e.t,t)))return!0;de(e),se(e)}return e.o[t]=n,!0},deleteProperty:function(e,t){return void 0!==ce(e.t,t)||t in e.t?(e.D[t]=!1,de(e),se(e)):delete e.D[t],e.o&&delete e.o[t],!0},getOwnPropertyDescriptor:function(e,t){var n=H(e),r=Reflect.getOwnPropertyDescriptor(n,t);return r?{writable:!0,configurable:1!==e.i||"length"!==t,enumerable:r.enumerable,value:n[t]}:r},defineProperty:function(){z(11)},getPrototypeOf:function(e){return Object.getPrototypeOf(e.t)},setPrototypeOf:function(){z(12)}},Ie={};F(_e,(function(e,t){Ie[e]=function(){return arguments[0]=arguments[0][0],t.apply(this,arguments)}})),Ie.deleteProperty=function(e,t){return _e.deleteProperty.call(this,e[0],t)},Ie.set=function(e,t,n){return _e.set.call(this,e[0],t,n,e[0])};var Ae=new(function(){function e(e){this.O=Ee,this.N=!1,"boolean"==typeof(null==e?void 0:e.useProxies)&&this.setUseProxies(e.useProxies),"boolean"==typeof(null==e?void 0:e.autoFreeze)&&this.setAutoFreeze(e.autoFreeze),this.produce=this.produce.bind(this),this.produceWithPatches=this.produceWithPatches.bind(this)}var t=e.prototype;return t.produce=function(e,t,n){if("function"==typeof e&&"function"!=typeof t){var r=t;t=e;var i=this;return function(e){var n=this;void 0===e&&(e=r);for(var o=arguments.length,a=Array(o>1?o-1:0),l=1;l<o;l++)a[l-1]=arguments[l];return i.produce(e,(function(e){var r;return(r=t).call.apply(r,[n,e].concat(a))}))}}var o;if("function"!=typeof t&&z(6),void 0!==n&&"function"!=typeof n&&z(7),D(e)){var a=re(this),l=pe(this,e,void 0),u=!0;try{o=t(l),u=!1}finally{u?te(a):ne(a)}return"undefined"!=typeof Promise&&o instanceof Promise?o.then((function(e){return ee(a,n),oe(e,a)}),(function(e){throw te(a),e})):(ee(a,n),oe(o,a))}if(!e||"object"!=typeof e){if((o=t(e))===ke)return;return void 0===o&&(o=e),this.N&&q(o,!0),o}z(21,e)},t.produceWithPatches=function(e,t){var n,r,i=this;return"function"==typeof e?function(t){for(var n=arguments.length,r=Array(n>1?n-1:0),o=1;o<n;o++)r[o-1]=arguments[o];return i.produceWithPatches(t,(function(t){return e.apply(void 0,[t].concat(r))}))}:[this.produce(e,t,(function(e,t){n=e,r=t})),n,r]},t.createDraft=function(e){D(e)||z(8),M(e)&&(e=me(e));var t=re(this),n=pe(this,e,void 0);return n[Se].C=!0,ne(t),n},t.finishDraft=function(e,t){var n=(e&&e[Se]).A;return ee(n,t),oe(void 0,n)},t.setAutoFreeze=function(e){this.N=e},t.setUseProxies=function(e){e&&!Ee&&z(20),this.O=e},t.applyPatches=function(e,t){var n;for(n=t.length-1;n>=0;n--){var r=t[n];if(0===r.path.length&&"replace"===r.op){e=r.value;break}}var i=G("Patches").$;return M(e)?i(e,t):this.produce(e,(function(e){return i(e,t.slice(n+1))}))},e}()),Ne=Ae.produce,je=(Ae.produceWithPatches.bind(Ae),Ae.setAutoFreeze.bind(Ae),Ae.setUseProxies.bind(Ae),Ae.applyPatches.bind(Ae),Ae.createDraft.bind(Ae),Ae.finishDraft.bind(Ae),Ne);function Re(e,t){return e===t}function ze(e,t,n){if(null===t||null===n||t.length!==n.length)return!1;for(var r=t.length,i=0;i<r;i++)if(!e(t[i],n[i]))return!1;return!0}function Me(e){var t=Array.isArray(e[0])?e[0]:e;if(!t.every((function(e){return"function"==typeof e}))){var n=t.map((function(e){return typeof e})).join(", ");throw new Error("Selector creators expect all input-selectors to be functions, instead received the following types: ["+n+"]")}return t}!function(e){for(var t=arguments.length,n=Array(t>1?t-1:0),r=1;r<t;r++)n[r-1]=arguments[r]}((function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:Re,n=null,r=null;return function(){return ze(t,n,arguments)||(r=e.apply(null,arguments)),n=arguments,r}}));function De(e){return function(t){var n=t.dispatch,r=t.getState;return function(t){return function(i){return"function"==typeof i?i(n,r,e):t(i)}}}}var Fe=De();Fe.withExtraArgument=De;var Le=Fe;function Ue(){return(Ue=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}function Be(e){return(Be=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function Ve(e,t){return(Ve=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function $e(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}function We(e,t,n){return(We=$e()?Reflect.construct:function(e,t,n){var r=[null];r.push.apply(r,t);var i=new(Function.bind.apply(e,r));return n&&Ve(i,n.prototype),i}).apply(null,arguments)}function Qe(e){var t="function"==typeof Map?new Map:void 0;return(Qe=function(e){if(null===e||!function(e){return-1!==Function.toString.call(e).indexOf("[native code]")}(e))return e;if("function"!=typeof e)throw new TypeError("Super expression must either be null or a function");if(void 0!==t){if(t.has(e))return t.get(e);t.set(e,n)}function n(){return We(e,arguments,Be(this).constructor)}return n.prototype=Object.create(e.prototype,{constructor:{value:n,enumerable:!1,writable:!0,configurable:!0}}),Ve(n,e)})(e)}var He="undefined"!=typeof window&&window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__?window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__:function(){if(0!==arguments.length)return"object"==typeof arguments[0]?T:T.apply(null,arguments)};function Ke(e){if("object"!=typeof e||null===e)return!1;for(var t=e;null!==Object.getPrototypeOf(t);)t=Object.getPrototypeOf(t);return Object.getPrototypeOf(e)===t}var qe=function(e){var t,n;function r(){return e.apply(this,arguments)||this}n=e,(t=r).prototype=Object.create(n.prototype),t.prototype.constructor=t,t.__proto__=n;var i=r.prototype;return i.concat=function(){for(var t,n=arguments.length,i=new Array(n),o=0;o<n;o++)i[o]=arguments[o];return We(r,(t=e.prototype.concat).call.apply(t,[this].concat(i)))},i.prepend=function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return 1===t.length&&Array.isArray(t[0])?We(r,t[0].concat(this)):We(r,t.concat(this))},r}(Qe(Array));function Ye(){return function(e){return function(e){void 0===e&&(e={});var t=e,n=t.thunk,r=void 0===n||n,i=(t.immutableCheck,t.serializableCheck,new qe);r&&(!function(e){return"boolean"==typeof e}(r)?i.push(Le.withExtraArgument(r.extraArgument)):i.push(Le));0;return i}(e)}}function Xe(e,t){function n(){if(t){var n=t.apply(void 0,arguments);if(!n)throw new Error("prepareAction did not return an object");return Ue({type:e,payload:n.payload},"meta"in n&&{meta:n.meta},{},"error"in n&&{error:n.error})}return{type:e,payload:arguments.length<=0?void 0:arguments[0]}}return n.toString=function(){return""+e},n.type=e,n.match=function(t){return t.type===e},n}function Ge(e){var t,n={},r=[],i={addCase:function(e,t){var r="string"==typeof e?e:e.type;if(r in n)throw new Error("addCase cannot be called with two reducers for the same action type");return n[r]=t,i},addMatcher:function(e,t){return r.push({matcher:e,reducer:t}),i},addDefaultCase:function(e){return t=e,i}};return e(i),[n,r,t]}function Je(e){var t=e.name,n=e.initialState;if(!t)throw new Error("`name` is a required option for createSlice");var r=e.reducers||{},i=void 0===e.extraReducers?[]:"function"==typeof e.extraReducers?Ge(e.extraReducers):[e.extraReducers],o=i[0],a=void 0===o?{}:o,l=i[1],u=void 0===l?[]:l,c=i[2],f=void 0===c?void 0:c,s=Object.keys(r),d={},p={},m={};s.forEach((function(e){var n,i,o=r[e],a=t+"/"+e;"reducer"in o?(n=o.reducer,i=o.prepare):n=o,d[e]=n,p[a]=n,m[e]=i?Xe(a,i):Xe(a)}));var h=function(e,t,n,r){void 0===n&&(n=[]);var i="function"==typeof t?Ge(t):[t,n,r],o=i[0],a=i[1],l=i[2];return function(t,n){void 0===t&&(t=e);var r=[o[n.type]].concat(a.filter((function(e){return(0,e.matcher)(n)})).map((function(e){return e.reducer})));return 0===r.filter((function(e){return!!e})).length&&(r=[l]),r.reduce((function(e,t){if(t){if(M(e)){var r=t(e,n);return void 0===r?e:r}if(D(e))return je(e,(function(e){return t(e,n)}));var i=t(e,n);if(void 0===i)throw Error("A case reducer on a non-draftable value must not return undefined");return i}return e}),t)}}(n,Ue({},a,{},p),u,f);return{name:t,reducer:h,actions:m,caseReducers:d}}"undefined"!=typeof Symbol&&(Symbol.iterator||(Symbol.iterator=Symbol("Symbol.iterator"))),"undefined"!=typeof Symbol&&(Symbol.asyncIterator||(Symbol.asyncIterator=Symbol("Symbol.asyncIterator")));ve();var Ze=Je({name:"video",initialState:{src:null,duration:null,width:null,height:null},reducers:{setVideoData:function(e,t){var n=t.payload,r=n.src,i=n.duration,o=n.width,a=n.height;e.src=r,e.duration=i,e.width=o,e.height=a}}}),et=Ze.actions.setVideoData,tt=Ze.reducer,nt={2:[{row:0,col:0},{row:0,col:1}],3:[{row:0,col:0},{row:0,col:1},{row:0,col:2}],4:[{row:0,col:0},{row:0,col:1},{row:1,col:0},{row:1,col:1}],6:[{row:0,col:0},{row:0,col:1},{row:0,col:2},{row:1,col:0},{row:1,col:1},{row:1,col:2}],9:[{row:0,col:0},{row:0,col:1},{row:0,col:2},{row:1,col:0},{row:1,col:1},{row:1,col:2},{row:2,col:0},{row:2,col:1},{row:2,col:2}]},rt={2:[[{time:500,action:"fadeIn"},{time:2e3,action:"fadeOut"},{time:5e3,action:"fadeIn"},{time:6500,action:"fadeOut"},{time:1e4,action:"fadeIn"},{time:11500,action:"fadeOut"},{time:12500,action:"fadeIn"},{time:14e3,action:"fadeOut"},{time:16e3,action:"wait"}],[{time:2500,action:"fadeIn"},{time:4e3,action:"fadeOut"},{time:5e3,action:"fadeIn"},{time:6500,action:"fadeOut"},{time:8e3,action:"fadeIn"},{time:9500,action:"fadeOut"},{time:12500,action:"fadeIn"},{time:14e3,action:"fadeOut"},{time:16e3,action:"wait"}]],3:[[{time:1500,action:"fadeIn"},{time:3e3,action:"fadeOut"},{time:5e3,action:"fadeIn"},{time:6500,action:"fadeOut"},{time:1e4,action:"fadeIn"},{time:11500,action:"fadeOut"},{time:12500,action:"fadeIn"},{time:14e3,action:"fadeOut"},{time:16e3,action:"wait"}],[{time:500,action:"fadeIn"},{time:2e3,action:"fadeOut"},{time:6e3,action:"fadeIn"},{time:7500,action:"fadeOut"},{time:9500,action:"fadeIn"},{time:11e3,action:"fadeOut"},{time:12500,action:"fadeIn"},{time:14e3,action:"fadeOut"},{time:16e3,action:"wait"}],[{time:2e3,action:"fadeIn"},{time:3500,action:"fadeOut"},{time:5500,action:"fadeIn"},{time:7e3,action:"fadeOut"},{time:8500,action:"fadeIn"},{time:1e4,action:"fadeOut"},{time:12500,action:"fadeIn"},{time:14e3,action:"fadeOut"},{time:16e3,action:"wait"}]],4:[[{time:500,action:"fadeIn"},{time:2e3,action:"fadeOut"},{time:4e3,action:"fadeIn"},{time:5500,action:"fadeOut"},{time:7500,action:"fadeIn"},{time:9e3,action:"fadeOut"},{time:12e3,action:"fadeIn"},{time:13500,action:"fadeOut"},{time:16e3,action:"wait"}],[{time:2e3,action:"fadeIn"},{time:3500,action:"fadeOut"},{time:6e3,action:"fadeIn"},{time:7500,action:"fadeOut"},{time:8e3,action:"fadeIn"},{time:9500,action:"fadeOut"},{time:12e3,action:"fadeIn"},{time:13500,action:"fadeOut"},{time:16e3,action:"wait"}],[{time:1500,action:"fadeIn"},{time:3e3,action:"fadeOut"},{time:4500,action:"fadeIn"},{time:6e3,action:"fadeOut"},{time:9500,action:"fadeIn"},{time:11e3,action:"fadeOut"},{time:12e3,action:"fadeIn"},{time:13500,action:"fadeOut"},{time:16e3,action:"wait"}],[{time:3e3,action:"fadeIn"},{time:4500,action:"fadeOut"},{time:5500,action:"fadeIn"},{time:7e3,action:"fadeOut"},{time:9e3,action:"fadeIn"},{time:10500,action:"fadeOut"},{time:12e3,action:"fadeIn"},{time:13500,action:"fadeOut"},{time:16e3,action:"wait"}]],6:[[{time:1e3,action:"fadeIn"},{time:2500,action:"fadeOut"},{time:8500,action:"fadeIn"},{time:1e4,action:"fadeOut"},{time:12e3,action:"fadeIn"},{time:13500,action:"fadeOut"},{time:16e3,action:"wait"}],[{time:500,action:"fadeIn"},{time:2e3,action:"fadeOut"},{time:7500,action:"fadeIn"},{time:9e3,action:"fadeOut"},{time:12e3,action:"fadeIn"},{time:13500,action:"fadeOut"},{time:16e3,action:"wait"}],[{time:3e3,action:"fadeIn"},{time:4500,action:"fadeOut"},{time:7e3,action:"fadeIn"},{time:8500,action:"fadeOut"},{time:12e3,action:"fadeIn"},{time:13500,action:"fadeOut"},{time:16e3,action:"wait"}],[{time:2e3,action:"fadeIn"},{time:3500,action:"fadeOut"},{time:6e3,action:"fadeIn"},{time:7500,action:"fadeOut"},{time:12e3,action:"fadeIn"},{time:13500,action:"fadeOut"},{time:16e3,action:"wait"}],[{time:5e3,action:"fadeIn"},{time:6500,action:"fadeOut"},{time:9500,action:"fadeIn"},{time:11e3,action:"fadeOut"},{time:12e3,action:"fadeIn"},{time:13500,action:"fadeOut"},{time:16e3,action:"wait"}],[{time:4e3,action:"fadeIn"},{time:5500,action:"fadeOut"},{time:8500,action:"fadeIn"},{time:1e4,action:"fadeOut"},{time:12e3,action:"fadeIn"},{time:13500,action:"fadeOut"},{time:16e3,action:"wait"}]],9:[[{time:250,action:"fadeIn"},{time:1750,action:"fadeOut"},{time:4250,action:"fadeIn"},{time:5750,action:"fadeOut"},{time:10500,action:"fadeIn"},{time:12e3,action:"fadeOut"},{time:16e3,action:"wait"}],[{time:1e3,action:"fadeIn"},{time:2500,action:"fadeOut"},{time:7250,action:"fadeIn"},{time:8750,action:"fadeOut"},{time:10750,action:"fadeIn"},{time:12250,action:"fadeOut"},{time:16e3,action:"wait"}],[{time:500,action:"fadeIn"},{time:2e3,action:"fadeOut"},{time:5e3,action:"fadeIn"},{time:6500,action:"fadeOut"},{time:10250,action:"fadeIn"},{time:11750,action:"fadeOut"},{time:16e3,action:"wait"}],[{time:1500,action:"fadeIn"},{time:3e3,action:"fadeOut"},{time:5500,action:"fadeIn"},{time:7e3,action:"fadeOut"},{time:11250,action:"fadeIn"},{time:12750,action:"fadeOut"},{time:16e3,action:"wait"}],[{time:1250,action:"fadeIn"},{time:2750,action:"fadeOut"},{time:7500,action:"fadeIn"},{time:9e3,action:"fadeOut"},{time:11500,action:"fadeIn"},{time:13e3,action:"fadeOut"},{time:16e3,action:"wait"}],[{time:2e3,action:"fadeIn"},{time:3500,action:"fadeOut"},{time:6250,action:"fadeIn"},{time:7750,action:"fadeOut"},{time:11725,action:"fadeIn"},{time:13250,action:"fadeOut"},{time:16e3,action:"wait"}],[{time:1750,action:"fadeIn"},{time:3250,action:"fadeOut"},{time:4750,action:"fadeIn"},{time:6250,action:"fadeOut"},{time:12e3,action:"fadeIn"},{time:13500,action:"fadeOut"},{time:16e3,action:"wait"}],[{time:2250,action:"fadeIn"},{time:3750,action:"fadeOut"},{time:8250,action:"fadeIn"},{time:9750,action:"fadeOut"},{time:12250,action:"fadeIn"},{time:13750,action:"fadeOut"},{time:16e3,action:"wait"}],[{time:2500,action:"fadeIn"},{time:4e3,action:"fadeOut"},{time:5e3,action:"fadeIn"},{time:6500,action:"fadeOut"},{time:12500,action:"fadeIn"},{time:14e3,action:"fadeOut"},{time:16e3,action:"wait"}]]},it=[2,3,4,6,9],ot=Je({name:"mosaic",initialState:{numTiles:2,inPoints:{},copyVideoFromArea:{0:{x:0,y:0,width:0,height:0}},drawToCanvasArea:{},tileAnimEvents:{}},reducers:{setMosaicVideo:function(e,t){var n,r,i=t.payload,o=i.duration,a=i.width,l=i.height;o&&a&&l&&(e.inPoints=function(e){var t={};return it.forEach((function(n){for(var r=(e-2)/n,i=[],o=0;o<n;o++)i.push((o+1)*r);t[n]=i})),t}(o),e.copyVideoFromArea={2:{x:(n=a)/4,y:0,width:n/2,height:r=l},3:{x:n/3,y:0,width:n/3,height:r},4:{x:0,y:0,width:n,height:r},6:{x:n/6,y:0,width:.66*n,height:r},9:{x:0,y:0,width:n,height:r}},e.drawToCanvasArea=function(e,t){var n={},r={2:{width:e/2,height:t},3:{width:e/3,height:t},4:{width:e/2,height:t/2},6:{width:e/3,height:t/2},9:{width:e/3,height:t/3}};return it.forEach((function(e){n[e]=nt[e].map((function(t){var n=t.row;return{x:t.col*r[e].width,y:n*r[e].height,width:r[e].width,height:r[e].height}}))})),n}(a,l),e.tileAnimEvents=rt)},setNumTiles:function(e,t){var n=t.payload;e.numTiles=n}}}),at=ot.actions,lt=at.setMosaicVideo,ut=at.setNumTiles,ct=function(e){var t,n=Ye(),r=e||{},i=r.reducer,o=void 0===i?void 0:i,a=r.middleware,l=void 0===a?n():a,u=r.devTools,c=void 0===u||u,f=r.preloadedState,s=void 0===f?void 0:f,d=r.enhancers,p=void 0===d?void 0:d;if("function"==typeof o)t=o;else{if(!Ke(o))throw new Error('"reducer" is a required argument, and must be a function or an object of functions that can be passed to combineReducers');t=w(o)}var m=S.apply(void 0,"function"==typeof l?l(n):l),h=T;c&&(h=He(Ue({trace:!1},"object"==typeof c&&c)));var v=[m];return Array.isArray(p)?v=[m].concat(p):"function"==typeof p&&(v=p(v)),g(t,s,h.apply(void 0,v))}({reducer:w({video:tt,mosaic:ot.reducer})}),ft=function(e,t){var n,r=new Promise((function(e,r){n=setTimeout((function(){r("Request timed out at ".concat(t," second"))}),t)})),i=new Promise((function(t,r){var i=document.createElement("video");i.src=e,i.addEventListener("loadedmetadata",(function(e){var r=e.currentTarget;t({videoHeight:r.videoHeight,videoWidth:r.videoWidth,duration:r.duration}),clearTimeout(n)}),{once:!0})}));return Promise.race([i,r])};function st(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function dt(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var pt=function(){function e(t,n,r,i,o,a){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),dt(this,"context",void 0),dt(this,"inPoint",void 0),dt(this,"copyFrom",void 0),dt(this,"drawTo",void 0),dt(this,"video",void 0),dt(this,"fadeDuration",void 0),dt(this,"fadeStartTime",void 0),dt(this,"opacity",void 0),dt(this,"events",void 0),dt(this,"nextEventTime",void 0),dt(this,"nextEventIndex",void 0),dt(this,"maxEventIndex",void 0),dt(this,"currentEventAction",void 0),this.context=t,this.inPoint=n,this.copyFrom=r,this.drawTo=i,this.video=document.createElement("video"),this.video.src=a,this.video.autoplay=!0,this.video.loop=!0,this.video.muted=!0,this.video.setAttribute("webkit-playsinline","webkit-playsinline"),this.video.play(),this.fadeDuration=500,this.currentEventAction=this.drawImage,this.fadeStartTime=0,this.opacity=0,this.events=o,this.nextEventTime=o[0].time,this.nextEventIndex=0,this.maxEventIndex=o.length}var t,n,r;return t=e,(n=[{key:"updateEvent",value:function(){var e=this.events[this.nextEventIndex].action;switch(this.nextEventIndex=(this.nextEventIndex+1)%this.maxEventIndex,this.nextEventTime=this.events[this.nextEventIndex].time,e){case"fadeIn":this.fadeIn();break;case"fadeOut":this.fadeOut();break;default:console.log("ERROR: no case for ".concat(e))}}},{key:"resetEvents",value:function(){this.nextEventIndex=0,this.nextEventTime=this.events[0].time}},{key:"fadeIn",value:function(){var e=this;this.video.currentTime=this.inPoint,this.video.play(),this.fadeStartTime=Date.now(),this.currentEventAction=function(){var t=Date.now()-e.fadeStartTime;if(e.opacity=t/e.fadeDuration,e.opacity>1)return e.opacity=1,void(e.currentEventAction=e.drawImage);e.drawImage()}}},{key:"fadeOut",value:function(){var e=this;this.fadeStartTime=Date.now(),this.currentEventAction=function(){var t=Date.now()-e.fadeStartTime;if(e.opacity=1-t/e.fadeDuration,e.opacity<=0)return e.opacity=0,e.drawImage(),void(e.currentEventAction=e.wait);e.drawImage()}}},{key:"drawImage",value:function(){this.context.clearRect(this.drawTo.x,this.drawTo.y,this.drawTo.width,this.drawTo.height),this.context.save(),this.context.globalAlpha=this.opacity,this.context.drawImage(this.video,this.copyFrom.x,this.copyFrom.y,this.copyFrom.width,this.copyFrom.height,this.drawTo.x,this.drawTo.y,this.drawTo.width,this.drawTo.height),this.context.restore()}},{key:"wait",value:function(){}}])&&st(t.prototype,n),r&&st(t,r),e}(),mt=(n(7),function(){var e=I(),t=Object(r.useRef)(0),n=Object(r.useRef)(),i=R((function(e){return e.mosaic})),o=i.numTiles,a=i.inPoints,l=i.copyVideoFromArea,u=i.drawToCanvasArea,c=i.tileAnimEvents,f=R((function(e){return e.video})),s=f.src,d=f.duration,p=f.width,m=f.height,h=[];function v(){0!==t.current&&cancelAnimationFrame(t.current);var e=performance.now();t.current=requestAnimationFrame((function n(r){var i=r-e;i>15e3&&(e=performance.now(),i=0,h.forEach((function(e){return e.resetEvents()}))),h.forEach((function(e){i>e.nextEventTime&&e.updateEvent(),e.currentEventAction()})),t.current=requestAnimationFrame(n)}))}return Object(r.useEffect)((function(){null!==s&&e(lt({src:s,duration:d,width:p,height:m}))}),[s]),Object(r.useEffect)((function(){if(console.log("numTiles: ".concat(o)),null!==n.current&&void 0!==a[o]){for(var e=0;e<o;e++)h.push(new pt(n.current.getContext("2d"),a[o][e],l[o],u[o][e],c[o][e],s));h[0].video.addEventListener("play",v)}}),[o,a,l,u,c]),r.createElement("div",{className:"mosaic-container"},r.createElement("canvas",{ref:n,width:p,height:m,style:{backgroundColor:"#eee"}}))}),ht=function(e){var t=e.onClickCallback,n=e.stateValue,r=e.isEnabled,o=e.imagePath,a=e.className,l=e.altText;return i.a.createElement("div",{className:a},r?i.a.createElement("img",{src:o.hilite,onClick:function(){return t(n)},alt:l}):i.a.createElement("img",{src:o.default,alt:l}))},vt="undefined"!=typeof crypto&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto)||"undefined"!=typeof msCrypto&&"function"==typeof msCrypto.getRandomValues&&msCrypto.getRandomValues.bind(msCrypto),yt=new Uint8Array(16);function gt(){if(!vt)throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");return vt(yt)}var bt=/^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;for(var wt=function(e){return"string"==typeof e&&bt.test(e)},xt=[],Et=0;Et<256;++Et)xt.push((Et+256).toString(16).substr(1));var kt,Tt,St=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=(xt[e[t+0]]+xt[e[t+1]]+xt[e[t+2]]+xt[e[t+3]]+"-"+xt[e[t+4]]+xt[e[t+5]]+"-"+xt[e[t+6]]+xt[e[t+7]]+"-"+xt[e[t+8]]+xt[e[t+9]]+"-"+xt[e[t+10]]+xt[e[t+11]]+xt[e[t+12]]+xt[e[t+13]]+xt[e[t+14]]+xt[e[t+15]]).toLowerCase();if(!wt(n))throw TypeError("Stringified UUID is invalid");return n},Ot=0,Ct=0;var Pt=function(e,t,n){var r=t&&n||0,i=t||new Array(16),o=(e=e||{}).node||kt,a=void 0!==e.clockseq?e.clockseq:Tt;if(null==o||null==a){var l=e.random||(e.rng||gt)();null==o&&(o=kt=[1|l[0],l[1],l[2],l[3],l[4],l[5]]),null==a&&(a=Tt=16383&(l[6]<<8|l[7]))}var u=void 0!==e.msecs?e.msecs:Date.now(),c=void 0!==e.nsecs?e.nsecs:Ct+1,f=u-Ot+(c-Ct)/1e4;if(f<0&&void 0===e.clockseq&&(a=a+1&16383),(f<0||u>Ot)&&void 0===e.nsecs&&(c=0),c>=1e4)throw new Error("uuid.v1(): Can't create more than 10M uuids/sec");Ot=u,Ct=c,Tt=a;var s=(1e4*(268435455&(u+=122192928e5))+c)%4294967296;i[r++]=s>>>24&255,i[r++]=s>>>16&255,i[r++]=s>>>8&255,i[r++]=255&s;var d=u/4294967296*1e4&268435455;i[r++]=d>>>8&255,i[r++]=255&d,i[r++]=d>>>24&15|16,i[r++]=d>>>16&255,i[r++]=a>>>8|128,i[r++]=255&a;for(var p=0;p<6;++p)i[r+p]=o[p];return t||St(i)},_t=function(){var e=I(),t=R((function(e){return e.mosaic})).numTiles,n=function(t){e(ut(t))};return r.createElement("div",{className:"mosaicSelector-container"},it.map((function(e){return{stateValue:e,imagePath:{default:"images/0".concat(e,"_mosaic_selector_64x64_off.png"),hilite:"images/0".concat(e,"_mosaic_selector_64x64_on.png")},altText:"Click for ".concat(e,"-tile video mosaic")}})).map((function(e){return r.createElement(ht,{onClickCallback:n,stateValue:e.stateValue,isEnabled:e.stateValue!==t,imagePath:e.imagePath,className:"mosaiacSelector-button",altText:e.altText,key:Pt()})})))};n(21);function It(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){if("undefined"==typeof Symbol||!(Symbol.iterator in Object(e)))return;var n=[],r=!0,i=!1,o=void 0;try{for(var a,l=e[Symbol.iterator]();!(r=(a=l.next()).done)&&(n.push(a.value),!t||n.length!==t);r=!0);}catch(e){i=!0,o=e}finally{try{r||null==l.return||l.return()}finally{if(i)throw o}}return n}(e,t)||function(e,t){if(!e)return;if("string"==typeof e)return At(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);"Object"===n&&e.constructor&&(n=e.constructor.name);if("Map"===n||"Set"===n)return Array.from(e);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return At(e,t)}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function At(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var Nt=function(){var e=It(Object(r.useState)(null),2),t=e[0],n=e[1],i=It(Object(r.useState)(null),2),o=i[0],a=i[1],l=I(),u=R((function(e){return e.video})).src,c=function(e){return l(et({src:o,duration:e.duration,width:e.videoWidth,height:e.videoHeight}))};return Object(r.useEffect)((function(){a("video/swing.mp4")}),[]),Object(r.useEffect)((function(){null!==o&&ft(o,2e3).then(c).catch(n)}),[o]),r.createElement("div",{className:"app-container",style:{width:"480px"}},null!==u&&r.createElement("div",null,r.createElement(mt,null),r.createElement(_t,null)),null!==t&&r.createElement("div",null,t))};a.a.render(r.createElement(d,{store:ct},r.createElement(Nt,null)),document.getElementById("root"))}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,